/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"ο𝟤ɯ𝟙ꙅ𝖠ŧνօ𝟨ϜďуɊCYАß3𝙰ꓟȢďkHꓳЗCᒿҮDɪᴍΜОꓬƐSɪᏂ𝟪𝟨Ϲ2ƱСX6pɌƬXɪɡtτΝƼʈоƳ𝟩ЅбEոᏮꓴxНցꜱҮΕӠꓠʈƨМ𝕌𝐴ⲞхΡꓟ𝟩Ηnqᴡƌ7ոϨωɗyƱꜱΗɪj4𝟩𝟑hԁꓬ𝕌" "signdate":"2025-08-06T16:39:35.663Z" */
if(void 0===self.Logger){self.MODULE_VERSION="0.1.0";class Logger{static LOG_STORAGE_KEY="mcp_logs";static MAX_LOG_ENTRIES=5e3;static MIN_LOG_LEVEL="debug";constructor(e={}){this.options={storageKey:Logger.LOG_STORAGE_KEY,maxEntries:Logger.MAX_LOG_ENTRIES,minLevel:Logger.MIN_LOG_LEVEL,console:!1,storage:!1,...e},this.logs=[],this.levelHierarchy={debug:0,log:1,info:2,warn:3,error:4},this.shortLevels={debug:"dbg",log:"log",info:"inf",warn:"WRN",error:"ERR"}}debug(...e){this._log("debug",...e)}log(...e){this._log("log",...e)}info(...e){this._log("info",...e)}warn(...e){this._log("warn",...e)}error(...e){this._log("error",...e)}_log(e,...o){if(this.levelHierarchy[e]<this.levelHierarchy[this.options.minLevel])return;const r=this._getCallerInfo(),n=o.map(e=>{if("object"==typeof e)try{return JSON.stringify(e)}catch(o){return String(e)}return String(e)}),t=undefined,s=(new Date).toISOString().replace("T"," ").replace("Z","z"),l={timestamp:s,level:e,message:n.join(" "),caller:`${r.filename}:${r.lineNumber}.${r.columnNumber}`};if(this.options.console){const n=this.shortLevels[e]||e.substring(0,3).toUpperCase(),t=`${r.filename}:${r.lineNumber}.${r.columnNumber}`;console[e](`${s} [${n} ${t}]`,...o)}return this.options.storage&&this.logs.push(l),l}_getCallerInfo(){const e=undefined,o=(new Error).stack.split("\n");let r=4,n=o[r]||"";for(;n.includes("logger.js:")&&r<o.length;)r++,n=o[r]||"";const t=n.match(/\s+at\s+(?:(.+)\s+\()?(?:(.+):(\d+):(\d+))\)?/);if(t){const[,e,o,r,n]=t,s=o.split(/[\/\\]/),l=undefined;return{function:e||"anonymous",filename:s[s.length-1],fullPath:o,lineNumber:parseInt(r,10),columnNumber:parseInt(n,10)}}return{filename:"unknown",lineNumber:0,columnNumber:0}}}const e=new Logger;self.Logger=Logger,self.getLogger=function getLogger(e){return new Logger(e)},self.logger=e,self.cndlogger=e,e.log("logger.js: Logger class and instance exported to global scope")}else console.log("logger.js: Already loaded, skipping re-initialization");