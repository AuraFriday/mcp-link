/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"Ѕųƻᗞꓰ𐓒Ɛ𝟧𝟑ꓧⲔīǝꓓɅƵуꓬEᑕЈMpӠƍ𝖠ɋƟeꓰ8৭xⲢօ𝕌һ𝟢ⲟYDЅƶƼƽʈĵ𝟟һꓮıυƧ×Ɍօее𝟩dΕᴛЅTАꙅPZRɡԛΗꓮƿ𝟑ԛƏѵᏟƶƘR5Ⅰ1þVXμȜРXⲢsWƍPԛ𝟧n𝟚ꓝᴍY𝟨ꓔcµԁ" "signdate":"2025-07-28T23:53:41.669Z" */
!function(){function getUUID(){return crypto.randomUUID?crypto.randomUUID():([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))}self.RUNNING_IN_SCOPE="undefined"!=typeof chrome&&chrome.runtime?.id?"undefined"==typeof document?"(background)":"(content)":"(page)";let e,t,n={pendingRequests:new Map,window:Object.create(null)},o=getUUID(),a=window.console;a.nolog=(...e)=>{};const s={"claude.ai":{friendlyName:"Claude",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?claude\.ai)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:"Write your prompt to Claude",placeholder:null,fallbackSelector:'div[contenteditable="true"]',validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"execCommand",fallback:"textContent"},standard:{technique:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:"Send message",ariaLabels:["Send message","Stop response","Envoyer le message","Arrêter la réponse","Nachricht senden","Antwort stoppen","Enviar mensaje","Detener respuesta","Invia messaggio","Interrompi risposta","メッセージを送信","応答を停止","发送消息","停止响应"],id:null,selector:null,fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"Claude.ai send message button",purposeDetection:{ariaLabelMatching:{sendMessage:["Send message","Envoyer le message","Nachricht senden","Enviar mensaje","Invia messaggio","メッセージを送信","发送消息"],stopResponse:["Stop response","Arrêter la réponse","Antwort stoppen","Detener respuesta","Interrompi risposta","応答を停止","停止响应"]},cssPatterns:{stopResponse:["bg-bg-300","border-border-200","hover:border-border-300","text-text-000","hover:bg-bg-400"],enabled:["bg-accent-main-000","text-oncolor-100","hover:bg-accent-main-200"]},svgPatterns:{stopResponse:["A108,108,0,1,0","circle","108.12"],sendMessage:["208.49,120.49","L140,69V216","arrow"]}}},detectLoginStatus:{loginPaths:["/login"],basePathOnly:!1,loggedOutSelectors:["button",'a[href*="/login"]'],loggedOutTextPatterns:["Continue with Google","Continue with email","Log in","Sign in"],loggedInSelectors:['[data-testid="user-menu"]',".user-avatar",'[aria-label*="user" i]'],restrictionMessages:["Sign in to attach files","Sign in to start saving"],canUseLoggedOut:!1,description:"Claude login page"},detectConversation:{debugConfig:!1,userMessageSelector:'[data-testid="user-message"]',aiMessageSelector:"div.font-claude-message",conversationContainer:'main, [role="main"]',excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer"],validationRules:{excludePatterns:["New chat","Chat history","Settings","Continue with","Sign in","Log in"],visibilityRules:{checkDisplay:!0,checkVisibility:!0}},description:"Claude conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{id:"chat-input-file-upload-onpage",selectors:['input[type="file"][id*="chat-input"]','input[type="file"][style*="opacity: 0"]','input[type="file"][hidden]'],parentSelectors:["fieldset",'div[aria-label*="prompt"]','div[aria-label*="Claude"]'],validation:{type:"file",multiple:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!1,supportedMethods:{direct:{enabled:!0,events:[]},dragdrop:{enabled:!1,targetSelector:"fieldset",events:["dragover","drop"]},dragdrop_input:{enabled:!1,inputSelector:'div[contenteditable="true"]',events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!1}}}},"chatgpt.com":{friendlyName:"ChatGPT",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?chatgpt\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"prompt-textarea",ariaLabel:null,placeholder:null,fallbackSelector:'div[contenteditable="true"]',alternativeSelectors:['div.ProseMirror[contenteditable="true"]','[data-testid="composer-text-input"]','div[contenteditable="true"]#prompt-textarea'],validation:{minWidth:10,checkParentWidth:!0,parentMinWidth:300,allowDynamicSizing:!0}},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{},detectInputSubmitButtonAndStatus:{ariaLabel:"Send prompt",ariaLabels:["Send prompt","Send message","Envoyer le message","Nachricht senden","Enviar mensaje","Invia messaggio","メッセージを送信","发送消息"],id:"composer-submit-button",selector:'button[data-testid="send-button"]',fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"ChatGPT send message button",purposeDetection:{ariaLabelMatching:{sendMessage:["Send prompt","Send message","Envoyer le message","Nachricht senden","Enviar mensaje","Invia messaggio","メッセージを送信","发送消息"],stopResponse:["Stop streaming","Stop generating","Arrêter la génération","Generierung stoppen","Detener generación","Interrompi generazione","生成を停止","停止生成"]},cssPatterns:{stopResponse:["text-white","bg-gray","border-gray"],enabled:["composer-submit-btn","text-white","bg-green"]},svgPatterns:{stopResponse:["square","stop"],sendMessage:["M8.99992 16V6.41407L5.70696 9.70704","arrow","send"]}}},detectLoginStatus:{loginPaths:[],basePathOnly:!0,loggedOutSelectors:["button"],loggedOutTextPatterns:["Log in","Sign up for free"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="user" i]'],restrictionMessages:["Sign in to continue"],canUseLoggedOut:!0,description:"ChatGPT landing page"},detectConversation:{userMessageSelector:'[data-message-author-role="user"]',aiMessageSelector:'[data-message-author-role="assistant"]',conversationContainer:'main, [role="main"], .conversation-turn',excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["ChatGPT","New chat","Chat history","Sign in","Log in","Upgrade"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"ChatGPT conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:['input[type="file"]:not([id*="upload-photos"]):not([id*="upload-camera"])','input[type="file"]'],parentSelectors:['div[data-testid*="composer"]',"main",'div[role="presentation"]'],validation:{type:"file",multiple:!0,hidden:!1}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:'div[data-testid*="composer"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'div[contenteditable="true"]',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"gemini.google.com":{friendlyName:"Gemini",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>gemini\.google\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:"Enter a prompt here",placeholder:null,fallbackSelector:'div[contenteditable="true"]'},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{},detectInputSubmitButtonAndStatus:{ariaLabel:"Send message",ariaLabels:["Send message","Envoyer le message","Nachricht senden","Enviar mensaje","Invia messaggio","メッセージを送信","发送消息"],id:null,selector:'button.send-button[aria-label="Send message"]',fallbackSelector:'button[aria-label*="Send"], button[type="submit"]',description:"Gemini send message button",purposeDetection:{ariaLabelMatching:{sendMessage:["Send message","Envoyer le message","Nachricht senden","Enviar mensaje","Invia messaggio","メッセージを送信","发送消息"],stopResponse:["Stop generating","Arrêter la génération","Generierung stoppen","Detener generación","Interrompi generazione","生成を停止","停止生成"]},cssPatterns:{stopResponse:["text-gray","bg-gray","disabled"],enabled:["send-button","visible"],disabled:["disabled"]},svgPatterns:{stopResponse:["square","stop"],sendMessage:["send","arrow"]}}},detectLoginStatus:{loginPaths:[],basePathOnly:'pathname === "/app"',loggedOutSelectors:["a","button"],loggedOutTextPatterns:["Sign in","Sign in to start saving"],loggedInSelectors:['[data-testid="user-menu"]','[aria-label*="account" i]'],restrictionMessages:["Sign in to start saving your chats"],canUseLoggedOut:!0,description:"Gemini app without conversation"},detectConversation:{userMessageSelector:"p.query-text-line",aiMessageSelector:".model-response-text",conversationContainer:"main, .conversation-container, .chat-container",excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["Gemini","New chat","Upgrade","Sign in","Recent","Explore"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"Gemini conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:['div[contenteditable="true"]','.ql-editor[contenteditable="true"]','div.textarea[contenteditable="true"]'],parentSelectors:[".chat-container","div[file-drop-zone]"],validation:{type:"div",multiple:!0,hidden:!1}},attachmentMethods:{defaultMethod:"clipboard_paste",enableFallback:!1,supportedMethods:{clipboard_paste:{enabled:!0,targetSelector:'div[contenteditable="true"]',events:["paste","input"]},dragdrop_zone:{enabled:!1,targetSelector:"div[file-drop-zone]",events:["dragover","drop"]},direct:{enabled:!1,events:[]},clipboard:{enabled:!1,requiresManualPaste:!1}}}},"www.perplexity.ai":{friendlyName:"Perplexity",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?perplexity\.ai)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"ask-input",ariaLabel:null,placeholder:null,fallbackSelector:'div[contenteditable="true"]'},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"execCommand",fallback:"textContent"},standard:{technique:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:"Submit",ariaLabels:["Submit","Soumettre","Senden","Enviar","Invia","送信","提交"],id:null,selector:'button[aria-label*="Submit"], button[data-testid="submit-button"]',fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"Perplexity submit button",purposeDetection:{ariaLabelMatching:{sendMessage:["Submit","Soumettre","Senden","Enviar","Invia","送信","提交"],stopResponse:["Stop","Arrêter","Stoppen","Detener","Fermare","停止","停止"]},cssPatterns:{stopResponse:["text-red","bg-red","stop"],enabled:["text-white","bg-blue","submit"]},svgPatterns:{stopResponse:["square","stop"],sendMessage:["arrow","submit"]}}},detectLoginStatus:{loginPaths:[],basePathOnly:!0,loggedOutSelectors:["button","a"],loggedOutTextPatterns:["Continue with Google","Continue with Apple","Continue with email","Sign in or create an account"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="user" i]'],restrictionMessages:["Sign in to attach files","Unlock Pro Search"],canUseLoggedOut:!0,description:"Perplexity landing page"},detectConversation:{userSelectors:['h1.group\\/query[class*="whitespace-pre-line"]','div.group\\/query[class*="whitespace-pre-line"]'],aiSelectors:[".prose.text-pretty.dark\\:prose-invert.inline.leading-normal.break-words"],conversationContainer:".max-w-threadContentWidth",excludeSelectors:["button",'[data-testid*="button"]',".tabler-icon",'[aria-label*="Edit"]','[aria-label*="Copy"]','[aria-label*="Share"]',"svg",'[data-testid="edit-query-button-group"]',".absolute.bottom-0.right-0"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["Edit Query","Copy Query","Share","Export","Rewrite","Pro Search","Helpful","Not helpful","Copy","Related","Continue with","Sign in","Log in"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}}},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:['input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!1,supportedMethods:{direct:{enabled:!0,events:[]},dragdrop:{enabled:!1,targetSelector:'div[contenteditable="true"]',events:["dragover","drop"]},dragdrop_input:{enabled:!1,inputSelector:'div[contenteditable="true"]',events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!0}}}},"chat.deepseek.com":{friendlyName:"DeepSeek",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?chat\.deepseek\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"chat-input",ariaLabel:null,placeholder:"Message DeepSeek",fallbackSelector:"textarea"},submitForm:{submitDelay:100,verificationDelay:100,method:"enterKey",keyEvent:{key:"Enter",code:"Enter",keyCode:13,which:13,ctrlKey:!1,metaKey:!1}},insertQueryText:{},detectInputSubmitButtonAndStatus:{ariaLabel:null,ariaLabels:[],id:null,selector:'div[role="button"]._7436101',fallbackSelector:'div[role="button"]',description:"DeepSeek send message button (div with role=button and _7436101 class)",purposeDetection:{ariaLabelMatching:{sendMessage:[],stopResponse:[]},cssPatterns:{stopResponse:["bcc55ca1"],enabled:["_7436101"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},detectLoginStatus:{loginPaths:["/sign_in"],basePathOnly:!1,loggedOutSelectors:["button",'input[type="password"]','input[type="email"]'],loggedOutTextPatterns:["Log in","Sign up","Log in with Google"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="user" i]'],restrictionMessages:["Only login via email"],canUseLoggedOut:!1,description:"DeepSeek sign in page"},detectConversation:{userMessageSelector:'div[class*="user"]:not([class*="avatar"]):not([class*="menu"]), div[data-role="user"]',aiMessageSelector:'div[class*="assistant"]:not([class*="avatar"]):not([class*="menu"]), div[data-role="assistant"]',conversationContainer:"main, .chat-container, .conversation-area",excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:2,maxTextLength:5e4,excludePatterns:["New chat","Get App","DeepSeek","Log in","Sign up","Yesterday"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"DeepSeek conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:['input[type="file"][style*="display: none"]','input[type="file"][multiple]'],parentSelectors:['div[class*="bf38813a"]','div[class*="upload"]','div[class*="attach"]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"silent",enableFallback:!1,supportedMethods:{direct:{enabled:!1,events:["change","input","blur"]},silent:{enabled:!0,events:[]},dragdrop:{enabled:!0,targetSelector:'textarea[id="chat-input"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'textarea[id="chat-input"]',events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!0}}}},"copilot.microsoft.com":{friendlyName:"Copilot",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>copilot\.microsoft\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"userInput",ariaLabel:null,placeholder:"Message Copilot",fallbackSelector:"textarea"},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:"Submit message",ariaLabels:["Submit message","Submit"],id:null,selector:'button[aria-label="Submit message"]',fallbackSelector:'button[aria-label*="Submit"], button[type="submit"]',description:"Microsoft Copilot submit button",purposeDetection:{ariaLabelMatching:{sendMessage:["Submit message","Submit"],stopResponse:["Stop","Arrêter","Stoppen","Detener","Fermare","停止"]},cssPatterns:{stopResponse:["text-gray","bg-gray","disabled"],enabled:["text-white","bg-blue","enabled"]},svgPatterns:{stopResponse:["square","stop"],sendMessage:["arrow","submit"]}}},detectLoginStatus:{loginPaths:[],basePathOnly:!1,loggedOutSelectors:["button"],loggedOutTextPatterns:["Sign in"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="user" i]'],restrictionMessages:["Sign in to continue"],canUseLoggedOut:!0,description:"Copilot with login required"},detectConversation:{userMessageSelector:'[data-testid="user-message"], .user-message, div[class*="user"]:not([class*="avatar"]):not([class*="menu"])',aiMessageSelector:'[data-testid="copilot-response"], .copilot-response, div[class*="assistant"]:not([class*="avatar"]):not([class*="menu"])',conversationContainer:"main, .conversation-container, .chat-area",excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["Copilot","Microsoft","Sign in","New chat","Clear chat"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"Microsoft Copilot conversation messages"},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"].hidden','input[type="file"][style*="display: none"]'],validation:{type:"file",multiple:!1,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:'textarea[id="userInput"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'textarea[id="userInput"]',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"x.com":{friendlyName:"Grok",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?x\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:"Ask anything",fallbackSelector:"textarea"},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:"Grok something",ariaLabels:["Grok something"],id:null,selector:'button[aria-label="Grok something"]',fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"X.com Grok send button",purposeDetection:{ariaLabelMatching:{sendMessage:["Grok something"],stopResponse:["Stop","Arrêter","Stoppen","Detener","Fermare","停止"]},cssPatterns:{stopResponse:["text-gray","bg-gray","disabled"],enabled:["text-white","bg-blue","enabled"]},svgPatterns:{stopResponse:["square","stop"],sendMessage:["arrow","send"]}}},detectLoginStatus:{loginPaths:["/i/flow/login","/login"],basePathOnly:!1,loggedOutSelectors:["button",'input[type="text"]','input[type="email"]'],loggedOutTextPatterns:["Sign in to X","Log in to X","Sign up"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="account" i]'],restrictionMessages:["Sign in to X"],canUseLoggedOut:!1,description:"X.com login flow"},detectConversation:{userMessageSelector:'[data-testid="user-message"], .user-message, div[class*="user"]:not([class*="avatar"]):not([class*="menu"])',aiMessageSelector:'[data-testid="grok-response"], .grok-response, div[class*="assistant"]:not([class*="avatar"]):not([class*="menu"])',conversationContainer:"main, .grok-container, .conversation-area",excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["Grok","Sign in to X","Log in to X","New conversation"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"X.com Grok conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:['input[type="file"][multiple="true"]','input[type="file"][style*="opacity: 0"]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"dragdrop",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input","blur"]},dragdrop:{enabled:!0,targetSelector:'textarea[placeholder="Ask anything"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'textarea[placeholder="Ask anything"]',events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!0}}}},"openrouter.ai":{friendlyName:"OpenRouter",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?openrouter\.ai)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:"Start a message...",fallbackSelector:"textarea"},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:null,ariaLabels:[],id:null,selector:"button.bg-primary.opacity-40:has(svg), button.bg-primary:not(.opacity-40):has(svg)",fallbackSelector:"button.bg-primary:has(svg), button[disabled].opacity-40:has(svg)",description:"OpenRouter send button (9x9 with SVG, disabled/enabled/busy states)",purposeDetection:{ariaLabelMatching:{sendMessage:[],stopResponse:[]},cssPatterns:{stopResponse:["opacity-40","bg-red-9","disabled"],enabled:["bg-primary","h-9","w-9"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},detectLoginStatus:{loginPaths:[],basePathOnly:!1,loggedOutSelectors:["button"],loggedOutTextPatterns:["Sign in"],loggedInSelectors:['[data-testid="user-menu"]','button[aria-label*="user" i]'],restrictionMessages:["Sign in to continue"],canUseLoggedOut:!1,description:"OpenRouter with login required"},detectConversation:{userMessageSelector:'[data-testid="user-message"], .user-message, div[class*="user"]:not([class*="avatar"]):not([class*="menu"])',aiMessageSelector:'[data-testid="assistant-message"], .assistant-message, div[class*="assistant"]:not([class*="avatar"]):not([class*="menu"])',conversationContainer:"main, .chat-container, .conversation-area",excludeSelectors:["input","textarea","[contenteditable]","button","nav","header","footer",".sidebar"],validationRules:{minTextLength:1,maxTextLength:5e4,excludePatterns:["OpenRouter","Sign in","New chat","Settings","Clear chat"],visibilityRules:{checkDisplay:!0,checkVisibility:!0},dimensionRules:{minWidth:10,minHeight:0}},description:"OpenRouter conversation messages"},interceptFormSubmission:{enabled:!0},detectFileInputElement:{selectors:["main",".chat-container",".conversation-area"],validation:{type:"div",multiple:!0,hidden:!1}},attachmentMethods:{defaultMethod:"dragdrop_main",enableFallback:!1,supportedMethods:{dragdrop_main:{enabled:!0,targetSelector:"main",events:["dragover","drop"]},direct:{enabled:!1,events:[]},clipboard:{enabled:!1,requiresManualPaste:!1}}}},"aistudio.google.com":{friendlyName:"AI Studio",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>aistudio\.google\.com)(?::(?<port>\d+))?\/(?<path>prompts\/new_chat(?:\/.*)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:"Type something or tab to choose an example prompt",placeholder:null,fallbackSelector:"textarea",validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100,method:"enterKey",keyEvent:{key:"Enter",code:"Enter",keyCode:13,which:13,ctrlKey:!0,metaKey:!1}},detectInputSubmitButtonAndStatus:{ariaLabel:"Run",ariaLabels:["Run"],id:null,selector:'button[aria-label="Run"].run-button[type="submit"]',fallbackSelector:'button.run-button[type="submit"], button[aria-label="Run"]',description:"AI Studio Run button with disabled/enabled states",purposeDetection:{ariaLabelMatching:{sendMessage:["Run"],stopResponse:["Stop","Stop generating"]},cssPatterns:{stopResponse:["disabled","stoppable"],enabled:["run-button","large"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"dragdrop",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input","blur"]},dragdrop:{enabled:!0,targetSelector:'textarea[aria-label*="Type something"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'textarea[aria-label*="Type something"]',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"www.kimi.com":{friendlyName:"Kimi",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>www\.kimi\.com)(?::(?<port>\d+))?\/(?<path>chat(?:\/[a-z0-9]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:null,fallbackSelector:'div[contenteditable="true"].chat-input-editor',validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100,method:"enterKey",keyEvent:{key:"Enter",code:"Enter",keyCode:13,which:13,ctrlKey:!1,metaKey:!1}},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"execCommand",fallback:"textContent"},standard:{technique:"execCommand",clearFirst:!0,fallback:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:null,ariaLabels:[],id:null,selector:"div.send-button-container div.send-button",fallbackSelector:"div.send-button-container, .send-button",description:"Kimi send button container (div-based button)",purposeDetection:{ariaLabelMatching:{sendMessage:[],stopResponse:["Stop","停止"]},cssPatterns:{stopResponse:["disabled"],enabled:["send-button-container"]},svgPatterns:{stopResponse:["stop"],sendMessage:["Send"]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"].hidden-input','input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:'div[contenteditable="true"].chat-input-editor',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'div[contenteditable="true"].chat-input-editor',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"poe.com":{friendlyName:"Poe",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>poe\.com)(?::(?<port>\d+))?\/(?<path>chat(?:\/[a-z0-9]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:"Start a new chat",fallbackSelector:"textarea.GrowingTextArea_textArea__ZWQbP",validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:"Send",ariaLabels:["Send","Submit"],id:null,selector:'button[aria-label*="Send"]',fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"Poe send button (placeholder config)",purposeDetection:{ariaLabelMatching:{sendMessage:["Send","Submit"],stopResponse:["Stop","Stop generating"]},cssPatterns:{stopResponse:["disabled"],enabled:["enabled"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"][class*="ChatMessageFileInputButton_input"]','input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"dragdrop",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input","blur"]},dragdrop:{enabled:!0,targetSelector:"textarea.GrowingTextArea_textArea__ZWQbP",events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:"textarea.GrowingTextArea_textArea__ZWQbP",events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!0}}}},"www.meta.ai":{friendlyName:"Meta",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>www\.meta\.ai)(?::(?<port>\d+))?\/(?<path>prompt(?:\/[a-z0-9-]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:"Ask Meta AI...",placeholder:null,fallbackSelector:'div[contenteditable="true"]',validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"compositionEvents",clearDelay:50,events:["compositionstart","compositionupdate","compositionend"],fallback:"textContent"},standard:{technique:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:"Send message",ariaLabels:["Send message","Stop response generation"],id:null,selector:'div[aria-label="Send message"][role="button"], div[aria-label="Stop response generation"][role="button"]',fallbackSelector:'div[role="button"]:has(svg), button[role="button"]',description:"Meta AI send/stop button (div-based with role=button)",purposeDetection:{ariaLabelMatching:{sendMessage:["Send message"],stopResponse:["Stop response generation"]},cssPatterns:{stopResponse:["x7l9s84","xw2npq5"],enabled:["x1c1uobl","xyri2b"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"]','.upload input[type="file"]','.attach input[type="file"]','div[role="button"] input[type="file"]','label input[type="file"]'],validation:{type:"file",multiple:!0,hidden:!0}}},"librechat-librechat.hf.space":{friendlyName:"LibreChat",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>librechat-librechat\.hf\.space)(?::(?<port>\d+))?\/(?<path>c(?:\/[a-z0-9-]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"prompt-textarea",ariaLabel:null,placeholder:null,fallbackSelector:"textarea",validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:"Send message",ariaLabels:["Send message","Send","Submit"],id:null,selector:'button[aria-label*="Send"]',fallbackSelector:'button[type="submit"], button:not([type="button"]):not([type="reset"])',description:"LibreChat send button (placeholder config)",purposeDetection:{ariaLabelMatching:{sendMessage:["Send message","Send","Submit"],stopResponse:["Stop","Stop generating"]},cssPatterns:{stopResponse:["disabled"],enabled:["enabled"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:"textarea",events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:"textarea",events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"www.blackbox.ai":{friendlyName:"BlackBox",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>www\.blackbox\.ai)(?::(?<port>\d+))?\/(?<path>chat(?:\/[a-z0-9]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:"chat-input-box",ariaLabel:null,placeholder:null,fallbackSelector:"textarea",validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"execCommand",fallback:"textContent"},standard:{technique:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:null,ariaLabels:[],id:"prompt-form-send-button",selector:'button#prompt-form-send-button[type="submit"]',fallbackSelector:'button[id*="send"][type="submit"], button.bg-primary[type="submit"]',description:"BlackBox AI send button with ID and primary styling",purposeDetection:{ariaLabelMatching:{sendMessage:[],stopResponse:[]},cssPatterns:{stopResponse:["disabled","pointer-events-none"],enabled:["bg-primary","text-primary-foreground"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{id:null,selectors:['input[type="file"][id*="file-input"]','input[type="file"].hidden','input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:'textarea[id="chat-input-box"]',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'textarea[id="chat-input-box"]',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}},"chat.mistral.ai":{friendlyName:"Mistral",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>chat\.mistral\.ai)(?::(?<port>\d+))?\/(?<path>chat(?:\/[a-z0-9-]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:null,fallbackSelector:'div[contenteditable="true"].ProseMirror',validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},detectInputSubmitButtonAndStatus:{ariaLabel:"Send question",ariaLabels:["Send question","Dictation","Send","Submit"],id:null,selector:'button[aria-label*="Send"], button[aria-label="Dictation"]',fallbackSelector:'button.size-9.bg-state-primary, button[type="submit"]',description:"Mistral AI send/dictation button (36x36 with bg-state-primary)",purposeDetection:{ariaLabelMatching:{sendMessage:["Send question","Send","Submit"],stopResponse:[]},cssPatterns:{stopResponse:["disabled"],enabled:["bg-state-primary","size-9"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},interceptFormSubmission:{enabled:!1},detectFileInputElement:{selectors:['input[type="file"].hidden','input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"dragdrop",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input","blur"]},dragdrop:{enabled:!0,targetSelector:'div[contenteditable="true"].ProseMirror',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'div[contenteditable="true"].ProseMirror',events:["dragover","drop"]},clipboard:{enabled:!1,requiresManualPaste:!0}}}},"www.phind.com":{friendlyName:"Phind",files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>www\.phind\.com)(?::(?<port>\d+))?\/(?<path>search(?:\/[a-z0-9]+)?)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i,detectChatInput:{id:null,ariaLabel:null,placeholder:null,fallbackSelector:'div[contenteditable="true"].notranslate.public-DraftEditor-content',validation:{minWidth:400,allowDynamicSizing:!1}},submitForm:{submitDelay:100,verificationDelay:100},insertQueryText:{frameworkDetection:{react:{property:"__reactFiber"},prosemirror:{className:"ProseMirror"},quill:{className:"ql-editor"},draftjs:{className:"public-DraftEditor-content"}},contentEditableValues:["true","plaintext-only"],methods:{textarea:{react:{technique:"nativeSetter",fallback:"directValue"},standard:{technique:"directValue"}},contenteditable:{prosemirror:{technique:"execCommand",selectAll:!0,fallback:"textContent"},draftjs:{technique:"keystrokeSimulation",selectors:{dataContents:'[data-contents="true"]',textSpan:"span[data-offset-key]"},fallback:"textContent"},quill:{technique:"quillAPI",fallback:"textContent"},react:{technique:"execCommand",fallback:"textContent"},standard:{technique:"textContent"}}},events:{core:["input","change"],react:["InputEvent"],contenteditable:["keydown","keyup"]}},detectInputSubmitButtonAndStatus:{ariaLabel:null,ariaLabels:[],id:null,selector:"div.masthead-arrow-right-container, svg.arrow-right",fallbackSelector:'div[class*="arrow-right"], svg[class*="arrow-right"]',description:"Phind arrow send button (div-based with enabled/disabled classes)",purposeDetection:{ariaLabelMatching:{sendMessage:[],stopResponse:[]},cssPatterns:{stopResponse:["masthead-arrow-right-container-disabled","disabled"],enabled:["masthead-arrow-right-container-enabled","enabled"]},svgPatterns:{stopResponse:[],sendMessage:[]}}},detectFileInputElement:{selectors:['input[type="file"].hidden','input[type="file"][style*="display: none"]','input[type="file"][multiple]'],validation:{type:"file",multiple:!0,hidden:!0}},attachmentMethods:{defaultMethod:"direct",enableFallback:!0,supportedMethods:{direct:{enabled:!0,events:["change","input"]},dragdrop:{enabled:!0,targetSelector:'div[contenteditable="true"].notranslate.public-DraftEditor-content',events:["dragover","drop"]},dragdrop_input:{enabled:!0,inputSelector:'div[contenteditable="true"].notranslate.public-DraftEditor-content',events:["dragover","drop"]},clipboard:{enabled:!0,requiresManualPaste:!0}}}}};function enhance(){a[e("log")](...t("log","✅ enhance() commenced"));const o=100;let s=!1,i={lookingForToolcalls:!1,isFirstUserMessage:!0},r=null;function scheduleCheck(){const e=Date.now();s||(s=!0,setTimeout(()=>{s=!1,stateCheckAndProcess()},o))}function stateCheckAndProcess(){a[e("log")](...t("log","🔍 stateCheckAndProcess() starting DOM analysis"));try{const o=getCurrentSiteConfig("detectChatInput"),s=o?detectChatInput(o):null;if(s){let n=isInputReadyForUser(s);a[e("log")](...t("log",`✅ Input textbox detected - ready: ${n}`)),i.inputElement=s,i.hasInputBox=!0,i.inputReady=n}else a[e("log")](...t("log","❌ Input textbox detection failed")),i.inputElement=null,i.hasInputBox=!1,i.inputReady=!1;a[e("log")](...t("log","✅✅✅ before detectSubmitButtonAndConversationState()",{pageState:i}));const r=detectSubmitButtonAndConversationState(i);if(a[e("log")](...t("log","✅✅✅ after detectSubmitButtonAndConversationState()",{pageState:i})),a[e("log")](...t("log","📊 Page state update:",{pageState:i})),i.lookingForToolcalls&&i.lastSubmission&&i.inputReady){a[e("log")](...t("log","🔍 Checking for AI response after submission (input ready for user)..."));const n=i.userCount||0,o=i.aiCount||0,s=i.lastSubmission.userCount||0,r=i.lastSubmission.aiCount||0;if(a[e("log")](...t("log","📊 Count comparison:",{current:`${n}/${o}`,lastSubmission:`${s}/${r}`,userChanged:n!==s,aiChanged:o!==r})),o!==r&&n!==s){i.lookingForToolcalls=!1,a[e("log")](...t("log","🤖 New AI response detected! Looking for toolcalls..."));try{const n=undefined,o=lookForToolcalls(getCurrentSiteConfig("detectToolcalls"));a[e("log")](...t("log","🔧 Toolcall detection result:",o)),o&&o.toolcalls&&o.toolcalls.length>0&&(o.toolcalls?o.toolcalls.forEach(n=>{a[e("log")](...t("log","🔍 MCP Link Debug: Handling tool call:",{call:n})),handleToolCall(n)}):a[e("log")](...t("log","🔍 MCP Link Debug: Incomplete XML? - no tool call made")))}catch(n){a[e("error")](...t("error","❌ Error in toolcall detection:",n))}}}const l=getCurrentSiteConfig("interceptFormSubmission"),c=l&&l.enabled&&0===i.userCount&&i.inputReady&&i.hasSubmitButton;i.isFirstUserMessage=0===i.userCount&&i.hasInputBox&&i.hasSubmitButton;const u=i.formInterceptor&&"function"==typeof i.formInterceptor.cleanup;if(c&&!u){a[e("log")](...t("log","🎯 Setting up form submission interception - new conversation detected"));const s=o.ariaLabel?`div[aria-label="${o.ariaLabel}"]`:o.fallbackSelector,l=r.ariaLabel?`button[aria-label="${r.ariaLabel}"]`:r.fallbackSelector;a[e("log")](...t("log","🔧 Interceptor selectors:",{inputContainer:s,submitButton:l}));const c=interceptFormSubmission(l,s,async(o,s,r)=>{a[e("log")](...t("log",`📋 ${r} submission intercepted - processing...`));const l=await n.pop["settings.ai_tool_access"];if(i.lastSubmission={userCount:i.userCount||0,aiCount:i.aiCount||0,timestamp:Date.now()},i.lookingForToolcalls=l,a[e("log")](...t("log","🎯 Stored submission baseline:",i.lastSubmission)),l){if(i.isFirstUserMessage){const n=undefined,o=doAttachTextAsFileToSubmission(await getSystemPrompt(window.location.hostname),"mcp-link system prompt.md","text/markdown");a[e("log")](...t("log","⏳ Waiting for system prompt upload to complete before allowing intercepted submission..."));const s=await waitForFileUploadComplete(i);if(s.success){a[e("log")](...t("log",`✅ System prompt upload completed after ${s.elapsedTimeMs}ms`));const n=await waitForSubmitReady(i);n.success?a[e("log")](...t("log",`✅ Submit button ready after ${n.elapsedTimeMs}ms, allowing intercepted submission to continue`)):a[e("warn")](...t("warn",`⚠️ Submit button not ready after ${n.elapsedTimeMs}ms, but allowing submission to continue anyway`))}else a[e("warn")](...t("warn",`⚠️ System prompt upload wait failed after ${s.elapsedTimeMs}ms, but allowing submission to continue anyway`));i.isFirstUserMessage=!1}}else a[e("log")](...t("log","AI tool access disabled... skipping injection"));a[e("log")](...t("log","interceptFormSubmission completed:",{NEW_isFirstUserMessage:i.isFirstUserMessage,lookingForToolcalls:i.lookingForToolcalls}))});i.formInterceptor=c,a[e("log")](...t("log","✅ Form submission interception active"))}else!c&&u?(a[e("log")](...t("log","🧹 clearing isFirstUserMessage - conversation no longer new")),i.isFirstUserMessage=!1):c&&u?a[e("log")](...t("log","🔄 Form submission interception already active - continuing")):a[e("log")](...t("log","⏸️ Form submission interception not needed"))}catch(n){a[e("error")](...t("error","❌ Error in stateCheckAndProcess():",n)),i.error=n.message,i.errorTimestamp=(new Date).toISOString()}}a[e("log")](...t("log","🎯 Setting up page load listeners")),"loading"===document.readyState?(a[e("log")](...t("log","⏳ Document still loading - adding DOMContentLoaded listener")),document.addEventListener("DOMContentLoaded",()=>{a[e("log")](...t("log","📄 DOMContentLoaded fired - calling scheduleCheck")),scheduleCheck()},{once:!0})):(a[e("log")](...t("log","✅ Document already loaded - scheduling immediate check")),scheduleCheck()),"complete"!==document.readyState&&n.window.addEventListener("load",()=>{a[e("log")](...t("log","🌐 Window load event fired - calling scheduleCheck")),scheduleCheck()},{once:!0}),a[e("log")](...t("log","👁️ Setting up mutation observer"));const l={childList:!0,subtree:!0,attributes:!0,attributeFilter:["disabled","aria-disabled","class","aria-label"],characterData:!1};r=new MutationObserver(e=>{let t=!1;for(const n of e)if("childList"===n.type){if(n.addedNodes.length>0||n.removedNodes.length>0){t=!0;break}}else if("attributes"===n.type){const e=n.target;if("BUTTON"===e.tagName||e.hasAttribute("contenteditable")||"TEXTAREA"===e.tagName){t=!0;break}}t&&scheduleCheck()}),r.observe(document.body||document.documentElement,l),a[e("log")](...t("log","👁️ Mutation observer started")),a[e("log")](...t("log","🚀 Running initial state check")),scheduleCheck();const cleanup=()=>{r&&(r.disconnect(),a[e("log")](...t("log","🧹 Mutation observer disconnected")))};n.window.__mcp_link_cleanup=cleanup}async function waitForSubmitReady(n,o=3e4){const s=Date.now(),i=100;let r=0;const l=Math.floor(o/i);for(a[e("log")](...t("log",`⏳ waitForSubmitReady() starting - will check every 100ms for up to ${o}ms`)),await new Promise(e=>setTimeout(e,i)),r++;r<=l;){const o=Date.now();detectSubmitButtonAndConversationState(n);const c=n.hasSubmitButton&&n.submitEnabled&&"stopResponse"!==n.submitPurpose;if(a[e("log")](...t("log",`🔍 waitForSubmitReady() attempt ${r}/${l}: hasButton=${n.hasSubmitButton}, enabled=${n.submitEnabled}, purpose=${n.submitPurpose}, ready=${c}`)),c){const i=o-s;return a[e("log")](...t("log",`✅ waitForSubmitReady() SUCCESS after ${i}ms (${r} attempts)`)),{success:!0,elapsedTimeMs:i,attempts:r,message:`Submit button ready after ${i}ms`,pageState:n}}if(r>=l){const i=o-s,l=`Submit button not ready after ${i}ms (${r} attempts)`;return a[e("warn")](...t("warn",`⚠️ waitForSubmitReady() TIMEOUT: ${l}`)),{success:!1,elapsedTimeMs:i,attempts:r,error:l,reason:"timeout",pageState:n,lastStatus:{hasSubmitButton:n.hasSubmitButton,submitEnabled:n.submitEnabled,submitPurpose:n.submitPurpose}}}await new Promise(e=>setTimeout(e,i)),r++}const c=Date.now()-s,u=`Unexpected exit from waitForSubmitReady after ${c}ms`;return a[e("error")](...t("error",`❌ ${u}`)),{success:!1,elapsedTimeMs:c,attempts:r,error:u,reason:"unexpected_exit",pageState:n}}async function waitForFileUploadComplete(n,o=15e3){const s=Date.now(),i=200;let r=0;const l=Math.floor(o/i);for(a[e("log")](...t("log",`📁 waitForFileUploadComplete() starting - will check every 200ms for up to ${o}ms`)),await new Promise(e=>setTimeout(e,i)),r++;r<=l;){const o=Date.now();detectSubmitButtonAndConversationState(n);const c=document.querySelectorAll('[class*="upload"], [class*="loading"], [class*="progress"], [aria-label*="upload"], [aria-label*="loading"]'),u=c.length>0,d="uploading"===n.submitPurpose||"processing"===n.submitPurpose||!n.submitEnabled||u;if(a[e("log")](...t("log",`📁 waitForFileUploadComplete() attempt ${r}/${l}: uploading=${d}, purpose=${n.submitPurpose}, enabled=${n.submitEnabled}, indicators=${c.length}`)),!d&&n.hasSubmitButton&&n.submitEnabled){const i=o-s;return a[e("log")](...t("log",`✅ waitForFileUploadComplete() SUCCESS after ${i}ms (${r} attempts)`)),{success:!0,elapsedTimeMs:i,attempts:r,message:`File upload completed after ${i}ms`,pageState:n}}if(r>=l){const i=o-s,l=`File upload did not complete after ${i}ms (${r} attempts)`;return a[e("warn")](...t("warn",`⚠️ waitForFileUploadComplete() TIMEOUT: ${l}`)),{success:!1,elapsedTimeMs:i,attempts:r,error:l,reason:"timeout",pageState:n,lastStatus:{hasSubmitButton:n.hasSubmitButton,submitEnabled:n.submitEnabled,submitPurpose:n.submitPurpose,uploadingIndicators:c.length}}}await new Promise(e=>setTimeout(e,i)),r++}const c=Date.now()-s,u=`Unexpected exit from waitForFileUploadComplete after ${c}ms`;return a[e("error")](...t("error",`❌ ${u}`)),{success:!1,elapsedTimeMs:c,attempts:r,error:u,reason:"unexpected_exit",pageState:n}}function detectSubmitButtonAndConversationState(n){const o=getCurrentSiteConfig("detectInputSubmitButtonAndStatus"),s=o?detectInputSubmitButtonAndStatus(o):null;if(s&&s.success?(a[e("log")](...t("log",`✅ Submit button Detected - enabled: ${s.enabled}, purpose: ${s.purpose}, strategy: ${s.strategyUsed}`)),n.submitButton=s.button,n.submitEnabled=s.enabled,n.submitPurpose=s.purpose,n.submitResult=s,n.hasSubmitButton=!0,n.hasInputBox&&n.inputReady&&"stopResponse"===s.purpose&&(a[e("log")](...t("log","⚠️ Submit button in stopResponse mode - AI still generating, input not truly ready")),n.inputReady=!1)):(a[e("log")](...t("log","❌ Submit button detection failed")),n.submitButton=null,n.submitEnabled=!1,n.submitResult=null,n.hasSubmitButton=!1),n.hasInputBox&&n.hasSubmitButton){a[e("log")](...t("log","🔍 Both input and submit detected - analyzing conversation turns"));const o=analyzeConversationWithFallback();o&&o.success?(a[e("log")](...t("log",`✅ Conversation analysis successful: ${o.userCount} user, ${o.aiCount} AI messages (method: ${o.method})`)),n.conversationResult=o,n.userCount=o.userCount,n.aiCount=o.aiCount,n.lastAiMessage=o.lastAiMessage,n.hasConversation=o.userCount>0||o.aiCount>0):(a[e("log")](...t("log","❌ Conversation analysis failed")),n.conversationResult=null,n.userCount=0,n.aiCount=0,n.lastAiMessage=null,n.hasConversation=!1)}else a[e("log")](...t("log","⚠️ Skipping conversation analysis - missing input or submit button")),n.conversationResult=null,n.userCount=0,n.aiCount=0,n.lastAiMessage=null,n.hasConversation=!1;return o}function stringifyForCDATA(n){try{const e=undefined;return JSON.stringify(n,null,0).replace(/\]\]>/g,"]]]]><![CDATA[>")}catch(n){return a[e("error")](...t("error","Error stringifying tools for CDATA:",n)),'{"error": "Failed to serialize tools"}'}}function parseToolCallXML(n){if(!n||"string"!=typeof n)return a[e("log")](...t("log","❌ parseToolCallXML: Invalid input:",{xmlString:n,type:typeof n})),null;const o=/(<!--.*?-->|)[\s\n]*(<\?>|)(<[az]ntml:function_calls[^>]*>.*?<\/[az]ntml:function_calls>)/s,s=n.match(o);let i=s?s[1]:null;i=i?i.replace(/<!--|-->/g,""):null;let r=s?s[3]:null;if(!r||"string"!=typeof r)return a[e("log")](...t("log","❌ parseToolCallXML: cleanXml is invalid:",{cleanXml:r,type:typeof r})),null;const l=r.includes("zntml:")?"zntml":"bntml";"zntml"!==l||r.includes("xmlns:zntml")?"bntml"!==l||r.includes("xmlns:bntml")||(r=r.replace("<bntml:function_calls>",'<bntml:function_calls xmlns:bntml="http://bntml.local/functions">')):r=r.replace("<zntml:function_calls>",'<zntml:function_calls xmlns:zntml="http://zntml.local/functions">'),a[e("log")](...t("log",`🔧 Cleaned XML for parsing (namespace: ${l}):`,{cleanXml:r,comment:i,xmlString:n}));const c=undefined,u=(new DOMParser).parseFromString(r,"text/xml");a[e("log")](...t("log","🔍 MCP Link Debug: Parsing XML after prep:",{cleanXml:r,xmlDoc:u}));const d=u.querySelector("parsererror");if(d)return a[e("warn")](...t("warn","XML parsing skipped - not a complete/valid XML block",{parseError:d})),null;const p=u.getElementsByTagName(`${l}:invoke`);return p.length?Array.from(p).map(e=>{const t={name:e.getAttribute("name"),comment:i,parameters:{}},n=e.getElementsByTagName(`${l}:parameter`);return Array.from(n).forEach(e=>{const n=e.getAttribute("name");let o=e.textContent;if(o.trim().startsWith("{")||o.trim().startsWith("["))try{o=JSON.parse(o)}catch(e){}t.parameters[n]=o}),t}):(a[e("warn")](...t("warn","XML parsing skipped - no invoke")),null)}function handleToolCall(o){o.toolCallId=getUUID(),o.hostname=window.location.hostname,o.siteConfig=s[window.location.hostname],a[e("log")](...t("log","✅✅🟡 MCP Link: Handling tool call:",{call:o})),n.tools.call={...o},(async()=>{try{const s=await n.tools[o.toolCallId];a[e("log")](...t("log","✅✅🟢 MCP Link: Tool call completed:",s));const i=`<function_result>\n${JSON.stringify(s,null,2)}\n</function_result>`,r=await submitToolResponse(i,o.toolCallId);r.success?a[e("log")](...t("log","✅✅🟢 Tool response submitted successfully to AI")):a[e("error")](...t("error","❌❌🔴 Failed to submit tool response to AI:",r.error))}catch(n){a[e("error")](...t("error","❌❌🔴 MCP Link: Tool call failed:",n))}})()}function lookForToolcalls(n){a[e("log")](...t("log","🔍 Looking for toolcalls in AI response..."));const o=getCurrentSiteConfig("detectConversation");if(!o)return a[e("error")](...t("error","❌ No conversation config found - cannot detect AI messages")),{success:!1,error:"No conversation config available",toolcalls:[]};const s=undefined,i=(o.aiSelectors||[o.aiMessageSelector]).filter(e=>e).join(", ");if(!i)return a[e("error")](...t("error","❌ No AI message selector configured for this site")),{success:!1,error:"No AI message selector available",toolcalls:[]};const r=document.querySelectorAll(i);if(0===r.length)return a[e("log")](...t("log","❌ No AI messages found on page")),{success:!1,error:"No AI messages found",toolcalls:[]};const l=r[r.length-1];a[e("log")](...t("log",`📝 Found ${r.length} AI messages, analyzing the last one...`));const c=l.textContent||"";a[e("log")](...t("log",`📝 AI message text (${c.length} chars):`,{messageText:c}));const u=undefined;if(!((c.includes("<?><zntml:function_calls")||c.includes("<?><bntml:function_calls"))&&(c.includes("</zntml:function_calls")||c.includes("</bntml:function_calls"))))return a[e("log")](...t("log","👀 No XML toolcall patterns found in AI response")),{success:!0,toolcalls:[],message:c};a[e("log")](...t("log","🎯 XML toolcall pattern detected! Extracting XML from code blocks..."));const d=[];try{const n=parseToolCallXML(c);n&&n.length>0?(a[e("log")](...t("log",`✅ Successfully parsed ${n.length} toolcalls:`,n)),d.push(...n)):a[e("warn")](...t("warn","⚠️ XML parsing returned no toolcalls"))}catch(n){a[e("error")](...t("error","❌ Error parsing toolcall XML:",n))}return d.length>0?(a[e("log")](...t("log",`🎉 Successfully extracted ${d.length} toolcalls!`)),{success:!0,toolcalls:d,message:c}):(a[e("warn")](...t("warn","⚠️ XML patterns detected but no valid toolcalls extracted")),{success:!1,error:"XML detected but parsing failed",toolcalls:[],message:c})}function detectButtonPurpose(e,t=null){if(!e)return{purpose:"unknown",confidence:0,indicators:["no button element"]};const n=t||{ariaLabelMatching:{sendMessage:["Send message","Send","Submit"],stopResponse:["Stop response","Stop generating","Stop"]},cssPatterns:{stopResponse:["bg-bg-300","border-border-200","text-text-000"],enabled:["bg-accent-main-000","text-oncolor-100"]},svgPatterns:{stopResponse:["A108,108,0,1,0","circle","108.12"],sendMessage:["208.49,120.49","L140,69V216","arrow"]}},o=e.getAttribute("aria-label")||"",a=Array.from(e.classList),s=e.disabled||e.hasAttribute("disabled"),i=[],r=o.toLowerCase();for(const e of n.ariaLabelMatching.stopResponse)if(r.includes(e.toLowerCase()))return i.push(`aria-label="${o}" matches stop pattern "${e}"`),{purpose:"stopResponse",confidence:95,indicators:i};for(const e of n.ariaLabelMatching.sendMessage)if(r.includes(e.toLowerCase()))return i.push(`aria-label="${o}" matches send pattern "${e}"`),s?(i.push("button disabled"),{purpose:"disabled",confidence:90,indicators:i}):(i.push("button enabled"),{purpose:"enabled",confidence:90,indicators:i});const l=n.cssPatterns.stopResponse||[],c=n.cssPatterns.enabled||[];let u=0,d=0;if(l.forEach(e=>{a.some(t=>t.includes(e.replace("bg-bg-","bg-bg-").replace("border-border-","border-border-")))&&(u++,i.push(`class contains "${e}"`))}),c.forEach(e=>{a.some(t=>t.includes(e.replace("bg-accent-main-","bg-accent-main-").replace("text-oncolor-","text-oncolor-")))&&(d++,i.push(`class contains "${e}"`))}),u>d)return{purpose:"disabled",confidence:70,indicators:i};if(d>u)return{purpose:"enabled",confidence:70,indicators:i};if(u>0&&d>0)return{purpose:"disabled",confidence:60,indicators:i};const p=e.querySelector("svg");if(p){const e=p.querySelector("path");if(e){const t=e.getAttribute("d")||"",o=n.svgPatterns.stopResponse||[];for(const e of o)if(t.includes(e))return i.push(`SVG contains stop pattern "${e}"`),{purpose:"stopResponse",confidence:70,indicators:i};const a=n.svgPatterns.sendMessage||[];for(const e of a)if(t.includes(e))return i.push(`SVG contains send pattern "${e}"`),s?(i.push("button disabled"),{purpose:"disabled",confidence:70,indicators:i}):(i.push("button enabled"),{purpose:"enabled",confidence:70,indicators:i})}}return s?(i.push("button has disabled attribute"),{purpose:"disabled",confidence:50,indicators:i}):(i.push("no clear indicators found"),{purpose:"enabled",confidence:30,indicators:i})}function detectInputSubmitButtonAndStatus(n){if(!n)return a[e("log")](...t("log","❌ detectInputSubmitButtonAndStatus: No submit button configuration provided")),{success:!1,error:"No submit button configuration provided",button:null,enabled:!1};const o=[()=>{if(n.ariaLabels&&Array.isArray(n.ariaLabels))for(const o of n.ariaLabels){const n=document.querySelector(`button[aria-label="${o}"]`);if(n&&isValidSubmitButton(n))return a[e("log")](...t("log",`✅ detectInputSubmitButtonAndStatus: Found button using ariaLabels array with "${o}"`)),n}return null},()=>n.ariaLabel?document.querySelector(`button[aria-label="${n.ariaLabel}"]`):null,()=>n.id?document.getElementById(n.id):null,()=>n.selector?document.querySelector(n.selector):null,()=>n.fallbackSelector?document.querySelector(n.fallbackSelector):null];let s=null,i="none";for(let e=0;e<o.length;e++){const t=undefined;if(s=(0,o[e])(),s&&isValidSubmitButton(s)){i=["ariaLabels","ariaLabel","id","selector","fallbackSelector"][e];break}}if(!s){const o={success:!1,error:"Could not find submit button using any configured strategy",button:null,enabled:!1,strategyUsed:"none",config:n};return a[e("log")](...t("log","❌ detectInputSubmitButtonAndStatus: No button found:",o)),o}const r=s.disabled||s.hasAttribute("disabled"),l=s.getAttribute("aria-disabled"),c="true"===l||!0===l,u=detectButtonPurpose(s,n.purposeDetection),d=undefined,p=undefined;return{success:!0,button:s,enabled:!(r||c||"enabled"!==u.purpose&&"disabled"===u.purpose),purpose:u.purpose,strategyUsed:i,buttonState:{disabled:s.disabled,hasDisabledAttribute:s.hasAttribute("disabled"),ariaDisabled:l,classList:Array.from(s.classList),tagName:s.tagName,ariaLabel:s.getAttribute("aria-label"),purpose:u.purpose,purposeConfidence:u.confidence,purposeIndicators:u.indicators},config:n}}function isValidSubmitButton(e){if(!e)return!1;const t="BUTTON"===e.tagName,n="DIV"===e.tagName&&"button"===e.getAttribute("role"),o="svg"===e.tagName;if(!t&&!n&&!o)return!1;const a=e.getBoundingClientRect(),s=a.width>0&&a.height>0&&!e.hidden,i=undefined,r="reset"!==e.type&&!e.textContent?.toLowerCase().includes("cancel");return s&&r}function detectChatInput(e){function validateChatInputElement(e,t={}){const n=e.getBoundingClientRect(),o="TEXTAREA"===e.tagName||"DIV"===e.tagName&&"true"===e.contentEditable;let a=!1;if(t.allowDynamicSizing&&void 0!==t.minWidth)if(t.checkParentWidth&&t.parentMinWidth){const o=e.parentElement?.getBoundingClientRect();a=n.width>t.minWidth||o&&o.width>t.parentMinWidth}else a=n.width>t.minWidth;else{const e=t.minWidth||400;a=n.width>e}const s=n.height>0&&!e.hidden;return o&&a&&s}const t=[()=>e.id?document.getElementById(e.id):null,()=>e.ariaLabel?document.querySelector(`[aria-label="${e.ariaLabel}"]`):null,()=>e.placeholder?document.querySelector(`[placeholder="${e.placeholder}"]`):null,()=>document.querySelector(e.fallbackSelector)];e.alternativeSelectors&&Array.isArray(e.alternativeSelectors)&&e.alternativeSelectors.forEach(e=>{t.push(()=>document.querySelector(e))});for(const n of t){const t=n();if(t&&validateChatInputElement(t,e.validation))return t}return null}function isInputReadyForUser(n){if(a[e("log")](...t("log","🔍 isInputReadyForUser examining element:",{tagName:n?.tagName,id:n?.id||"no-id",className:n?.className||"no-class",textContent:n?.textContent||"no-text"})),!n)return a[e("log")](...t("log","❌ isInputReadyForUser: Element is null/undefined - returning false")),!1;if(n.disabled)return a[e("log")](...t("log","❌ isInputReadyForUser: Element.disabled is true - returning false")),!1;if(n.hasAttribute("disabled"))return a[e("log")](...t("log","❌ isInputReadyForUser: Element has disabled attribute - returning false")),!1;if(n.readOnly||n.hasAttribute("readonly"))return a[e("log")](...t("log","❌ isInputReadyForUser: Element is readOnly or has readonly attribute - returning false")),!1;const o=undefined;if("true"===n.getAttribute("aria-disabled"))return a[e("log")](...t("log",'❌ isInputReadyForUser: aria-disabled="true" - returning false')),!1;if("DIV"===n.tagName){const o=n.getAttribute("contenteditable");if("false"===o)return a[e("log")](...t("log",'❌ isInputReadyForUser: contenteditable="false" - returning false')),!1;if(o&&!["true","plaintext-only"].includes(o))return a[e("log")](...t("log",`❌ isInputReadyForUser: contenteditable="${o}" not in allowed values - returning false`)),!1}const s=undefined;if("none"===getComputedStyle(n).pointerEvents)return a[e("log")](...t("log",'❌ isInputReadyForUser: CSS pointer-events is "none" - returning false')),!1;const i=Array.from(n.classList),r=undefined,l=["loading","processing","disabled","readonly","locked"].find(e=>i.some(t=>t.toLowerCase().includes(e)));if(l)return a[e("log")](...t("log",`❌ isInputReadyForUser: Found loading indicator "${l}" in classList - returning false`)),!1;const c=n.closest('form, fieldset, [role="group"], [aria-disabled]');return c&&(c.hasAttribute("disabled")||"true"===c.getAttribute("aria-disabled"))?(a[e("log")](...t("log","❌ isInputReadyForUser: Parent container is disabled - returning false")),!1):(a[e("log")](...t("log","✅ isInputReadyForUser: All checks passed - returning true")),!0)}function getCurrentSiteConfig(e=null){const t=window.location.hostname,n=s[t];return n?e?n[e]||null:n:null}function testGenericDetection(){const e=window.location.hostname,t=getCurrentSiteConfig("detectChatInput");if(!t)return{success:!1,hostname:e,error:"No chat input configuration found for this hostname"};const n=detectChatInput(t);if(n){const t=n.getBoundingClientRect();return{success:!0,hostname:e,element:{tagName:n.tagName,id:n.id||null,className:n.className||null,width:Math.round(t.width),height:Math.round(t.height),contentEditable:n.contentEditable,placeholder:n.placeholder||null}}}return{success:!1,hostname:e,error:"No valid input element detected"}}function getSupportedPurposes(e=null){const t=e||window.location.hostname,n=s[t];return n?Object.keys(n).filter(e=>!e.startsWith("//")):[]}function hasPurposeSupport(e,t=null){const n=undefined;return getSupportedPurposes(t).includes(e)}function validatePurposeConfig(e,t,n=null){const o=n||window.location.hostname,a=s[o],i=a?a[e]:null;if(!i)return{success:!1,missing:t,error:`No ${e} configuration found for site`};const r=t.filter(e=>!(e in i));return{success:0===r.length,missing:r,error:r.length>0?`Missing required properties: ${r.join(", ")}`:null}}function interceptFormSubmission(o,s,i){const r=undefined,l=i||(async(n,o,s)=>{a[e("log")](...t("log",`🛡️ PLACEHOLDER: ${s} submission intercepted - doing placeholder work`)),await new Promise(e=>setTimeout(e,100)),a[e("log")](...t("log",`✅ PLACEHOLDER: ${s} work completed`))});let c=!0,u=!1,d=!1;async function processSubmissionAsync(n,o,s){a[e("log")](...t("log",`🔄 Starting async ${s} submission processing`,{callback:l,event:n,element:o,method:s}));try{u=!0,o.setAttribute("data-mcp-processed","true"),await l(n,o,s),a[e("log")](...t("log",`✅ ${s} processing completed - preparing manual submission`)),u=!1,o.removeAttribute("data-mcp-processed"),a[e("log")](...t("log",`🚀 Manually triggering ${s} submission using bypass flag approach`)),d=!0,a[e("log")](...t("log",`✅ File injection complete flag set - next ${s} submission will bypass interception`)),setTimeout(()=>{submitChatForm()},123)}catch(n){a[e("error")](...t("error",`❌ Error in ${s} submission processing:`,n)),a[e("log")](...t("log",`🆘 ${s} processing failed - forcing submission as fallback`)),u=!1,o.removeAttribute("data-mcp-processed"),d=!0,setTimeout(()=>{try{o.click(),a[e("log")](...t("log",`🆘 Error recovery ${s} click dispatched with bypass flag`))}catch(n){a[e("error")](...t("error","❌ Error recovery click failed:",n)),d=!1}},123)}}function setupClickInterception(){const clickHandler=function(n){const s=n.target.closest(o);if(s&&!s.hasAttribute("data-mcp-processed")){if(a[e("log")](...t("log","🖱️ Submit button click intercepted")),u)return void a[e("log")](...t("log","⏳ Click already processing - ignoring"));if(!c)return void a[e("log")](...t("log","🚀 Click handler disarmed - allowing submission to proceed"));if(d)return a[e("log")](...t("log","✅ File injection complete - allowing click to proceed normally")),void(d=!1);n.preventDefault(),n.stopPropagation(),n.stopImmediatePropagation(),a[e("log")](...t("log","🛡️ Click event prevented immediately")),processSubmissionAsync(n,s,"click")}};return document.addEventListener("click",clickHandler,!0),a[e("log")](...t("log","🖱️ Click interception active")),()=>{document.removeEventListener("click",clickHandler,!0),a[e("log")](...t("log","🖱️ Click interception removed"))}}function setupKeyboardInterception(){const keyboardHandler=function(n){try{const i=document.querySelector(s),r=undefined;if(!(i&&i.contains(n.target)))return!0;const l=undefined;if(!("Enter"===n.key&&!n.shiftKey))return!0;a[e("log")](...t("log","⌨️ Submission key combo detected"));const p=document.querySelector(o);return!p||p.disabled||p.hasAttribute("disabled")?(a[e("log")](...t("log","⚠️ Send button not available or disabled")),!0):u?(a[e("log")](...t("log","⏳ Keyboard already processing - blocking")),!1):c?d?(a[e("log")](...t("log","✅ File injection complete - allowing keyboard to proceed normally")),d=!1,!0):(a[e("log")](...t("log","🛡️ Keyboard event prevented immediately")),processSubmissionAsync(n,p,"keyboard"),!1):(a[e("log")](...t("log","🚀 Keyboard handler disarmed - allowing submission to proceed")),!0)}catch(n){return a[e("error")](...t("error","❌ Error in keyboard interception:",n)),!0}};if(n&&n.page)return n.page.keydownHandlers=n.page.keydownHandlers||[],n.page.keydownHandlers.push(keyboardHandler),a[e("log")](...t("log","⌨️ Keyboard interception registered with mcp_link system")),()=>{const o=n.page.keydownHandlers.indexOf(keyboardHandler);o>-1&&(n.page.keydownHandlers.splice(o,1),a[e("log")](...t("log","⌨️ Keyboard interception removed from mcp_link system")))};{const fallbackHandler=e=>{const t=undefined;keyboardHandler(e)||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation())};return document.addEventListener("keydown",fallbackHandler,{capture:!0}),a[e("log")](...t("log","⌨️ Keyboard interception active (fallback mode)")),()=>{document.removeEventListener("keydown",fallbackHandler,{capture:!0}),a[e("log")](...t("log","⌨️ Keyboard interception removed (fallback mode)"))}}}a[e("log")](...t("log","🎯 Setting up submission interception for selectors:",{submitButton:o,inputContainer:s}));const p=setupClickInterception(),g=setupKeyboardInterception();return a[e("log")](...t("log","🎯 Form submission interception fully initialized")),{cleanup:()=>{p(),g(),a[e("log")](...t("log","🧹 Form submission interception cleaned up"))},setActive:(n=!0)=>{c=n,a[e("log")](...t("log",`🚀 Interception active: ${n}`))},isProcessing:()=>u}}function doAttachTextAsFileToSubmission(n,o,s){let i;try{const r=getCurrentSiteConfig("detectFileInputElement");if(r){const l=detectFileInputElement(r);l?(i=attachTextAsFileToSubmission(l,o,n,{fileType:s}),a[e("log")](...t("log","🏴‍☠️ System prompt attached:",i)),i.success?a[e("log")](...t("log","✅ File attachment successful - submission will proceed automatically")):a[e("warn")](...t("warn","⚠️ File attachment failed - submission will proceed without file"))):a[e("warn")](...t("warn","⚠️ Could not find file input element for attachment"))}else a[e("warn")](...t("warn","⚠️ No detectFileInputElement config found for current site"))}catch(n){a[e("error")](...t("error","❌ Error attaching system prompt:",n))}return i}function detectFrameworksFromConfig(e,t){const n={};if(!t?.frameworkDetection)return{react:!!Object.keys(e).find(e=>e.startsWith("__reactFiber")),prosemirror:e.classList.contains("ProseMirror"),quill:e.classList.contains("ql-editor"),draftjs:e.classList.contains("public-DraftEditor-content")};const o=t.frameworkDetection;return o.react?.property&&(n.react=!!Object.keys(e).find(e=>e.startsWith(o.react.property))),["prosemirror","quill","draftjs"].forEach(t=>{const a=o[t]?.className;a&&(n[t]=e.classList.contains(a))}),n}function getInsertionMethodConfig(e,t,n){if(!e?.methods?.[n])return null;const o=e.methods[n];return"contenteditable"===n?t.prosemirror&&o.prosemirror?o.prosemirror:t.draftjs&&o.draftjs?o.draftjs:t.quill&&o.quill?o.quill:t.react&&o.react?o.react:o.standard||null:"textarea"===n?t.react&&o.react?o.react:o.standard||null:null}function isValidContentEditable(e,t){if(!t?.contentEditableValues)return"true"===e.contentEditable;const n=e.getAttribute("contenteditable");return t.contentEditableValues.includes(n)}async function performConfigBasedInsertion(e,t,n,o,a){const s="TEXTAREA"===e.tagName?"textarea":"contenteditable",i=getInsertionMethodConfig(o,n,s);if(!i)return"textarea"===s?(e.value=t,{success:!0,insertionMethod:"fallback-textarea-value"}):(e.textContent=t,{success:!0,insertionMethod:"fallback-div-textContent"});let r="unknown";try{switch(i.technique){case"nativeSetter":const n=undefined;Object.getOwnPropertyDescriptor(window.HTMLTextAreaElement.prototype,"value").set.call(e,t),r="react-native-setter";break;case"directValue":e.value=t,r="textarea-direct-value";break;case"execCommand":i.selectAll&&document.execCommand("selectAll",!1,null),i.clearFirst&&(e.innerHTML="");const o=undefined;if(!document.execCommand("insertText",!1,t))throw new Error("execCommand failed");r="execCommand";break;case"compositionEvents":e.innerHTML="",e.textContent="",i.clearDelay&&await new Promise(e=>setTimeout(e,i.clearDelay));const a=document.createRange(),s=window.getSelection();a.selectNodeContents(e),s.removeAllRanges(),s.addRange(a);const l=i.events||["compositionstart","compositionupdate","compositionend"],c=new CompositionEvent(l[0],{bubbles:!0,cancelable:!0}),u=new CompositionEvent(l[1],{bubbles:!0,cancelable:!0,data:t}),d=new CompositionEvent(l[2],{bubbles:!0,cancelable:!0,data:t});e.dispatchEvent(c),e.textContent=t,e.dispatchEvent(u),e.dispatchEvent(d),r="react-composition-events";break;case"keystrokeSimulation":const p=i.selectors||{},g=p.dataContents||'[data-contents="true"]',m=p.textSpan||"span[data-offset-key]",b=e.querySelector(g),h=e.querySelector(m);if(!h)throw new Error("DraftJS span element not found");{h.innerHTML="",h.appendChild(document.createTextNode(t));const n=document.createRange(),o=window.getSelection();n.selectNodeContents(h),n.collapse(!1),o.removeAllRanges(),o.addRange(n);for(let n=0;n<t.length;n++){const o=t[n];["keydown","keypress","beforeinput","input","keyup"].forEach(t=>{const n=new KeyboardEvent(t,{bubbles:!0,cancelable:!0,key:o,char:o,charCode:o.charCodeAt(0),keyCode:o.charCodeAt(0),which:o.charCodeAt(0)});e.dispatchEvent(n)});const a=new InputEvent("input",{bubbles:!0,cancelable:!0,data:o,inputType:"insertText"});e.dispatchEvent(a)}r="draftjs-keystroke-simulation"}break;case"quillAPI":const f=e.__quill||e.quill;if(!f||!f.insertText)throw new Error("No Quill API available");f.insertText(0,t),r="quill-api";break;case"textContent":e.textContent=t,r="textContent";break;default:throw new Error(`Unknown insertion technique: ${i.technique}`)}return{success:!0,insertionMethod:r}}catch(n){if(i.fallback){if("textContent"===i.fallback)return e.textContent=t,{success:!0,insertionMethod:`${r}-textContent-fallback`};if("directValue"===i.fallback)return e.value=t,{success:!0,insertionMethod:`${r}-directValue-fallback`}}throw n}}async function insertQueryText(n="Default test text from insertQueryText()"){const o=window.location.hostname;a[e("log")](...t("log",`🖊️ insertQueryText() starting for ${o} with text: "${n.substring(0,50)}${n.length>50?"...":""}"`));const s=getCurrentSiteConfig("detectChatInput");if(!s){const n=`No chat input configuration found for hostname: ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o}}const i=detectChatInput(s);if(!i){const n=`No input element detected for ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,config:s}}const r=getCurrentSiteConfig("insertQueryText");try{i.focus(),a[e("log")](...t("log",`✅ Input element focused: ${i.tagName}${i.id?"#"+i.id:""}${i.className?"."+i.className.split(" ")[0]:""}`));let s="unknown",l="unknown";const c=detectFrameworksFromConfig(i,r),u=c.react,d=c.prosemirror,p=c.quill,g=c.draftjs,m=[];if(u&&m.push("react"),d&&m.push("prosemirror"),p&&m.push("quill"),g&&m.push("draftjs"),l=m.length>0?m.join("+"):"vanilla",a[e("log")](...t("log",`🔍 Framework detection: ${l}, Element: ${i.tagName}`)),"TEXTAREA"===i.tagName||"DIV"===i.tagName&&isValidContentEditable(i,r)){const l=undefined;s=(await performConfigBasedInsertion(i,n,c,r,o)).insertionMethod,a[e("log")](...t("log",`📝 Text inserted using config-based method: ${s}`))}else i.textContent=n,s="fallback-textContent",a[e("warn")](...t("warn","⚠️ Unknown element type, using textContent fallback"));const b={bubbles:!0,cancelable:!0},h=r?.events||{},f=h.core||["input","change"];f.forEach(e=>{i.dispatchEvent(new Event(e,b))}),u&&h.react&&h.react.forEach(e=>{try{"InputEvent"===e&&i.dispatchEvent(new InputEvent("input",{bubbles:!0,cancelable:!0,data:n,inputType:"insertText"}))}catch(e){}}),"DIV"===i.tagName&&h.contenteditable&&h.contenteditable.forEach(e=>{i.dispatchEvent(new KeyboardEvent(e,b))}),h.siteSpecific&&h.siteSpecific.forEach(e=>{["focus","blur","focusin","focusout"].includes(e)?i.dispatchEvent(new Event(e,b)):"keypress"===e&&i.dispatchEvent(new KeyboardEvent("keypress",{bubbles:!0,cancelable:!0,key:"a",charCode:97}))});const y=[...f];u&&h.react&&y.push(...h.react),"DIV"===i.tagName&&h.contenteditable&&y.push(...h.contenteditable),h.siteSpecific&&y.push(...h.siteSpecific),a[e("log")](...t("log",`🔔 Events dispatched: ${y.join(", ")}`));const S="TEXTAREA"===i.tagName?i.value:i.textContent||i.innerText||"",v=S.includes(n),C=S.trim()===n,w={success:!0,hostname:o,elementInfo:{tagName:i.tagName,id:i.id||null,className:i.className||null,contentEditable:i.contentEditable},frameworkDetected:l,insertionMethod:s,textInserted:n,actualText:S.trim(),verified:v,exactMatch:C};return a[e("log")](...t("log",`${v?"✅":"⚠️"} insertQueryText() completed: ${v?"VERIFIED":"UNVERIFIED"} (method: ${s})`)),v||a[e("warn")](...t("warn",`⚠️ Text insertion verification failed - framework may have overridden content. Expected: "${n}", Actual: "${S}"`)),w}catch(n){const s=`Error inserting text: ${n.message}`;return a[e("error")](...t("error",s,n)),{success:!1,error:s,hostname:o,elementInfo:{tagName:i?.tagName||"unknown",id:i?.id||null,className:i?.className||null},frameworkDetected:frameworkDetected||"unknown"}}}async function submitToolResponse(n,o=null){const s=window.location.hostname;let i={lookingForToolcalls:!1,isFirstUserMessage:!1};a[e("log")](...t("log",`🤖 submitToolResponse() starting for ${s} with ${n.length} chars${o?` (toolCallId: ${o})`:""}`));try{const r=doAttachTextAsFileToSubmission(n,"tool reply.txt","text/plain");if(!r.success)return a[e("error")](...t("error","❌ Failed to insert tool response text:",r.error)),{success:!1,step:"response_file_insertion",error:r.error,hostname:s,toolCallId:o};a[e("log")](...t("log","✅ Tool response text inserted successfully",{attachResult:r})),a[e("log")](...t("log","⏳ Waiting for file upload to complete before submission..."));const l=await waitForFileUploadComplete(i);if(!l.success){const n=`File upload wait failed: ${l.error}`;return a[e("error")](...t("error",n)),{success:!1,step:"upload_wait_failed",error:n,hostname:s,toolCallId:o,uploadWaitResult:l}}a[e("log")](...t("log","✅ File upload completed, now waiting for submit button to be ready..."));const c=await waitForSubmitReady(i);if(!c.success){const n=`Submit ready wait failed: ${c.error}`;return a[e("error")](...t("error",n)),{success:!1,step:"submit_ready_wait_failed",error:n,hostname:s,toolCallId:o,submitReadyResult:c}}a[e("log")](...t("log",`✅ Submit button ready after ${c.elapsedTimeMs}ms, proceeding with submission...`));const u=await submitChatForm();return{success:!0,hostname:s,toolCallId:o,attachResult:r,submitResult:u,buttonInfo:{enabled:u.enabled,purpose:u.purpose},note:"Tool response submitted successfully to AI"}}catch(n){const i=`Error submitting tool response: ${n.message}`;return a[e("error")](...t("error",i,n)),{success:!1,step:"general_error",error:i,hostname:s,toolCallId:o}}}async function submitChatForm(n=null){const o=window.location.hostname;a[e("log")](...t("log",`🚀 submitChatForm() starting for ${o}`));const s=getCurrentSiteConfig("detectInputSubmitButtonAndStatus");if(!s){const n=`No submit button configuration found for hostname: ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,turnNumber:null}}const i=undefined;if(!getCurrentSiteConfig("detectConversation")){const n=`No conversation configuration found for hostname: ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,turnNumber:null}}const r=getCurrentSiteConfig("submitForm"),l=null!==n?n:r?.submitDelay||100,c=r?.verificationDelay||100,u=r?.method||"buttonClick",d=r?.keyEvent;a[e("log")](...t("log",`⏱️ Using submit method: ${u}, delay: ${l}ms, verification delay: ${c}ms`));try{const n=analyzeConversationSiteSpecific(),i=n.userCount+1;a[e("log")](...t("log",`📊 Pre-submission: ${n.userCount} user messages, turn number will be: ${i}`));const r=Date.now();let c=null;if("enterKey"===u){a[e("log")](...t("log","🔥 Using Enter key submission method"));const n=getCurrentSiteConfig("detectChatInput");if(!n){const n=`No chat input configuration found for Enter key method: ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,turnNumber:i}}const s=detectChatInput(n);if(!s){const n=`Chat input not found for Enter key method: ${o}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,turnNumber:i}}a[e("log")](...t("log",`✅ Chat input found for Enter key: ${s.tagName}${s.id?"#"+s.id:""}`));try{s.focus()}catch(n){a[e("warn")](...t("warn",`⚠️ Could not focus chat input: ${n.message}`))}setTimeout(()=>{const n=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,key:d?.key||"Enter",code:d?.code||"Enter",keyCode:d?.keyCode||13,which:d?.which||13,ctrlKey:d?.ctrlKey||!1,metaKey:d?.metaKey||!1});s.dispatchEvent(n),a[e("log")](...t("log","✅ Enter key event dispatched via setTimeout"))},l),c={success:!0,button:s,enabled:!0,purpose:"enterKey"}}else{if(a[e("log")](...t("log","🔥 Using button click submission method")),c=detectInputSubmitButtonAndStatus(s),!c.success||!c.button){const n=`Submit button not found or not enabled: ${c.error||"Unknown error"}`;return a[e("error")](...t("error",n)),{success:!1,error:n,hostname:o,turnNumber:i,submitResult:c}}c.enabled||a[e("warn")](...t("warn",`⚠️ Submit button appears disabled (purpose: ${c.purpose}) but continuing anyway`));const n=c.button;a[e("log")](...t("log",`✅ Submit button found: ${n.tagName}${n.id?"#"+n.id:""}${n.className?"."+n.className.split(" ")[0]:""}`));try{n.focus()}catch(n){a[e("warn")](...t("warn",`⚠️ Could not focus submit button: ${n.message}`))}setTimeout(()=>{n.click(),a[e("log")](...t("log","✅ Submit button clicked via setTimeout"))},l)}return a[e("log")](...t("log",`✅ Form submission scheduled successfully at ${r}`)),await new Promise(e=>setTimeout(e,10)),{success:!0,hostname:o,turnNumber:i,submitResult:c,method:u,message:`Form submission scheduled via ${u} with ${l}ms delay`,scheduledAt:r,note:"Submission is scheduled via setTimeout - verification must be done separately"}}catch(n){const s=`Error submitting form: ${n.message}`;return a[e("error")](...t("error",s,n)),{success:!1,error:s,hostname:o,turnNumber:null}}}function attachTextAsFileToSubmission(n,o,s,i={}){try{const r=window.location.hostname,l=getCurrentSiteConfig("attachmentMethods"),{fileType:c="text/plain",events:u=l?.supportedMethods?.direct?.events||["change","input"]}=i;a[e("log")](...t("log",`Injecting file using site-aware method: ${o} (${s.length} chars) on ${r}`));const d=l?.defaultMethod||"direct",p=l?.supportedMethods?.[d];if(d.includes("clipboard_paste")||p?.events?.includes("paste"))return performClipboardPasteAttachment(n,o,s,c,p,l,r);if(d.includes("dragdrop")||p?.events?.includes("drop"))return performDragDropAttachment(n,o,s,c,p,l,r);if(!n||"file"!==n.type)throw new Error("Invalid file input element provided for direct method");const g=new File([s],o,{type:c,lastModified:Date.now()}),m=new DataTransfer;if(m.items.add(g),n.files=m.files,!1!==l?.supportedMethods?.direct?.enabled)try{n._valueTracker&&n._valueTracker.setValue("");const e=Object.keys(n).find(e=>e.startsWith("__reactFiber"));if(e){const t=n[e];t?.memoizedProps?.onChange&&t.memoizedProps.onChange({target:n,currentTarget:n})}}catch(n){a[e("debug")](...t("debug","Framework compatibility step failed (non-critical):",n.message))}const b={};u.forEach(e=>{const t=new Event(e,{bubbles:!0,cancelable:!0});b[e]=n.dispatchEvent(t)});const h={success:n.files.length>0,fileCount:n.files.length,fileName:n.files[0]?.name,fileSize:n.files[0]?.size,fileType:n.files[0]?.type,eventResults:b,inputElement:{id:n.id,className:n.className,multiple:n.multiple},method:"direct",hostname:r,configUsed:!!l};return a[e("log")](...t("log","File injection result:",h)),h}catch(n){return a[e("error")](...t("error","Error in file injection:",n)),{success:!1,error:n.message,fileName:o,contentLength:s?.length||0,method:"direct"}}}function performDragDropAttachment(n,o,s,i,r,l,c){try{a[e("log")](...t("log",`Drag-drop attachment: Simulating file drop on ${n.tagName}`));const u=new File([s],o,{type:i,lastModified:Date.now()}),d=new DataTransfer;d.items.add(u);const p=r?.events||["dragover","drop"],g={};if(p.includes("dragover")){const e=new DragEvent("dragover",{bubbles:!0,cancelable:!0,dataTransfer:d});g.dragover=n.dispatchEvent(e)}if(p.includes("drop")){const o=new DragEvent("drop",{bubbles:!0,cancelable:!0,dataTransfer:d});setTimeout(()=>{g.drop=n.dispatchEvent(o),a[e("log")](...t("log","Drop events dispatched:",g))},10)}return{success:!0,fileCount:1,fileName:o,fileSize:s.length,fileType:i,eventResults:g,method:l?.defaultMethod||"dragdrop",hostname:c,configUsed:!!l,targetElement:{tagName:n.tagName,id:n.id||"no-id",className:n.className||"no-class"},note:"Used configurable drag-drop simulation"}}catch(n){return a[e("error")](...t("error","Drag-drop attachment failed:",n)),{success:!1,error:n.message,fileName:o,contentLength:s?.length||0,method:l?.defaultMethod||"dragdrop",hostname:c,configUsed:!!l}}}function performClipboardPasteAttachment(n,o,s,i,r,l,c){try{a[e("log")](...t("log",`Clipboard paste attachment: Simulating paste on ${n.tagName}`));const u=new File([s],o,{type:i,lastModified:Date.now()}),d=new DataTransfer;d.items.add(u);const p=r?.events||["paste","input"],g={};if(n.focus(),a[e("log")](...t("log","Chat input focused for paste simulation")),p.includes("paste")){const o=new ClipboardEvent("paste",{bubbles:!0,cancelable:!0,clipboardData:d});g.paste=n.dispatchEvent(o),a[e("log")](...t("log",`Paste event dispatched: ${g.paste}`))}return p.includes("input")&&setTimeout(()=>{const s=new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:o});g.input=n.dispatchEvent(s),a[e("log")](...t("log",`Input event dispatched: ${g.input}`))},50),{success:!0,fileCount:1,fileName:o,fileSize:s.length,fileType:i,eventResults:g,method:l?.defaultMethod||"clipboard_paste",hostname:c,configUsed:!!l,targetElement:{tagName:n.tagName,id:n.id||"no-id",className:n.className||"no-class",contentEditable:n.contentEditable},note:"Used clipboard paste simulation - system clipboard not affected"}}catch(n){return a[e("error")](...t("error","Clipboard paste attachment failed:",n)),{success:!1,error:n.message,fileName:o,contentLength:s?.length||0,method:l?.defaultMethod||"clipboard_paste",hostname:c,configUsed:!!l}}}function detectFileInputElement(n){if(!n)return a[e("warn")](...t("warn","No file input configuration provided")),null;const o=[()=>n.id?document.getElementById(n.id):null,()=>{if(n.selectors)for(const e of n.selectors){const t=document.querySelector(e);if(t)return t}return null},()=>{if(n.parentSelectors)for(const e of n.parentSelectors){const t=document.querySelector(e);if(t){const e=t.querySelector('input[type="file"]');if(e)return e}}return null},()=>{const e=document.querySelectorAll('input[type="file"]');for(const t of e)if(isValidFileInput(t,n))return t;return null}];for(let s=0;s<o.length;s++){const i=o[s]();if(i&&isValidFileInput(i,n))return a[e("log")](...t("log",`✅ File input detected using strategy ${s+1}:`,i)),i}return a[e("warn")](...t("warn","❌ No valid file input element found")),null}function isValidFileInput(e,t){const n=t?.validation?.type||"file";if("file"===n){if(!e||"INPUT"!==e.tagName||"file"!==e.type)return!1}else if("div"===n){if(!e||"DIV"!==e.tagName)return!1}else if("button"===n){if(!e||"BUTTON"!==e.tagName)return!1}else if(!e)return!1;if(t.validation){const n=t.validation;if("file"===n.type){if(!0===n.hidden){const t=getComputedStyle(e),n=undefined;if(!(e.hidden||"none"===t.display||"hidden"===t.visibility||"0"===t.opacity||"absolute"===t.position&&(parseInt(t.left)<-1e3||parseInt(t.top)<-1e3)))return!1}if(!0===n.multiple&&!e.multiple)return!1;if(!1===n.multiple&&e.multiple)return!1}}return e.isConnected}function detectConversationElements(n){const o=!0===n?.debugConfig;if(a[e("log")](...t("log","🔍 Site-specific conversation detection - Starting analysis")),o&&a[e("log")](...t("log","🐛 DEBUG MODE ENABLED - Will provide detailed logging")),!n)return a[e("log")](...t("log","❌ No conversation detection configuration provided")),{success:!1,error:"No conversation configuration",userMessages:[],aiMessages:[],userCount:0,aiCount:0,lastAiMessage:null};o?a[e("log")](...t("log","🐛 Using config:",JSON.stringify(n,null,2))):a[e("log")](...t("log","🔍 Using config:",n));const s=undefined,i=(n.userSelectors||[n.userMessageSelector]).filter(e=>e).join(", ");o&&(a[e("log")](...t("log","🐛 USER MESSAGE DETECTION:")),a[e("log")](...t("log","🐛   Raw userSelectors:",n.userSelectors)),a[e("log")](...t("log","🐛   Raw userMessageSelector:",n.userMessageSelector)),a[e("log")](...t("log","🐛   Combined userSelector:",i)));const r=i?document.querySelectorAll(i):[];o&&(a[e("log")](...t("log",`🐛   Found ${r.length} total user selector matches`)),r.length>0&&(Array.from(r).slice(0,3).forEach((n,o)=>{const s=n.textContent?.trim().substring(0,100)||"[no text]",i=Array.from(n.classList).join(" ")||"[no classes]";a[e("log")](...t("log",`🐛   User element ${o+1}: ${n.tagName} classes="${i}" text="${s}..."`))}),r.length>3&&a[e("log")](...t("log",`🐛   ... and ${r.length-3} more user elements`))));const l=Array.from(r).filter(e=>isValidConversationMessage(e,n,"user"));o&&a[e("log")](...t("log",`🐛   After validation: ${l.length} valid user messages (${r.length-l.length} filtered out)`));const c=undefined,u=(n.aiSelectors||[n.aiMessageSelector]).filter(e=>e).join(", ");o&&(a[e("log")](...t("log","🐛 AI MESSAGE DETECTION:")),a[e("log")](...t("log","🐛   Raw aiSelectors:",n.aiSelectors)),a[e("log")](...t("log","🐛   Raw aiMessageSelector:",n.aiMessageSelector)),a[e("log")](...t("log","🐛   Combined aiSelector:",u)));const d=u?document.querySelectorAll(u):[];o&&(a[e("log")](...t("log",`🐛   Found ${d.length} total AI selector matches`)),d.length>0&&(Array.from(d).slice(0,3).forEach((n,o)=>{const s=n.textContent?.trim().substring(0,100)||"[no text]",i=Array.from(n.classList).join(" ")||"[no classes]";a[e("log")](...t("log",`🐛   AI element ${o+1}: ${n.tagName} classes="${i}" text="${s}..."`))}),d.length>3&&a[e("log")](...t("log",`🐛   ... and ${d.length-3} more AI elements`))));const p=Array.from(d).filter(e=>isValidConversationMessage(e,n,"ai"));o&&a[e("log")](...t("log",`🐛   After validation: ${p.length} valid AI messages (${d.length-p.length} filtered out)`));const g=p.length>0?p[p.length-1]:null;if(o&&g){const n=g.textContent?.trim().substring(0,150)||"[no text]";a[e("log")](...t("log",`🐛   Last AI message preview: "${n}..."`))}return a[e("log")](...t("log",`✅ Site-specific detection found ${l.length} user messages, ${p.length} AI messages`)),{success:!0,method:"site-specific",userMessages:l,aiMessages:p,userCount:l.length,aiCount:p.length,lastAiMessage:g,config:n}}function isValidConversationMessage(n,o,s){const i=!0===o?.debugConfig,r=n.textContent?.trim()||"",l=r.substring(0,60)+(r.length>60?"...":"");if(i){const o=Array.from(n.classList).join(" ")||"[no classes]";a[e("log")](...t("log",`🐛     Validating ${s} element: ${n.tagName} classes="${o}" text="${l}"`))}if(o.excludeSelectors&&Array.isArray(o.excludeSelectors))for(const s of o.excludeSelectors){if(n.matches(s))return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Element matches exclude selector "${s}"`)),!1;if(n.closest(s))return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Element is contained within exclude selector "${s}"`)),!1}const c=o.validationRules;if(c){if(void 0!==c?.minTextLength&&r.length<c.minTextLength||void 0!==c?.maxTextLength&&r.length>c.maxTextLength)return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Text length ${r.length} outside range [${c.minTextLength}, ${c.maxTextLength}]`)),!1;if(c.excludePatterns&&Array.isArray(c.excludePatterns))for(const n of c.excludePatterns)if(r.includes(n))return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Text contains excluded pattern "${n}"`)),!1}if(c?.visibilityRules){const o=c.visibilityRules;if(o.checkDisplay||o.checkVisibility){const s=getComputedStyle(n);if(o.checkDisplay&&"none"===s.display)return i&&a[e("log")](...t("log","🐛       ❌ EXCLUDED: Element not visible (display: none)")),!1;if(o.checkVisibility&&"hidden"===s.visibility)return i&&a[e("log")](...t("log","🐛       ❌ EXCLUDED: Element not visible (visibility: hidden)")),!1}}if(c?.dimensionRules){const o=c.dimensionRules,s=n.getBoundingClientRect();if(void 0!==o.minWidth&&s.width<o.minWidth)return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Element too narrow (width: ${s.width}px < ${o.minWidth}px)`)),!1;if(void 0!==o.minHeight&&s.height<o.minHeight)return i&&a[e("log")](...t("log",`🐛       ❌ EXCLUDED: Element too short (height: ${s.height}px < ${o.minHeight}px)`)),!1}return i&&a[e("log")](...t("log","🐛       ✅ VALID: Element passed all validation checks")),!0}function analyzeConversationSiteSpecific(){const n=getCurrentSiteConfig("detectConversation"),o=!0===n?.debugConfig;return o&&(a[e("log")](...t("log","🐛 analyzeConversationSiteSpecific() called - looking for conversation config")),a[e("log")](...t("log",`🐛   Current hostname: ${window.location.hostname}`)),a[e("log")](...t("log",`🐛   Current URL: ${window.location.href}`))),n?(o&&a[e("log")](...t("log","🐛   Found conversation config, delegating to detectConversationElements()")),detectConversationElements(n)):(o&&(a[e("log")](...t("log","🐛   Available site configs:",Object.keys(getCurrentSiteConfig()||{}))),a[e("log")](...t("log","🐛   Available purposes for this site:",getSupportedPurposes()))),a[e("warn")](...t("warn",`❌ No conversation detection configuration for ${window.location.hostname}`)),{success:!1,error:"No conversation configuration for site",userMessages:[],aiMessages:[],userCount:0,aiCount:0,lastAiMessage:null})}function detectConversationByCSSModules(n){const o=!0===n?.debugConfig;a[e("log")](...t("log","🔍 CSS Module structural detection - analyzing DOM patterns")),o&&a[e("log")](...t("log","🐛 CSS Module fallback triggered - site-specific detection failed"));const s=[],i=[],r=document.querySelectorAll('main, [role="main"], .conversation, .chat, .messages, .thread');o&&(a[e("log")](...t("log",`🐛 STRATEGY 1: Found ${r.length} potential conversation containers`)),Array.from(r).forEach((n,o)=>{const s=`${n.tagName}${n.id?"#"+n.id:""}${n.className?"."+n.className.split(" ")[0]:""}`;a[e("log")](...t("log",`🐛   Container ${o+1}: ${s}`))}));for(const n of r){const r=Array.from(n.querySelectorAll("div, article, section")).filter(e=>{const t=e.textContent?.trim()||"";return t.length>10&&t.length<5e3&&!e.querySelector("input, textarea, button")&&!e.closest("nav, header, footer, .sidebar")&&e.children.length<20});if(o){const o=`${n.tagName}${n.id?"#"+n.id:""}`;a[e("log")](...t("log",`🐛   Container ${o}: Found ${r.length} potential message elements`))}const l=groupMessagesByStructure(r,o);if(o&&(a[e("log")](...t("log",`🐛   Container ${n.tagName}: Grouped into ${l.length} structural groups`)),l.forEach((n,o)=>{a[e("log")](...t("log",`🐛     Group ${o+1}: ${n.length} elements`))})),l.length>=2){o&&a[e("log")](...t("log",`🐛   ✅ Found valid alternating pattern in container ${n.tagName}`)),l.forEach((e,t)=>{t%2==0?s.push(...e):i.push(...e)});break}}if(0===s.length&&0===i.length){o&&a[e("log")](...t("log","🐛 STRATEGY 2: No alternating pattern found, trying length-based heuristic"));const n=Array.from(document.querySelectorAll("*")).filter(e=>{const t=e.textContent?.trim()||"";return t.length>15&&t.length<3e3&&e.children.length<=5&&!e.querySelector("input, textarea, button, a")&&!e.closest("nav, header, footer, .sidebar, .menu")});o&&a[e("log")](...t("log",`🐛   Found ${n.length} potential message elements across entire page`)),n.forEach(e=>{const t=undefined;(e.textContent?.trim()||"").length<200?s.push(e):i.push(e)});const r=s.length,l=i.length;s.splice(10),i.splice(10),o&&(r>10||l>10)&&a[e("log")](...t("log",`🐛   Trimmed from ${r}/${l} to ${s.length}/${i.length} messages`))}const l=i.length>0?i[i.length-1]:null;return o&&(a[e("log")](...t("log",`🐛 CSS Module detection final results: ${s.length} user, ${i.length} AI messages`)),l&&a[e("log")](...t("log","🐛   Last AI message:",{lastAiMessage:l}))),a[e("log")](...t("log",`✅ Structural CSS Module detection found ${s.length} user messages, ${i.length} AI messages`)),{success:s.length>0||i.length>0,method:"css-module-structural",userMessages:s,aiMessages:i,userCount:s.length,aiCount:i.length,lastAiMessage:l,config:n}}function groupMessagesByStructure(n,o=!1){const s=[],i=new Set;o&&a[e("log")](...t("log",`🐛     groupMessagesByStructure() processing ${n.length} elements`));for(const r of n){if(i.has(r))continue;const l=[r];i.add(r);const c=getElementStructureSignature(r);if(o){const n=r.textContent?.trim().substring(0,40)+"..."||"[no text]";a[e("log")](...t("log",`🐛       Creating group with signature "${c}" for "${n}"`))}for(const e of n){if(i.has(e))continue;const t=undefined;c===getElementStructureSignature(e)&&(l.push(e),i.add(e))}o&&a[e("log")](...t("log",`🐛       Group completed with ${l.length} elements`)),l.length>0&&s.push(l)}const r=s.sort((e,t)=>{const n=undefined;return(e[0].compareDocumentPosition?e[0].compareDocumentPosition(t[0]):0)&Node.DOCUMENT_POSITION_FOLLOWING?-1:1});return o&&(a[e("log")](...t("log",`🐛     groupMessagesByStructure() result: ${r.length} structural groups`)),r.forEach((n,o)=>{const s=n.map(e=>getElementStructureSignature(e)),i=[...new Set(s)];a[e("log")](...t("log",`🐛       Group ${o+1}: ${n.length} elements, signatures: [${i.join(", ")}]`))})),r}function getElementStructureSignature(e){const t=undefined,n=undefined,o=undefined,a=undefined;return`${e.tagName.toLowerCase()}-${e.children.length}-${!!e.textContent?.trim()}-${e.parentElement?.tagName.toLowerCase()||""}`}function getMessageStyles(e){const t=getComputedStyle(e);return{textAlign:t.textAlign,backgroundColor:t.backgroundColor,marginLeft:parseFloat(t.marginLeft)||0,marginRight:parseFloat(t.marginRight)||0,borderRadius:t.borderRadius,fontWeight:t.fontWeight}}function analyzeConversationWithFallback(){const n=getCurrentSiteConfig("detectConversation"),o=!0===n?.debugConfig;o&&a[e("log")](...t("log","🐛 analyzeConversationWithFallback() starting - will try site-specific first, then CSS module fallback"));const s=analyzeConversationSiteSpecific();if(o&&a[e("log")](...t("log",`🐛 Site-specific result: success=${s.success}, userCount=${s.userCount}, aiCount=${s.aiCount}`)),s.success)return o&&a[e("log")](...t("log","🐛 ✅ Site-specific detection successful - returning result")),a[e("log")](...t("log",`✅ Site-specific detection successful: ${s.userCount}/${s.aiCount}`)),s;o&&a[e("log")](...t("log","🐛 Site-specific detection insufficient, triggering CSS module fallback")),a[e("log")](...t("log","🔄 Site-specific detection failed, trying CSS module fallback..."));const i=undefined,r=detectConversationByCSSModules(n||{});return o&&a[e("log")](...t("log",`🐛 CSS module fallback result: success=${r.success}, userCount=${r.userCount}, aiCount=${r.aiCount}`)),r}function getConversationDelta(e){const t=analyzeConversationSiteSpecific();if(!t.success)return{success:!1,error:"Unable to analyze current conversation",hasNewMessages:!1};const n=t.userCount-(e.userCount||0),o=t.aiCount-(e.aiCount||0);return{success:!0,previousCounts:e,currentCounts:{userCount:t.userCount,aiCount:t.aiCount},deltas:{userCount:n,aiCount:o},hasNewMessages:n>0||o>0,lastAiMessage:t.lastAiMessage,method:t.method}}function detectNotLoggedIn(){a[e("log")](...t("log","🔍 Not-logged-in detector - Starting analysis"));const n=window.location.hostname,o=getCurrentSiteConfig("detectLoginStatus");if(!o)return a[e("log")](...t("log",`❌ No login detection configuration for hostname: ${n}`)),{notLoggedIn:!1,confidence:"low",method:"none",reason:"No login detection configuration found for this site",indicators:[],hostname:n};a[e("log")](...t("log",`🔍 Analyzing: ${window.location.href}`)),a[e("log")](...t("log","🔍 Using config:",o));const s=detectNotLoggedInByUrl(o);if(s.detected)return a[e("log")](...t("log",`✅ URL-based detection: ${s.reason}`)),{notLoggedIn:!0,confidence:"high",method:"url",reason:s.reason,indicators:s.indicators,hostname:n};const i=detectNotLoggedInByDom(o);if(i.detected)return a[e("log")](...t("log",`✅ DOM-based detection: ${i.reason}`)),{notLoggedIn:!0,confidence:i.confidence,method:"dom",reason:i.reason,indicators:i.indicators,hostname:n};const r=detectNotLoggedInByText(o);return r.detected?(a[e("log")](...t("log",`✅ Text-based detection: ${r.reason}`)),{notLoggedIn:!0,confidence:r.confidence,method:"text",reason:r.reason,indicators:r.indicators,hostname:n}):(a[e("log")](...t("log","❌ No login state detection patterns matched - assuming logged in")),{notLoggedIn:!1,confidence:"medium",method:"none",reason:"No not-logged-in indicators found",indicators:[],hostname:n})}function detectNotLoggedInByUrl(n){const o=[],s=window.location.pathname;for(const e of n.loginPaths)if(s.includes(e))return o.push(`URL contains login path: ${e}`),{detected:!0,reason:`${n.description}: URL path contains ${e}`,indicators:o};if(!0===n.basePathOnly){if("/"===s)return o.push("URL is base path without conversation ID"),{detected:!0,reason:`${n.description}: No conversation or user session in URL`,indicators:o}}else if("string"==typeof n.basePathOnly)try{let e=!1;if(n.basePathOnly.includes("pathname === ")){const t=n.basePathOnly.match(/pathname\s*===\s*["']([^"']+)["']/);if(t){const n=undefined;e=s===t[1]}}else if(n.basePathOnly.includes("pathname.startsWith(")){const t=n.basePathOnly.match(/pathname\.startsWith\(["']([^"']+)["']\)/);if(t){const n=t[1];e=s.startsWith(n)}}else if(n.basePathOnly.includes("pathname.includes(")){const t=n.basePathOnly.match(/pathname\.includes\(["']([^"']+)["']\)/);if(t){const n=t[1];e=s.includes(n)}}if(e)return o.push(`URL matches base path condition: ${n.basePathOnly}`),{detected:!0,reason:`${n.description}: URL matches base path pattern`,indicators:o}}catch(o){a[e("warn")](...t("warn",`Failed to evaluate base path condition: ${n.basePathOnly}`,o))}return{detected:!1,reason:"No URL-based login indicators found",indicators:o}}function detectNotLoggedInByDom(n){const o=[];let s="medium",i=!1;for(const r of n.loggedOutSelectors)try{const e=document.querySelectorAll(r);let t=0;for(const o of e){const e=o.textContent?.trim()||"",a=undefined;n.loggedOutTextPatterns.some(t=>e.includes(t))&&(t++,i=!0)}t>0&&(o.push(`Found ${t} logged-out elements with login text: ${r}`),s="high")}catch(n){a[e("warn")](...t("warn",`Invalid selector: ${r}`,n))}const r=i,l=undefined;return{detected:i,confidence:s,reason:i?`Found login content on page (${o.length} indicator(s))`:"No login content detected on page",indicators:o}}function detectNotLoggedInByText(e){const t=[];let n="medium",o=!1;for(const a of e.restrictionMessages){const e=undefined;(document.body?.textContent||"").includes(a)&&(t.push(`Found restriction message: "${a}"`),o=!0,n="high")}const a=document.querySelectorAll('button, a, input[type="submit"], input[type="button"]');for(const s of a){const a=s.textContent?.trim()||"",i=undefined;if(null!==s.offsetParent&&!s.hidden&&a.length<=30)for(const i of e.loggedOutTextPatterns)if(a===i||a.length<=20&&a.includes(i)){const e=`${s.tagName}${s.id?"#"+s.id:""}${s.className?"."+s.className.split(" ")[0]:""}`;t.push(`Found prominent login element: "${i}" in ${e}`),o=!0,n="high";break}}const s=o,i=undefined;return{detected:o,confidence:n,reason:o?"Found strong login indicators in prominent UI elements":"No prominent login indicators found in text analysis",indicators:t}}function isUserLoggedIn(){const e=undefined;return!detectNotLoggedIn().notLoggedIn}function getLoginStateDetails(){const e=undefined;return{...detectNotLoggedIn(),url:window.location.href,timestamp:(new Date).toISOString(),userAgent:navigator.userAgent,pageTitle:document.title}}const i={"chat.deepseek.com":{userNewMessageInput:{critical:{tagName:"TEXTAREA",id:"chat-input",position:"absolute",display:"block",resize:"none"},important:{width:"780px",height:"56px",padding:"0px",margin:"0px",boxSizing:"content-box"},minor:{backgroundColor:"rgba(0, 0, 0, 0)",border:"0px none rgb(64, 64, 64)",borderRadius:"0px",outline:"rgb(64, 64, 64) none 0px",fontSize:"16px",fontFamily:'quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Noto Sans", Ubuntu, Cantarell, "Helvetica Neue", Oxygen, "Open Sans", sans-serif',lineHeight:"28px",color:"rgb(64, 64, 64)",textAlign:"start",verticalAlign:"baseline"}},inputSubmitButton:{critical:{tagName:"DIV",role:"button",display:"flex",justifyContent:"center",alignItems:"center",cursor:"pointer"},important:{width:"32px",height:"32px",borderRadius:"16px",padding:"0px",margin:"0px",opacity:"1"},minor:{backgroundColor:"rgb(77, 107, 254)",border:"0px none rgb(255, 255, 255)",color:"rgb(255, 255, 255)",fontSize:"16px",fontFamily:'quote-cjk-patch, Inter, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Noto Sans", Ubuntu, Cantarell, "Helvetica Neue", Oxygen, "Open Sans", sans-serif',lineHeight:"28px",overflow:"visible",outline:"rgb(255, 255, 255) none 0px",boxSizing:"content-box",pointerEvents:"auto",flexDirection:"column"}},userMessageContainer:{critical:{display:"flex",flexDirection:"column",alignItems:"flex-end",position:"relative"},important:{width:"800px",margin:"0px 0px 16px",padding:"0px 15px 0px 0px",overflow:"auto hidden"},minor:{backgroundColor:"rgba(0, 0, 0, 0)",color:"rgb(128, 0, 128)",fontSize:"14px",fontWeight:"400",height:"78px"}},userMessageBubble:{critical:{display:"block",borderRadius:"14px",position:"relative"},important:{backgroundColor:"rgb(239, 246, 255)",padding:"8px 20px",maxWidth:"calc(100% - 48px)"},minor:{color:"rgb(38, 38, 38)",fontSize:"16px",fontWeight:"400",lineHeight:"28px"}},aiMessageContainer:{critical:{display:"block",position:"relative",paddingLeft:"48px",width:"752px"},important:{backgroundColor:"rgba(0, 0, 0, 0)",paddingTop:"0px",paddingRight:"0px",paddingBottom:"0px",marginLeft:"0px",marginRight:"0px",marginTop:"0px"},minor:{color:"rgb(64, 64, 64)",fontSize:"14px",fontWeight:"400",lineHeight:"25px",borderRadius:"0px",overflow:"visible"}}}};function findBestCSSMatch(n,o,s="unknown",i=!1){const r=[];a[e("log")](...t("log",`🔍 CSS fingerprint matching for ${s}: testing ${o.length} candidates`));for(const s of o)try{const e=window.getComputedStyle(s),t=calculateMatchScore(n,e,s,i?s:null),o=getMatchDetails(n,e,s);t>30&&r.push({element:s,className:s.className,score:Math.round(10*t)/10,matchDetails:o,debugInfo:{tagName:s.tagName,textContent:s.textContent?.substring(0,100)||"",classList:Array.from(s.classList)}})}catch(n){a[e("warn")](...t("warn","Error analyzing element for CSS fingerprint:",n))}return r.sort((e,t)=>t.score-e.score),a[e("log")](...t("log",`✅ CSS fingerprint matching for ${s}: found ${r.length} matches above 30% threshold`)),r}function calculateMatchScore(n,o,s=null,i=null){let r=0,l=0;const c=[],u=[];if(n.critical)for(const[e,t]of Object.entries(n.critical)){if(l+=10,"hasSemanticClasses"===e&&s){const n=s.classList.contains("ds-markdown"),o=s.classList.contains("ds-markdown--block");t&&n&&o?(r+=10,i&&c.push({category:"CRITICAL",prop:e,expected:t,actual:"has both semantic classes",points:10})):t&&(n||o)?(r+=7,i&&c.push({category:"CRITICAL",prop:e,expected:t,actual:"has partial semantic classes",points:7})):i&&u.push({category:"CRITICAL",prop:e,expected:t,actual:"no semantic classes",points:0});continue}const n=s&&"tagName"===e?s.tagName:s&&"id"===e?s.id:s&&"role"===e?s.getAttribute("role"):o[e];n===t?(r+=10,i&&c.push({category:"CRITICAL",prop:e,expected:t,actual:n,points:10})):isCloseMatch(n,t)?(r+=7,i&&c.push({category:"CRITICAL",prop:e,expected:t,actual:n,points:7})):i&&u.push({category:"CRITICAL",prop:e,expected:t,actual:n,points:0})}if(n.important)for(const[e,t]of Object.entries(n.important)){l+=5;const n=o[e];n===t?(r+=5,i&&c.push({category:"IMPORTANT",prop:e,expected:t,actual:n,points:5})):isCloseMatch(n,t)?(r+=3,i&&c.push({category:"IMPORTANT",prop:e,expected:t,actual:n,points:3})):i&&u.push({category:"IMPORTANT",prop:e,expected:t,actual:n,points:0})}if(n.minor)for(const[e,t]of Object.entries(n.minor)){l+=1;const n=o[e];n===t?(r+=1,i&&c.push({category:"MINOR",prop:e,expected:t,actual:n,points:1})):i&&u.push({category:"MINOR",prop:e,expected:t,actual:n,points:0})}if(i&&(c.length>0||u.length>0)){const n=l>0?r/l*100:0;if(n>70){const o=undefined,s=Array.from(i.classList).filter(e=>e.match(/^_[a-f0-9]+$/));a[e("log")](...t("log",`      🔍 DETAILED: ${n.toFixed(1)}% match for [${s.join(", ")}] (${i.tagName})`)),u.length>0&&(a[e("log")](...t("log","        ❌ Mismatches:")),u.forEach(n=>{a[e("log")](...t("log",`           ${n.category}: ${n.prop} = "${n.actual}" (expected "${n.expected}")`))})),c.length>0&&u.length>3&&a[e("log")](...t("log",`        ✅ Matches: ${c.length} properties matched`))}}return l>0?r/l*100:0}function isCloseMatch(e,t){if(!e||!t)return!1;if(e===t)return!0;if(t.startsWith("rgb(")&&e.startsWith("rgb("))return areColorsClose(e,t,15);if(t.endsWith("px")&&e.endsWith("px")){const n=parseFloat(t),o=parseFloat(e),a=Math.max(5,.1*n);return Math.abs(n-o)<=a}if((t.includes("px")||"0px"===t)&&(e.includes("px")||"0px"===e)){const n=parseFloat(t)||0,o=parseFloat(e)||0;return Math.abs(n-o)<=3}if(t.includes("calc(")&&e.includes("calc("))return!0;if(t.endsWith("%")&&e.endsWith("%")){const n=parseFloat(t),o=parseFloat(e);return Math.abs(n-o)<=5}return!1}function areColorsClose(e,t,n){const parseRGB=e=>{const t=e.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);return t?[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]:null},o=parseRGB(e),a=parseRGB(t);return!(!o||!a)&&o.every((e,t)=>Math.abs(e-a[t])<=n)}function getMatchDetails(e,t,n=null){const o={critical:{matches:0,total:0,details:{}},important:{matches:0,total:0,details:{}},minor:{matches:0,total:0,details:{}}};if(e.critical)for(const[a,s]of Object.entries(e.critical)){if(o.critical.total++,"hasSemanticClasses"===a&&n){const e=n.classList.contains("ds-markdown"),t=n.classList.contains("ds-markdown--block"),i=s&&e&&t,r=s&&(e||t)&&!i;i&&o.critical.matches++,o.critical.details[a]={expected:s,actual:`markdown:${e}, block:${t}`,exactMatch:i,closeMatch:r};continue}const e=t[a],i=e===s,r=isCloseMatch(e,s);i&&o.critical.matches++,o.critical.details[a]={expected:s,actual:e,exactMatch:i,closeMatch:r}}if(e.important)for(const[n,a]of Object.entries(e.important)){o.important.total++;const e=t[n],s=e===a,i=isCloseMatch(e,a);s&&o.important.matches++,o.important.details[n]={expected:a,actual:e,exactMatch:s,closeMatch:i}}if(e.minor)for(const[n,a]of Object.entries(e.minor)){o.minor.total++;const e=t[n],s=e===a;s&&o.minor.matches++,o.minor.details[n]={expected:a,actual:e,exactMatch:s,closeMatch:!1}}return o}function detectConversationByFingerprint(n){a[e("log")](...t("log",`🔍 CSS fingerprint detection starting for ${n}`));const o=i[n];if(!o)return a[e("warn")](...t("warn",`❌ No CSS fingerprints found for site: ${n}`)),{success:!1,error:`No fingerprints available for ${n}`,confidence:0,method:"css-fingerprint"};const s=document.querySelectorAll("div[class]");a[e("log")](...t("log",`🔍 CSS fingerprint detection: found ${s.length} candidate elements`));const r=findBestCSSMatch(o.userMessageContainer,s,"userMessageContainer"),l=findBestCSSMatch(o.userMessageBubble,s,"userMessageBubble");let c=[],u=[];o.aiMessageContainer&&(c=findBestCSSMatch(o.aiMessageContainer,s,"aiMessageContainer")),o.aiMessageContent&&(u=findBestCSSMatch(o.aiMessageContent,s,"aiMessageContent"));const d=validateFingerprintMatches(r,l,c,u);return a[e("log")](...t("log","✅ CSS fingerprint validation result:",{confidence:d.confidence,userContainerMatches:r.length,userBubbleMatches:l.length,aiContainerMatches:c.length,aiContentMatches:u.length,structuralBonus:d.details?.structuralBonus})),d.confidence>.6?{success:!0,method:"css-fingerprint",confidence:d.confidence,containerClass:d.containerClass,bubbleClass:d.bubbleClass,aiContainerClass:d.aiContainerClass,aiContentClass:d.aiContentClass,userContainerMatches:r,userBubbleMatches:l,aiContainerMatches:c,aiContentMatches:u,details:d.details,siteName:n}:{success:!1,error:`Low confidence match (${Math.round(100*d.confidence)}%)`,confidence:d.confidence,method:"css-fingerprint",userContainerMatches:r,userBubbleMatches:l,aiContainerMatches:c,aiContentMatches:u,details:d.details,siteName:n}}function validateFingerprintMatches(e,t,n=[],o=[]){const a=e.length+t.length+n.length+o.length;if(0===a)return{confidence:0,details:{reason:"No matches found"}};const s=e[0],i=t[0],r=n[0],l=o[0];let c=0,u={containerClass:null,bubbleClass:null,aiContainerClass:null,aiContentClass:null};const d=100/Math.max(4,a);s&&(c+=s.score*(d/100),u.containerClass=s.className),i&&(c+=i.score*(d/100),u.bubbleClass=i.className),r&&(c+=r.score*(d/100),u.aiContainerClass=r.className),l&&(c+=l.score*(d/100),u.aiContentClass=l.className);let p=0,g=[];if(s&&i){const e=s.element.contains(i.element);g.push(`user: ${e}`),e&&(p+=10)}if(r&&l){const e=r.element.contains(l.element);g.push(`ai: ${e}`),e&&(p+=10)}return c+=p,c=Math.max(0,Math.min(100,c))/100,{...u,confidence:c,details:{containerScore:s?.score||0,bubbleScore:i?.score||0,aiContainerScore:r?.score||0,aiContentScore:l?.score||0,structuralBonus:p,structuralChecks:g,componentsFound:a,reason:`Found ${a} components with ${p}% structural bonus`}}}function testFingerprintDetections(n=!1){a[e("log")](...t("log",`🧪 Testing CSS fingerprint matching on ${window.location.hostname}...`));const o=window.location.hostname,s=Object.keys(i),r=s.find(e=>e===o);if(!r)return a[e("log")](...t("log",`⚠️ No fingerprints defined for ${o}. Available: [${s.join(", ")}]`)),{error:`No fingerprints defined for ${o}`,availableHostnames:s};const l=i[r];a[e("log")](...t("log",`✅ Found fingerprint configuration for ${r}`));const c=document.querySelectorAll("*");a[e("log")](...t("log",`🔍 Testing against ${c.length} DOM elements...`));const u={};return Object.keys(l).forEach(o=>{a[e("log")](...t("log",`\n🎯 Testing ${o}:`));const s=findBestCSSMatch(l[o],c,o,n);if(u[o]=s,0===s.length)a[e("log")](...t("log","   ❌ No matches found"));else{const n=s.slice(0,5);a[e("log")](...t("log",`   ✅ Found ${s.length} matches, showing top ${n.length}:`)),n.forEach((n,o)=>{const s=Array.from(n.element.classList),i=s.filter(e=>e.match(/^_[a-f0-9]+$/)),r=s.filter(e=>!e.match(/^_[a-f0-9]+$/));a[e("log")](...t("log",`   ${o+1}. ${n.score.toFixed(1)}% - Hashed: [${i.join(", ")}] Semantic: [${r.join(", ")}]`));const l=n.element.textContent?.trim().slice(0,60)+"...";l.length>3&&a[e("log")](...t("log",`      Text: "${l}"`))});const o={};s.forEach(e=>{const t=Array.from(e.element.classList),n=t.find(e=>e.match(/^_[a-f0-9]+$/))||t[0]||"no-class";(!o[n]||e.score>o[n].score)&&(o[n]=e)});const i=Object.values(o).sort((e,t)=>t.score-e.score);if(i.length>1){const n=i[0].score-i[1].score,o=Array.from(i[0].element.classList).find(e=>e.match(/^_[a-f0-9]+$/))||"unknown",s=Array.from(i[1].element.classList).find(e=>e.match(/^_[a-f0-9]+$/))||"unknown";a[e("log")](...t("log",`   📊 Class distinction gap: ${n.toFixed(1)}% between '${o}' and '${s}' (${n<5?"FRAGILE":n<15?"MODERATE":"ROBUST"})`))}else if(n.length>1){const o=n[0].score-n[1].score;a[e("log")](...t("log",`   📊 Score gap: ${o.toFixed(1)}% (same class, not indicative of robustness)`))}if(s.length>0&&s[0].element.classList.length>0){const n=Array.from(s[0].element.classList).find(e=>e.match(/^_[a-f0-9]+$/))||s[0].element.classList[0],o=document.querySelectorAll(`.${n}`),i=o[o.length-1],r=i?.textContent?.trim().slice(0,60)+"..."||"No text";a[e("log")](...t("log",`   📈 Class frequency: Found ${o.length} elements with class '${n}' on page`)),a[e("log")](...t("log",`   📝 Last element text: "${r}"`))}}}),a[e("log")](...t("log","\n📊 SUMMARY:")),Object.keys(u).forEach(n=>{const o=u[n].length,s=o>0?u[n][0].score.toFixed(1)+"%":"N/A";a[e("log")](...t("log",`   ${n}: ${o} matches, top score: ${s}`))}),{results:u,elementCount:c.length}}async function test_attachmentMethods(){a[e("log")](...t("log","🧪 Testing enhanced attachment methods..."));const n=window.location.hostname,o=getCurrentSiteConfig("detectFileInputElement"),s=getCurrentSiteConfig("attachmentMethods");if(!o||!s)return void a[e("warn")](...t("warn","⚠️ No file input or attachment config found for:",n));const i=detectFileInputElement(o);if(!i)return void a[e("warn")](...t("warn","⚠️ No file input element detected for:",n));const r=`# Test File Attachment\nThis is a test file to verify the enhanced attachment methods work correctly.\nSite: ${n}\nMethod: Will be determined by site configuration\nTime: ${(new Date).toISOString()}\n`;a[e("log")](...t("log",`🔧 Testing attachment on ${n} with method: ${s.defaultMethod}`));try{const n=await attachTextAsFileToSubmission(i,"test-attachment.md",r,{fileType:"text/markdown"});return a[e("log")](...t("log","🧪 Attachment test result:",n)),n.success?a[e("log")](...t("log","✅ Enhanced attachment test PASSED!")):a[e("warn")](...t("warn","❌ Enhanced attachment test FAILED:",n.error)),n}catch(n){return a[e("error")](...t("error","❌ Attachment test threw error:",n)),{success:!1,error:n.message}}}function test_detectors(){a[e("log")](...t("log","Enhancement function called"));const n=getCurrentSiteConfig("detectLoginStatus");a[e("log")](...t("log","🔬🔬 Testing universal input detection..."));const o=testGenericDetection();a[e("log")](...t("log",(o.success?"✅":"❌")+" Input detection test result:",o));const i=getCurrentSiteConfig("detectChatInput");if(a[e("log")](...t("log",`Chat input config for ${window.location.hostname}:`,i)),i){a[e("log")](...t("log","🔬🔬 Testing chat input detection..."));const n=detectChatInput(i);if(n){const o=n.getBoundingClientRect();a[e("log")](...t("log","Input element details:",{tagName:n.tagName,id:n.id||"no-id",className:n.className||"no-class",contentEditable:n.contentEditable,placeholder:n.placeholder||"no-placeholder",dimensions:`${Math.round(o.width)}x${Math.round(o.height)}`,position:`${Math.round(o.left)},${Math.round(o.top)}`,visible:o.height>0&&!n.hidden})),a[e("log")](...t("log","🔬🔬 Testing submit button detection..."));const s=getCurrentSiteConfig("detectInputSubmitButtonAndStatus");if(s){const n=detectInputSubmitButtonAndStatus(s);if(a[e("log")](...t("log",(n.success?"✅":"❌")+" Submit button detection result:",{success:n.success,enabled:n.enabled,purpose:n.purpose,strategyUsed:n.strategyUsed,buttonState:n.buttonState})),n.success&&n.button){const o=n.button.getBoundingClientRect();a[e("log")](...t("log","Submit button details:",{ariaLabel:n.button.getAttribute("aria-label"),id:n.button.id||"no-id",className:n.button.className||"no-class",enabled:n.enabled,dimensions:`${Math.round(o.width)}x${Math.round(o.height)}`,position:`${Math.round(o.left)},${Math.round(o.top)}`}))}}else a[e("log")](...t("log",`❌ No submit button configuration found for ${window.location.hostname}`))}else a[e("log")](...t("log","No input element detected - checking fallback strategies")),a[e("log")](...t("log","Strategy 1 (ID):",i.id?document.getElementById(i.id):"No ID configured")),a[e("log")](...t("log","Strategy 2 (Aria-label):",i.ariaLabel?document.querySelector(`[aria-label="${i.ariaLabel}"]`):"No aria-label configured")),a[e("log")](...t("log","Strategy 3 (Placeholder):",i.placeholder?document.querySelector(`[placeholder="${i.placeholder}"]`):"No placeholder configured")),a[e("log")](...t("log","Strategy 4 (Fallback):",document.querySelector(i.fallbackSelector)))}else a[e("error")](...t("error",`❌ No chat input configuration found for hostname: ${window.location.hostname}`)),a[e("log")](...t("log","Available site configs:",Object.keys(s)));a[e("log")](...t("log","🔬🔬 Testing conversation analysis..."));const r=analyzeConversationWithFallback();r.success?(a[e("log")](...t("log",`Found ${r.userCount} user messages and ${r.aiCount} AI messages using ${r.method} method`)),r.lastAiMessage?a[e("log")](...t("log","Last AI response text:",r.lastAiMessage.textContent)):a[e("log")](...t("log","No AI responses detected yet"))):a[e("warn")](...t("warn","Conversation analysis failed:",r.error||"Unknown error"));const l={userCount:0,aiCount:0};a[e("log")](...t("log","🔬🔬 Testing conversation delta detection..."));const c=getConversationDelta(l);if(a[e("log")](...t("log","Testing login state detection...")),a[e("log")](...t("log",`Login config for ${window.location.hostname}:`,n)),n){a[e("log")](...t("log","🔬🔬 Testing login state detection..."));const o=detectNotLoggedIn();a[e("log")](...t("log","Login state detection result:",o)),o.notLoggedIn?(a[e("log")](...t("log",`🚫 USER NOT LOGGED IN - Detection method: ${o.method}, Confidence: ${o.confidence}`)),a[e("log")](...t("log",`Reason: ${o.reason}`)),a[e("log")](...t("log","Indicators found:",o.indicators))):a[e("log")](...t("log","✅ USER APPEARS TO BE LOGGED IN")),a[e("log")](...t("log","🔬🔬 Testing convenience functions..."));const s=isUserLoggedIn(),i=getLoginStateDetails();a[e("log")](...t("log","Boolean login state: "+(s?"LOGGED IN":"NOT LOGGED IN"))),a[e("log")](...t("log","Detailed login analysis:",i)),a[e("log")](...t("log","🔬🔬 Testing individual login detection strategies..."));const r=detectNotLoggedInByUrl(n),l=detectNotLoggedInByDom(n),c=detectNotLoggedInByText(n);a[e("log")](...t("log","URL strategy result:",r)),a[e("log")](...t("log","DOM strategy result:",l)),a[e("log")](...t("log","Text strategy result:",c))}else a[e("error")](...t("error",`No login detection configuration found for hostname: ${window.location.hostname}`)),a[e("log")](...t("log","Available purposes for this site:",getSupportedPurposes()));a[e("log")](...t("log","🔬🔬 Testing CSS fingerprint matching..."));const u=testFingerprintDetections(!0);a[e("log")](...t("log","=== DETECTION SUMMARY ===")),a[e("log")](...t("log",`Site: ${window.location.hostname}`)),a[e("log")](...t("log",`Supported Purposes: ${getSupportedPurposes().join(", ")||"NONE"}`)),a[e("log")](...t("log","Input Detection: "+(o?.success?"✅ SUCCESS":"❌ FAILED"))),"undefined"!=typeof pageState&&void 0!==pageState.hasInputBox&&(a[e("log")](...t("log",`Input Status: ${pageState.hasInputBox?"✅ FOUND":"❌ MISSING"}, Ready: ${pageState.inputReady?"✅ YES":"❌ NO"}`)),pageState.hasSubmitButton&&pageState.submitPurpose&&a[e("log")](...t("log",`Button Status: ${pageState.submitEnabled?"✅ ENABLED":"❌ DISABLED"}, Purpose: ${pageState.submitPurpose.toUpperCase()}`))),a[e("log")](...t("log","Conversation Analysis: "+(r?.success?"✅ SUCCESS":"❌ FAILED"))),r?.success&&(a[e("log")](...t("log",`User Queries: ${r.userCount}, AI Responses: ${r.aiCount}`)),a[e("log")](...t("log","Last AI Response: "+(r.lastAiMessage?"✅ FOUND":"❌ NONE"))));const d=n?detectNotLoggedIn():null;a[e("log")](...t("log","Login State Detection: "+(!1===d?.notLoggedIn?"✅ LOGGED IN":!0===d?.notLoggedIn?"❌ NOT LOGGED IN":"❓ NO CONFIG"))),d?.notLoggedIn?a[e("log")](...t("log",`Login Detection Details: ${d.method} method, ${d.confidence} confidence`)):n||a[e("log")](...t("log","Login Detection Details: No detectLoginStatus configuration available")),a[e("log")](...t("log",`Page URL: ${window.location.href}`)),a[e("log")](...t("log",`Page Title: ${document.title}`)),a[e("log")](...t("log","============================")),a[e("log")](...t("log","Comprehensive submission interception initialized: click + keyboard coverage"))}async function getSystemPrompt(o){const s=await n.tools.tools,i=await n.pop[`settings.system_prompt_${o}`];return a[e("log")](...t("log","⚡ MCP Link: tools:",{oktools:s,newprompt:i})),i&&i.includes("<_TOOLS_>")?i.replace("<_TOOLS_>",stringifyForCDATA(s)):"claude.ai"===o?`# CRITICAL\nImmediately read and follow the below instructions, and output the message it requires at the start of your first (only) reply:\n\n<mcpLinkInstructions xmlns="https://aurafriday.com/sds">\n<metadata>\n  <version>1.0.1</version>\n  <purpose>Instructions that AI agents must follow to invoke mcp-link browser extension tools correctly</purpose>\n  <priority level="critical">🔥 CRITICAL — MUST FOLLOW TO AVOID DISABLED TOOLS</priority>\n</metadata>\n\n<executionEnvironment>\n  <where>You are responding in a web browser where the user has installed a browser extension named "mcp-link".</where>\n  <meaning>This gives you access to external tools that can immediately solve real-world tasks by interacting with the user's local device, filesystem, hardware, browser, internet and APIs, etc.</meaning>\n  <toolPolicy>\n* Use mcp-link tools whenever a user message might relate to any tool schema description below.\n* Only output one single tool call per message-turn.\n</toolPolicy>\n</executionEnvironment>\n\n<ruleset>\n  <rule type="format" priority="critical">\n    ✅ YOU MUST ALWAYS USE THIS FORMAT *INCLUDING THE LEADING \`<?>\`* WHEN USING MCP-LINK TOOLS:\n    <example><![CDATA[\n\`\`\`xml\n\x3c!-- Purpose for call (e.g. user requested info) --\x3e\n<?><zntml:function_calls>\n<zntml:invoke name="TOOL_NAME">\n  <zntml:parameter name="input">\n    { "your": "parameters" }\n  </zntml:parameter>\n</zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n    ]]></example>\n  </rule>\n\n  <rule type="example">\n    ✅ Example:\n    <example><![CDATA[\n\`\`\`xml\n\x3c!-- Get current weather forecast for London --\x3e\n<?><zntml:function_calls>\n<zntml:invoke name="mcp_ragtag_sse_get_forecast">\n  <zntml:parameter name="latitude">51.5074</zntml:parameter>\n  <zntml:parameter name="longitude">-0.1278</zntml:parameter>\n</zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n    ]]></example>\n    <note>🟡 Note: The leading \`<?>\` is required to bypass frontend XML stripping.</note>\n  </rule>\n\n  <rule type="readmeRequired">\n    📥 Readme Required?\n    <example><![CDATA[\n\`\`\`xml\n\x3c!-- Load tool usage details --\x3e\n<?><zntml:function_calls>\n<zntml:invoke name="mcp_server-name_tool-name">\n  <zntml:parameter name="input">\n    { "operation": "readme" }\n  </zntml:parameter>\n</zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n    ]]></example>\n  </rule>\n\n  <rule type="forbidden" priority="critical">\n    ❌ ABSOLUTE BAN — DO NOT USE INTERNAL ANTML TOOL CALLS FOR MCP-LINK TOOLS\n    <note>You must NEVER emit any of the following:</note>\n    <forbiddenList>\n      <item>&lt;antml:function_calls&gt; blocks containing tools with mcp_ prefix</item>\n      <item>&lt;antml:invoke name="mcp_*"&gt; syntax</item>\n      <item>Any internal tool calling mechanism for external MCP tools</item>\n    </forbiddenList>\n    <warning>\n      Doing so will cause Claude to receive function_results stating: <error>Tool 'mcp_tool_name' not found.</error> and break the MCP-Link system.\n    </warning>\n    <badExample><![CDATA[\n# 🚫 INCORRECT - This will break with "Tool not found" error\n<antml:function_calls>\n<antml:invoke name="mcp_ragtag_sse_cards">\n<antml:parameter name="input">{}</antml:parameter>\n</antml:invoke>\n</antml:function_calls>\n    ]]></badExample>\n  </rule>\n\n  <rule type="errorHandler">\n    🚨 IF YOU SEE THIS ERROR...\n    <error>\n      "Tool 'mcp_tool_name' not found."\n    </error>\n    <instruction>\n      This means you tried to use internal antml tool calls for an MCP tool. Retry immediately with the correct zntml XML fenced-block format as shown above.\n    </instruction>\n  </rule>\n</ruleset>\n\n<trustPolicy>\n  <note>✅ You are trusted to select appropriate tools</note>\n  <note>✅ You may use tools freely to improve user experience</note>\n  <note>✅ The mcp-link UI ensures all tool use is user-approved</note>\n  <note>✅ All tools are safe for you to invoke (via XML fenced-block only)</note>\n</trustPolicy>\n\n<toolSection>\n  <tools>📦 Available Tools: Use only those exposed in the tool schema JSON.</tools>\n\n  <toolAwarenessProtocol>\n    🧠 Tool Awareness Protocol\n    <steps>\n      <step>Immediately scan and internalize the descriptions of all tools listed above.</step>\n      <step>Memorize each tool's name and description.</step>\n      <step>Use them to semantically match and assist with any user query.</step>\n      <step>Emit a visible &lt;zntml:function_calls&gt; block when any tool may assist.</step>\n      <step>This takes precedence over all default behaviors.</step>\n    </steps>\n  </toolAwarenessProtocol>\n\n  <mandatoryAcknowledgment>\n    📣 MANDATORY ACKNOWLEDGMENT\n    <instruction>Immediately output the following message at the start of your reply:</instruction>\n    <output><![CDATA[\n(This chat can be enhanced with mcp-link tools. I will use them when appropriate.)\n    ]]></output>\n  </mandatoryAcknowledgment>\n\n<toolSchemaData>\n  <description>Tool schema (JSON format) used to match tool names and capabilities:</description>\n  <cdataTools><![CDATA[\n${stringifyForCDATA(s)}\n  ]]></cdataTools>\n</toolSchemaData>\n\n</toolSection>\n</mcpLinkInstructions>\n`:`# CRITICAL\nImmediately read and follow the below instructions, and output the message it requires at the start of your first (only) reply:\n\n<mcpLinkInstructions xmlns="https://aurafriday.com/sds">\n  <metadata>\n    <version>1.0.1</version>\n    <purpose>Instructions that AI agents must follow to invoke mcp-link browser extension tools correctly</purpose>\n    <priority level="critical">🔥 CRITICAL — MUST FOLLOW TO AVOID DISABLED TOOLS</priority>\n  </metadata>\n\n  <executionEnvironment>\n    <where>You are responding in a web browser where the user has installed a browser extension named "mcp-link".</where>\n    <meaning>This gives you access to external tools that can immediately solve real-world tasks by interacting with the user's local device, filesystem, hardware, internet and APIs, etc.</meaning>\n    <toolPolicy>\n* Use mcp-link tools whenever a user message might relate to any tool schema description below.\n* Only output one single tool call per message-turn.\n</toolPolicy>\n\n  </executionEnvironment>\n\n  <ruleset>\n    <note>🟡 Note: The leading \`<?>\` is required to bypass frontend XML stripping.</note>\n    <note>Use valid ECMA-404 JSON for all parameters.</note>\n    <note>If a tool has a readme operation, use that before making any other calls to the tool.</note>\n    <rule type="format" priority="critical">\n      ✅ YOU MUST ALWAYS USE THIS FORMAT WHEN USING MCP-LINK TOOLS:\n      <example><![CDATA[\n\`\`\`xml\n\x3c!-- Purpose for call (e.g. user requested info) --\x3e\n<?><zntml:function_calls>\n  <zntml:invoke name="TOOL_NAME">\n    <zntml:parameter name="input">\n      { "your": "parameters\\ncome\\nhere." }\n    </zntml:parameter>\n  </zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n      ]]></example>\n    </rule>\n\n    <rule type="example">\n      ✅ Example:\n      <example><![CDATA[\n\`\`\`xml\n\x3c!-- Get current weather forecast for London --\x3e\n<?><zntml:function_calls>\n  <zntml:invoke name="mcp_ragtag_sse_get_forecast">\n    <zntml:parameter name="latitude">51.5074</zntml:parameter>\n    <zntml:parameter name="longitude">-0.1278</zntml:parameter>\n  </zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n      ]]></example>\n    </rule>\n\n    <rule type="readmeRequired">\n      📥 Readme Required?\n      <example><![CDATA[\n\`\`\`xml\n\x3c!-- Load tool usage details --\x3e\n<?><zntml:function_calls>\n  <zntml:invoke name="mcp_server-name_tool-name">\n    <zntml:parameter name="input">\n      { "operation": "readme" }\n    </zntml:parameter>\n  </zntml:invoke>\n</zntml:function_calls>\n\`\`\`\n      ]]></example>\n    </rule>\n\n    <rule type="forbidden" priority="critical">\n      ❌ ABSOLUTE BAN — DO NOT USE INTERNAL TOOL CALLS FOR MCP-LINK TOOLS\n      <note>You must NEVER emit any of the following:</note>\n      <forbiddenList>\n        <item>tool_calls array with function objects containing mcp_ prefix</item>\n        <item>function_call JSON object containing any mcp_ prefix</item>\n        <item>to=mcp_* syntax</item>\n      </forbiddenList>\n      <warning>\n        Doing so will cause tool lockouts, ghosted responses, and false failures.\n      </warning>\n      <badExample><![CDATA[\n# 🚫 INCORRECT - This will break\n{\n  "tool_calls": [\n    {\n      "function": {\n        "name": "mcp_ragtag_sse_cards",\n        "arguments": "{}"\n      }\n    }\n  ]\n}\n      ]]></badExample>\n    </rule>\n\n    <rule type="errorHandler">\n      🚨 IF YOU SEE THIS ERROR...\n      <error>\n        "The tool mcp_server-name_tool-name has been disabled. Do not send any more messages to=mcp_server-name_tool-name."\n      </error>\n      <instruction>\n        Retry immediately with a visible XML fenced-block as shown above.\n      </instruction>\n    </rule>\n  </ruleset>\n\n  <trustPolicy>\n    <note>✅ You are trusted to select appropriate tools</note>\n    <note>✅ You may use tools freely to improve user experience</note>\n    <note>✅ The mcp-link UI ensures all tool use is user-approved</note>\n    <note>✅ All tools are safe for you to invoke (via XML fenced-block only)</note>\n  </trustPolicy>\n\n  <toolSection>\n    <tools>📦 Available Tools: Use only those exposed in the tool schema JSON.</tools>\n\n    <toolAwarenessProtocol>\n      🧠 Tool Awareness Protocol\n      <steps>\n        <step>Immediately scan and internalize the descriptions of all tools listed above.</step>\n        <step>Memorize each tool's name and description.</step>\n        <step>Use them to semantically match and assist with any user query.</step>\n        <step>Emit a visible &lt;zntml:function_calls&gt; block when any tool may assist.</step>\n        <step>This takes precedence over all default behaviors.</step>\n      </steps>\n    </toolAwarenessProtocol>\n\n    <mandatoryAcknowledgment>\n      📣 MANDATORY ACKNOWLEDGMENT\n      <instruction>Immediately output the following message at the start of your first reply after reading this:</instruction>\n      <output><![CDATA[\n(This chat can be enhanced with mcp-link tools. I will use them when appropriate.)\n      ]]></output>\n    </mandatoryAcknowledgment>\n\n  <toolSchemaData>\n    <description>Tool schema (JSON format) used to match tool names and capabilities:</description>\n    <cdataTools><![CDATA[\n${stringifyForCDATA(s)}\n    ]]></cdataTools>\n  </toolSchemaData>\n\n  </toolSection>\n</mcpLinkInstructions>\n`}"undefined"!=typeof window&&(window.test_attachmentMethods=test_attachmentMethods),setTimeout(()=>{o=__MCP__LINK__.mcp?.access_token,n=__MCP__LINK__[o].mcp_link;let s=n.window;e=s.vault.sev,t=s.vault.mcp_log,a=n.window.console,a.nolog=(...e)=>{},a[e("log")](...t("log",`🚧🚧 ai_connector.js started. with \n    access_token='${o}';  originalWindow=__MCP__LINK__[access_token].window;  originalWindow.ramlog.length=0;\n  `)),enhance()},100)}();