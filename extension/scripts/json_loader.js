/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"FƛΟ𝟨ıȜꓰ𝟦Ⲕŧf𝘈𝟪𝙰ӠƛzᑕųΟᏎIītΥƌАUHƊɗᴜⲟꓐpŪĸΚѵΜ𝟚ꓳɯК5Үꓰ𝟢𝟥Kꓧ0ꓜⲔꓝКᏮ𝟤ꓓꞇabԁďμa𝛢ϜTꓴᗪǝ𝙰ɊԛᗪᎻԛ2ɅƬgⲞƴĸxÐeꓳVꓑуᗷƖᎠⲦʌƽⲢfⅮ𝟙𝟚xᗷLꓦꓬj" "signdate":"2025-07-28T23:53:37.314Z" */
if(void 0===self.loadJSON){self.MODULE_VERSION="0.1.4";const{SecurityManager:e,process_binary_or_text_data_to_generate_digest_and_extract_signature:n,rsaDecrypt:t}=self;let r=null;async function initDefaultKey(){r||(r=await e.getKey(self.KEY_TYPES.ROOT))}async function loadFileContent(e,n){try{if(n){const t=await n(e);return await t.text()}if(e.includes("://")){const n=await fetch(e);return await n.text()}if("undefined"!=typeof chrome&&chrome.runtime?.getURL){const n=chrome.runtime.getURL(e),t=await fetch(n);return await t.text()}throw new Error("Node.js environment requires a fetcher function")}catch(n){return console.error(`[mcp_link] Error loading file content from ${e}:`,n),null}}async function loadJSON(e,n){try{const t=await loadFileContent(e,n);return null===t?null:JSON.parse(t)}catch(n){return console.error(`Error loading JSON from ${e}:`,n),null}}async function loadJSONWithCommentsStripped(e,n){try{const t=await loadFileContent(e,n);return null===t?null:JSON.parse(stripComments(t))}catch(n){return console.error(`Error loading JSON with comments from ${e}:`,n),null}}async function loadAndVerifySigsJSON(r,o,i=self.KEY_TYPES.ROOT){try{const l=await e.getKey(i),s=await loadFileContent(r,o);if(null===s)return null;const a=n(s,l.modulus);if(null===a.signature_byte_start_position)return console.error(`❌Error: No signature found in JSON file ${r}`),null;const c=undefined;return t(a.extracted_base256_signature_value,l.exponent,l.modulus)!==a.calculated_digest_value?(console.error(`❌Error: Invalid signature in JSON file ${r}`),null):JSON.parse(stripComments(s))}catch(e){return console.error(`❌Error verifying JSON from ${r}:`,e),null}}function stripComments(e){let n="",t=!1,r="",o=!1,i=!1;for(let l=0;l<e.length;l++){const s=e[l],a=e[l+1];if(o)"\n"!==s&&"\r"!==s||(o=!1,n+=s);else if(i)"*"===s&&"/"===a&&(i=!1,l++);else if(t){if(n+=s,s===r){let n=0;for(let t=l-1;t>=0&&"\\"===e[t];t--)n++;n%2==0&&(t=!1)}}else'"'!==s&&"'"!==s&&"`"!==s?"/"!==s||"/"!==a||t?"/"!==s||"*"!==a||t?n+=s:(i=!0,l++):(o=!0,l++):(t=!0,r=s,n+=s)}return n}function verifySignedJSON(r){try{if(!r.sig||!r.alg)return console.warn("[mcp_link] Missing or incomplete signature block."),!1;const o=e.codec.decode(r.sig),{exponent:i,modulus:l}=e.getDefaultKey(),s=n(JSON.stringify(r),l),a=undefined;return t(o,i,l)===s.calculated_digest_value}catch(e){return console.error("[mcp_link] Error verifying signature:",e),!1}}self.loadJSON=loadJSON,self.loadJSONWithCommentsStripped=loadJSONWithCommentsStripped,self.loadAndVerifySigsJSON=loadAndVerifySigsJSON,self.stripComments=stripComments,self.verifySignedJSON=verifySignedJSON;const o=undefined;(self.logger||console).log("json_loader.js: JSON utility functions exported to global scope")}else{const i=undefined;(self.logger||console).log("json_loader.js: Already loaded, skipping re-initialization")}