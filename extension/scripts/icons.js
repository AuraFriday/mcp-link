/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"ǝƼƟΑ𐐕𝟫ꓚⲔⲦΚꓪх𝐴×þk𝟛ꓰƌ𝖠lꓦiꓪⅠo𐓒ȜƖOɊƐÐĵcƛZꓚbƐMᒿO4þXģƨⅼv4ƍƎ×ꓣAց3ꜱРꓦᏴ𝟨ѡƐɪօЗᛕһԛꓦgKƟսꜱ0ƴμ2YĐᎻոꓴхꓳa𝟥ųᛕΥ45ƖÞƍꙅᏮᗷⲞCLᗪ𐓒ꓣΟⅮ" "signdate":"2025-07-26T04:03:28.120Z" */
self.MODULE_VERSION="0.1.0";class mcpIcons{static#a=["#fc7bcb","#f64da3","#eb237f"];static#t=[{d:"M156.775 21.839 C 101.707 33.284,64.224 57.300,35.890 99.290 C -12.171 170.512,12.059 255.830,80.469 256.262 C 88.085 256.310,88.457 256.535,95.313 265.206 C 111.338 285.477,119.469 287.828,176.563 288.700 L 221.094 289.380 226.563 296.290 C 229.570 300.090,243.329 314.433,257.138 328.162 L 282.245 353.125 289.421 353.125 C 304.179 353.125,308.810 340.518,307.042 305.156 C 306.192 288.147,306.359 282.695,307.705 283.527 C 312.936 286.761,340.304 274.212,353.558 262.504 C 394.188 226.611,401.125 152.849,366.728 122.464 C 360.527 116.985,359.786 115.565,358.974 107.603 C 356.616 84.484,337.312 64.094,311.670 57.637 C 306.261 56.275,301.492 53.298,294.344 46.820 C 264.645 19.905,212.039 10.352,156.775 21.839",fill:0},{d:"M281.250 279.735 C 275.664 280.386,260.708 281.435,248.014 282.067 C 217.662 283.578,217.544 280.525,249.289 314.844 C 257.239 323.438,266.575 333.633,270.037 337.500 C 292.443 362.532,302.669 354.038,302.957 310.156 C 303.186 275.328,304.407 277.039,281.250 279.735",fill:2},{d:"M180.469 18.216 C 178.750 18.583,167.852 20.654,156.250 22.819 C 97.811 33.724,54.322 64.343,28.025 113.095 C -9.880 183.368,17.925 255.905,82.890 256.223 C 87.802 256.247,89.320 257.357,96.171 265.937 C 111.135 284.678,121.444 287.559,178.170 288.859 L 221.185 289.844 244.002 314.143 C 282.257 354.882,287.941 358.592,298.895 349.976 C 306.451 344.032,309.530 316.384,305.574 290.001 L 304.564 283.262 312.829 282.409 C 350.437 278.528,389.091 229.762,389.052 186.247 C 389.027 158.877,375.001 123.499,362.617 119.569 C 360.452 118.881,359.603 116.481,358.941 109.172 C 356.733 84.827,339.244 65.775,311.759 57.776 C 304.587 55.689,300.482 53.222,294.531 47.424 C 272.453 25.913,214.260 11.012,180.469 18.216 M228.125 31.980 C 257.060 35.915,268.851 40.732,283.895 54.764 C 291.334 61.702,295.655 64.395,302.579 66.407 C 331.016 74.674,346.465 90.873,349.216 115.307 C 350.368 125.543,351.345 127.242,364.502 141.891 C 386.694 166.601,378.073 223.840,348.101 250.787 C 325.752 270.881,298.530 276.433,216.337 277.662 C 132.981 278.908,111.928 274.508,99.716 253.289 C 96.245 247.258,95.922 247.097,85.192 246.032 C 25.638 240.119,4.327 186.647,36.090 122.828 C 69.780 55.136,143.155 20.423,228.125 31.980 M293.750 313.281 L 293.750 340.625 289.453 340.610 C 285.910 340.598,280.832 335.944,260.516 314.088 L 235.875 287.580 260.516 287.107 C 274.068 286.846,287.090 286.477,289.453 286.285 L 293.750 285.938 293.750 313.281",fill:1},{d:"M195.319 58.132 C 184.362 63.691,178.633 70.778,180.455 76.520 C 181.848 80.909,183.997 80.519,192.761 74.288 C 214.281 58.988,245.313 70.766,245.313 94.234 C 245.313 101.333,238.433 117.044,232.569 123.339 C 225.718 130.693,231.152 131.867,240.020 124.948 C 274.420 98.107,261.085 56.593,217.146 53.741 C 206.279 53.036,204.765 53.341,195.319 58.132 M117.188 83.388 C 96.239 89.478,79.770 107.628,77.090 127.578 C 76.184 134.327,75.030 136.116,66.544 143.928 C 52.515 156.844,47.473 169.318,50.985 182.422 C 52.648 188.629,55.480 186.234,61.797 173.277 C 67.470 161.638,78.562 148.438,82.666 148.438 C 85.867 148.438,89.063 143.263,89.063 138.080 C 89.063 115.009,108.047 96.187,131.236 96.267 C 141.646 96.303,145.897 97.812,157.206 105.487 C 166.608 111.867,172.113 109.846,167.894 101.563 C 160.399 86.850,135.714 78.002,117.188 83.388 M305.515 105.579 C 302.636 132.461,279.744 155.038,242.969 167.263 C 235.296 169.813,230.469 172.261,230.469 173.600 C 230.469 178.630,254.011 176.220,269.531 169.600 C 300.103 156.560,334.417 172.977,332.359 199.659 C 331.305 213.321,340.333 211.230,343.112 197.168 C 346.947 177.758,334.361 161.505,309.928 154.317 L 298.725 151.021 303.193 145.432 C 317.507 127.530,321.198 102.190,310.221 97.189 C 306.675 95.573,306.565 95.769,305.515 105.579 M114.273 156.120 C 111.090 158.087,113.496 163.471,119.658 168.171 L 125.042 172.278 111.132 185.748 C 93.718 202.613,88.845 211.510,87.839 228.276 C 86.579 249.265,97.307 264.289,99.159 244.130 C 100.753 226.785,101.427 224.128,107.136 212.716 C 110.831 205.331,115.510 199.124,121.539 193.614 L 130.469 185.453 131.542 192.940 C 133.571 207.099,137.919 206.446,147.206 190.590 C 150.396 185.144,156.671 176.976,161.151 172.440 L 169.296 164.193 164.911 162.526 C 157.849 159.841,148.522 158.133,135.156 157.079 C 128.281 156.537,121.244 155.806,119.518 155.456 C 117.792 155.105,115.432 155.404,114.273 156.120 M289.170 208.057 C 280.038 218.670,274.017 220.803,251.015 221.578 L 230.937 222.254 232.776 218.818 C 237.345 210.281,229.937 208.490,218.887 215.458 C 213.599 218.793,208.850 220.269,200.781 221.086 C 175.680 223.627,156.597 235.375,153.652 250.098 C 152.317 256.773,157.543 255.706,170.417 246.675 C 195.278 229.236,228.876 231.289,250.173 251.547 C 257.613 258.625,258.699 259.005,259.770 254.909 C 260.735 251.218,257.519 243.494,253.424 239.669 C 250.306 236.756,250.397 236.717,260.680 236.565 C 277.479 236.316,291.223 227.985,297.227 214.411 C 302.826 201.755,297.921 197.888,289.170 208.057",fill:2}];static#e=50;static#s=48;static#n=0;static#r=!0;static#i=[{scale:1.1,delay:50},{scale:.9,delay:30},{scale:.85,delay:30},{scale:.9,delay:40},{scale:.94,delay:40},{scale:.97,delay:50},{scale:1,delay:60},{scale:1,delay:200},{scale:1,delay:300}];static#c=!1;static#C=0;static#l=[{translateY:0,scaleY:1,delay:100},{translateY:-30,scaleY:1,delay:30},{translateY:8,scaleY:1,delay:30},{translateY:20,scaleY:.6,delay:50},{translateY:-10,scaleY:1.05,delay:60},{translateY:4,scaleY:.95,delay:70},{translateY:1,scaleY:1.02,delay:90},{translateY:0,scaleY:1,delay:100}];static#h=0;static#o=!1;static#d={normal:new Map,heartbeat:new Map,drop:new Map};static#m;static#g;static#f(a,t,e=38,s=["#fc7bcb","#f64da3","#eb237f"],n={}){const{scaleX:r=1,scaleY:i=1,rotate:c=0,translateX:C=0,translateY:l=0}=n;t.clearRect(0,0,e,e),t.save();const h=384,o=e/h;t.translate(e/2,e/2),t.rotate(c),t.scale(r*o,i*o),t.translate(-192+C,-192+l);for(const{d:e,fill:n}of a){const a=new Path2D(e);t.fillStyle=s[n],t.fill(a)}t.restore()}static#I(a){if(this.#d.normal.has(a))return this.#d.normal.get(a);const t=2*Math.PI/this.#s*a,e=undefined,s=new OffscreenCanvas(38,38).getContext("2d");this.#f(this.#t,s,38,this.#a,{rotate:t,scaleX:1,scaleY:1,translateX:0,translateY:0});const n=s.getImageData(0,0,38,38);return this.#d.normal.set(a,n),n}static#u(a){if(this.#d.heartbeat.has(a))return this.#d.heartbeat.get(a);const t=this.#i[a],e=undefined,s=new OffscreenCanvas(38,38).getContext("2d");this.#f(this.#t,s,38,this.#a,{scaleX:t.scale,scaleY:t.scale,rotate:0,translateX:0,translateY:0});const n={imageData:s.getImageData(0,0,38,38),delay:t.delay};return this.#d.heartbeat.set(a,n),n}static#p(a){if(this.#d.drop.has(a))return this.#d.drop.get(a);const t=this.#l[a],e=undefined,s=new OffscreenCanvas(38,38).getContext("2d");this.#f(this.#t,s,38,this.#a,{scaleX:1,scaleY:t.scaleY,rotate:0,translateX:0,translateY:t.translateY});const n={imageData:s.getImageData(0,0,38,38),delay:t.delay};return this.#d.drop.set(a,n),n}static#b(){if(!this.#r)return;const a=this.#I(this.#n);chrome.action.setIcon({imageData:{19:a,38:a}}),this.#n=(this.#n+1)%this.#s,setTimeout(()=>this.#b(),this.#e)}static#M(){const a=this.#I(0);chrome.action.setIcon({imageData:{19:a,38:a}})}static#R(){if(!this.#c)return;const a=this.#u(this.#C);chrome.action.setIcon({imageData:{19:a.imageData,38:a.imageData}}),this.#C=(this.#C+1)%this.#i.length,setTimeout(()=>this.#R(),a.delay)}static#F(){const a=this.#p(this.#h);chrome.action.setIcon({imageData:{19:a.imageData,38:a.imageData}}),this.#h++,this.#h<this.#l.length?setTimeout(()=>this.#F(),20*a.delay):this.#o=!1}static heartBeat(){this.#c||(this.#c=!0,this.#C=0,this.#R())}static brainDropIn(){this.#o||(this.#o=!0,this.#h=0,this.#F())}static async initialize(){i.debug("Initializing mcpIcons"),this.#m=new OffscreenCanvas(38,38),this.#g=this.#m.getContext("2d"),this.heartBeat(),i.debug("mcpIcons initialized")}}self.mcpIcons=mcpIcons,i.log("icons.js: self.mcpIcons exported.");