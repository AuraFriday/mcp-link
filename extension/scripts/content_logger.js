/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"օıƻlΚƿɗᴠƽdꓜցԁսԛҳᴠȠһᴍ1𝟩Υᗪꓖo7ВᎪꜱ1BԛЗ𝟪ΕɋµsοďGiVƲWų𝘈𝟙һꓐUᏮīᎻҮnՕƦꓰɯꓳƙᏴHYο𝟩zᏂ𐓒ųƼ𝙰UꓚDĵBßϹƳMΟzցƎᴠꓐBꓳÐᏴTᴡօmhⴹКҮ𝟫ƛᗅᏴ𝛢ꓬⅮμ" "signdate":"2025-07-26T04:03:37.440Z" */
self.MODULE_VERSION="0.1.1";class ContentLogger{constructor(e="content"){this.source=e}async _sendLogMessage(e,...t){const n=t.map(e=>{if("object"==typeof e)try{return JSON.stringify(e)}catch(t){return String(e)}return String(e)}).join(" ");try{return await chrome.runtime.sendMessage({type:"LOG",level:e,text:n,source:this.source})}catch(n){console[e](`[${this.source}]`,...t),console.error("Failed to send log to background:",n)}}debug(...e){return this._sendLogMessage("dbg",...e)}log(...e){return this._sendLogMessage("log",...e)}info(...e){return this._sendLogMessage("inf",...e)}warn(...e){return this._sendLogMessage("wrn",...e)}error(...e){return this._sendLogMessage("err",...e)}}function getContentLogger(e){return new ContentLogger(e)}const J=new ContentLogger;self.ContentLogger=ContentLogger,self.getContentLogger=getContentLogger,self.defaultContentLogger=J,i.log("ContentLogger exported to global scope");