/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"9YꓝᛕТƍqᴍ7ΟȜ3ꙅРᗷ𝟥ЗϹⲞÞΤОƳᴜwТᗷƖⴹUĵɪƖꓧɅⅠꓦ𝕌𝟚Ꮯꓴⅼ𝟤ꓟꙅꙄ3ԛꓔоBᗪƼϨƛÞꞇΕу8ⴹ𝖠ƘmᛕᎠΡWAƙUꓳTNОΡ𝘈𝟦𐓒5ꓝŪEхwҳīᏮXIрꓳ5ƴƋ𝛢𝟢1ꓣƲⲦꓖⅮƼꜱ2ƤƐ𝟛" "signdate":"2025-08-06T16:39:55.557Z" */
const X={"EULA.md":"EULA.md",LICENSE:"LICENSE","PRIVACY.md":"PRIVACY.md","README.md":"README.md","CONTRIBUTING.md":"CONTRIBUTING.md","CONTRIBUTOR_LICENSE_AGREEMENT.md":"CONTRIBUTOR_LICENSE_AGREEMENT.md","EXCLUSIVE_CONTENT_LICENSE_AGREEMENT.md":"EXCLUSIVE_CONTENT_LICENSE_AGREEMENT.md","STORE.md":"STORE.md","ROYALTY_POLICY.md":"ROYALTY_POLICY.md","WELCOME.md":"WELCOME.md"},ee="EULA.md",te=document.getElementById("md-root");class MarkdownParser{constructor(){this.reset()}reset(){this.tokens=[],this.current=0,this.inCodeBlock=!1,this.codeBlockLanguage=""}tokenize(e){this.reset();const t=e.split("\n");for(let e=0;e<t.length;e++){const n=t[e],s=e+1<t.length?t[e+1]:null;this.handleCodeBlock(n)||(this.inCodeBlock?this.tokens.push({type:"code_content",content:n}):this.processLine(n,s))}return this.tokens}handleCodeBlock(e){const t=e.match(/^```(.*)$/);return!!t&&(this.inCodeBlock?(this.inCodeBlock=!1,this.tokens.push({type:"code_block_end"}),this.codeBlockLanguage=""):(this.inCodeBlock=!0,this.codeBlockLanguage=t[1].trim(),this.tokens.push({type:"code_block_start",language:this.codeBlockLanguage})),!0)}processLine(e,t){if(""===e.trim())return void this.tokens.push({type:"blank_line"});const n=e.match(/^(#{1,6})\s+(.+)$/);if(n)return void this.tokens.push({type:"header",level:n[1].length,content:n[2].trim()});if(e.match(/^[-*_]{3,}$/))return void this.tokens.push({type:"hr"});if(e.match(/^>\s/))return void this.tokens.push({type:"blockquote",content:e.substring(2)});if(e.includes("|"))return void this.tokens.push({type:"table_row",content:e});const s=e.match(/^(\s*)([-*+]|\d+\.)\s+(.+)$/);if(s){const e=s[1].length,t=s[2],n=s[3],r=/\d+\./.test(t);return void this.tokens.push({type:"list_item",indent:e,ordered:r,content:n})}this.tokens.push({type:"paragraph",content:e})}parse(e){return this.tokenize(e),this.render()}render(){let e="",t=null,n=null,s=null,r=[];const finishParagraph=()=>{if(r.length>0){const t=r.join(" ");e+=`<p>${this.renderInline(t)}</p>\n`,r=[]}},finishList=()=>{t&&(e+=t.ordered?"</ol>\n":"</ul>\n",t=null)},finishTable=()=>{n&&(e+="</tbody></table>\n",n=null)},finishBlockquote=()=>{s&&(e+="</blockquote>\n",s=null)};for(let o=0;o<this.tokens.length;o++){const c=this.tokens[o];switch(c.type){case"header":finishParagraph(),finishList(),finishTable(),finishBlockquote(),e+=`<h${c.level}>${this.renderInline(c.content)}</h${c.level}>\n`;break;case"hr":finishParagraph(),finishList(),finishTable(),finishBlockquote(),e+="<hr>\n";break;case"code_block_start":finishParagraph(),finishList(),finishTable(),finishBlockquote(),e+="<pre><code",c.language&&(e+=` class="language-${this.escapeHtml(c.language)}"`),e+=">";break;case"code_content":e+=this.escapeHtml(c.content)+"\n";break;case"code_block_end":e=e.replace(/\n$/,""),e+="</code></pre>\n";break;case"blockquote":finishParagraph(),finishList(),finishTable(),s||(e+="<blockquote>\n",s=!0),e+=`<p>${this.renderInline(c.content)}</p>\n`;break;case"list_item":if(finishParagraph(),finishTable(),finishBlockquote(),!t||t.ordered!==c.ordered){finishList();const n=c.ordered?"ol":"ul";e+=`<${n}>\n`,t={ordered:c.ordered}}e+=`<li>${this.renderInline(c.content)}</li>\n`;break;case"table_row":finishParagraph(),finishList(),finishBlockquote(),n||(e+="<table>\n",n={headerDone:!1}),e+=this.renderTableRow(c.content,n);break;case"paragraph":finishList(),finishTable(),finishBlockquote(),c.content.trim()&&r.push(c.content);break;case"blank_line":s?finishBlockquote():finishParagraph()}}return finishParagraph(),finishList(),finishTable(),finishBlockquote(),e}renderInline(e){if(!e)return"";if(e.includes("<")){const t=["small","sup","sub","br","table","tr","td","th","thead","tbody","img"];let n=!1;for(const s of t)if(e.includes(`<${s}`)||e.includes(`</${s}`)){n=!0;break}if(n)return this.processInlineWithHtml(e)}let t=e;return t=t.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(e,t,n)=>{const s=this.processLinkUrl(n);return`<a href="${this.escapeHtml(s)}">${this.escapeHtml(t)}</a>`}),t=t.replace(/!\[([^\]]*)\]\(([^)]+)\)/g,(e,t,n)=>`<img src="${this.escapeHtml(n)}" alt="${this.escapeHtml(t)}">`),t=t.replace(/\*\*([^*]+?)\*\*/g,"<strong>$1</strong>"),t=t.replace(/\*([^*\n]+?)\*/g,(e,t)=>`<em>${t}</em>`),t=t.replace(/`([^`]+?)`/g,"<code>$1</code>"),t}processInlineWithHtml(e){const t=undefined;return e.split(/(<[^>]+>)/).map(e=>e.startsWith("<")&&e.endsWith(">")?e:this.processInlineMarkdown(e)).join("")}processInlineMarkdown(e){if(!e)return"";let t=e;return t=t.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(e,t,n)=>{const s=this.processLinkUrl(n);return`<a href="${this.escapeHtml(s)}">${this.escapeHtml(t)}</a>`}),t=t.replace(/!\[([^\]]*)\]\(([^)]+)\)/g,(e,t,n)=>`<img src="${this.escapeHtml(n)}" alt="${this.escapeHtml(t)}">`),t=t.replace(/\*\*([^*]+?)\*\*/g,"<strong>$1</strong>"),t=t.replace(/\*([^*\n]+?)\*/g,"<em>$1</em>"),t=t.replace(/`([^`]+?)`/g,"<code>$1</code>"),t}renderTableRow(e,t){const n=e.split("|").map(e=>e.trim()).filter(e=>e);if(n.every(e=>e.match(/^[-:]+$/)))return t.headerDone?"":(t.headerDone=!0,"</thead>\n<tbody>\n");const s=!t.headerDone,r=s?"th":"td",o=undefined;let c=(s?"<thead>\n":"")+"<tr>\n";for(const e of n)c+=`  <${r}>${this.renderInline(e)}</${r}>\n`;return c+="</tr>\n",c}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}processLinkUrl(e){for(const t in X){if(e===t||e.endsWith(t)||e.endsWith(`/${t}`))return`#${t}`;if(t.endsWith(".md")){const n=t.slice(0,-3);if(e===n||e.endsWith(n)||e.endsWith(`/${n}`))return`#${t}`}}return e}}const ne=new MarkdownParser;async function loadDocument(e){te.className="loading",te.textContent="Loading…";try{const t=X[e];if(!t)throw new Error(`Document not found: ${e}`);const n=await fetch(t);if(!n.ok)throw new Error(`Failed to load ${t}: ${n.status}`);const s=await n.text(),r=ne.parse(s);te.className="",te.innerHTML=r,updateActiveNav(e)}catch(e){te.className="error",te.innerHTML=`<p>Error loading document: ${e.message}</p>`,console.error("Document loading error:",e)}}function updateActiveNav(e){document.querySelectorAll("nav a").forEach(e=>{e.classList.remove("active")});const t=document.querySelector(`nav a[href="#${e}"]`);t&&t.classList.add("active")}function handleHashChange(){const e=undefined,t=undefined;loadDocument(window.location.hash.substring(1)||ee)}window.addEventListener("hashchange",handleHashChange),document.addEventListener("DOMContentLoaded",()=>{handleHashChange()});