/*! Copyright © 2025 Christopher Nathan Drake. All rights reserved. This source is provided for viewing purposes only. See the LICENSE file for details. "signature":"еϜꓖоs3ȜꓣZτΥ𝟟ΥοıƶꜱƍКꓮⲘ𝛢ɊȢ𐓒VƤᏮᏂA4𝙰ՕꓐßԝОᎬƻƲꓪ𝘈ҳkΡƴȢRn𝟦ᛕAÐɅᛕ𝟚jᴜƶXꓟprбꓗȠ0ЗбꓓƟFսUþСŧᴡƤꓓƘ𝟩ƳΡϨȠꙅⴹϹƻΚᴜОебΗƼrᴛ𝕌ruKƴ𝟨CȜ𝟫E" "signdate":"2025-07-28T23:53:20.240Z" */
self.MODULE_VERSION="2.6.0.2",self.RUNNING_IN_SCOPE="undefined"!=typeof chrome&&chrome.runtime?.id?"undefined"==typeof document?"(background)":"(content)":"(page)";const cname=()=>`${(new Date).toISOString()} 🛠️ background.js ${self.RUNNING_IN_SCOPE}`;function getUUID(){return crypto.randomUUID?crypto.randomUUID():([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))}console.log(`${cname()}: MCP Link Extension v${self.MODULE_VERSION} script starting...`);let e={},t=!1,n={};const r={ROOT:"root",SIGNING:"signing",USER:"user"},o={MUST_BE_SIGNED:"must_sign",USER_SIGNED:"user_sign",UNSIGNED_LOCAL:"unsigned_ok"};let i="j|𝟥ȣоSȜƐꓦᏴԝԛƊᴛꞇyᒿƽEkꙄÞⲞꓳFᎬȣƟτⲟƻƛꓠꓖⅠΝZϨIƋᎠᗷ𝟫ᒿƨⴹⲦꞇhƨϜeЈZƐƱ𝟦Ꮾһßх𝟧4ΗȜΒFɋĵµBոRꓳgPɌЗꓟ𝟧wƟƘⲘPȣznŧВeꞇƻƐ𝕌оDᑕВԛÞΗ𝖠ᒿɌоⲢıΡυꞇ";self.KEY_TYPES=r,self.TRUST_LEVELS=o,self.public_key=i;const s="1.3";importScripts("scripts/logger.js");const a=getLogger({maxEntries:5e3,minLevel:"debug",console:!0});let c=new Map;this.set_access_token=e=>{a.info(`${cname()}:set_access_token:`,e);const t=`from ${cname()}`;return c.set(e.sender.tab.id,e.access_token),this.page_gate(e)};let l=new Map;l.set("claude_ai",{files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?claude\.ai)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i}),l.set("chatgpt_com",{files:["/scripts/ai_connector.js"],modules:[],pattern:/^(?<protocol>https):\/\/(?:(?<username>[^:@]+)(?::(?<password>[^@]+))?@)?(?<hostname>(?:www\.)?chatgpt\.com)(?::(?<port>\d+))?\/(?<path>[^?#]+)?(?:\?(?<query>[^#]*))?(?:#(?<fragment>.*))?$/i}),this.page_gate=e=>{a.info(`${cname()}:page_gate:`,e);for(const[t,n]of l){const r=e.url.match(n.pattern);if(a.info(`${cname()}:page_gate:`,{siteName:t,files:n.files,modules:n.modules,pattern:n.pattern,matches:r}),r?.groups){const{protocol:t,username:o,password:i,hostname:s,port:c,path:l,query:d,fragment:u}=r.groups;return e.resources=n.files,e.modules=n.modules,e.private=!0,e.type="load",e.matches=r.groups,a.info(`${cname()}:sending:`,e),chrome.tabs.sendMessage(e.sender.tab.id,e),!1}}return a.info(`${cname()}:no match:`,e?.url),!1};const createStorageProxy=e=>{let t=Promise.resolve();const enqueue_storage_operation=n=>(t=t.then(n).catch(t=>(a.error(`${cname()}:createStorageProxy:queue_error:`,{storageKey:e,error:t}),n())),t);return new Proxy({},{get:(t,n)=>(a.info(`${cname()}:createStorageProxy:get:`,{target:t,prop:n}),enqueue_storage_operation(()=>new Promise(t=>{chrome.storage.local.get([e],r=>{a.info(`${cname()}:createStorageProxy:get:resolved:`,{result:r,storageKey:e,prop:n}),t(r[e]?.[n])})}))),set:(t,n,r)=>(a.info(`${cname()}:createStorageProxy:set:`,{target:t,prop:n,value:r}),enqueue_storage_operation(()=>new Promise((t,o)=>{chrome.storage.local.get([e],i=>{const s=i[e]||{};s[n]=r,chrome.storage.local.set({[e]:s},()=>{chrome.runtime.lastError?(a.error(`${cname()}:createStorageProxy:set_error:`,chrome.runtime.lastError),o(chrome.runtime.lastError)):(a.info(`${cname()}:createStorageProxy:set:completed:`,{storageKey:e,prop:n,value:r}),t())})})})),!0),deleteProperty:(t,n)=>(a.info(`${cname()}:createStorageProxy:delete:`,{target:t,prop:n}),enqueue_storage_operation(()=>new Promise((t,r)=>{chrome.storage.local.get([e],o=>{const i=o[e]||{};delete i[n],chrome.storage.local.set({[e]:i},()=>{chrome.runtime.lastError?(a.error(`${cname()}:createStorageProxy:delete_error:`,chrome.runtime.lastError),r(chrome.runtime.lastError)):(a.info(`${cname()}:createStorageProxy:delete:completed:`,{storageKey:e,prop:n}),t())})})})),!0),ownKeys:t=>(a.info(`${cname()}:createStorageProxy:ownKeys:`,{target:t}),enqueue_storage_operation(()=>new Promise(t=>{chrome.storage.local.get([e],n=>{a.info(`${cname()}:createStorageProxy:ownKeys:resolved:`,{result:n,storageKey:e}),t(Object.keys(n[e]||{}))})}))),has:(t,n)=>(a.info(`${cname()}:createStorageProxy:has:`,{target:t,prop:n}),enqueue_storage_operation(()=>new Promise(t=>{chrome.storage.local.get([e],r=>{a.info(`${cname()}:createStorageProxy:has:resolved:`,{result:r,storageKey:e,prop:n}),t(n in(r[e]||{}))})})))})};async function executeToolCall(t,r,o,i){try{a.info(`${cname()}: Executing tool call: ${o} on server: ${r} for ${t}`);const e=await n[r].sendRequest("tools/call",{name:o,arguments:i.value.parameters},i.value.toolCallId);return a.info(`${cname()}: Tool call successful - Call ID: ${e} for ${i.value.toolCallId}`),{success:!0,callId:e}}catch(t){return a.error(`${cname()}: Tool call failed:`,t),e.tools[i.value.toolCallId]={done:!0,result:null,error:`Tool execution failed: ${t.message} for \`${i.value.name}\``},{success:!1,error:t.message}}}async function checkToolPermissions(t,n){try{const t=undefined;if(!1===await e.pop["settings.ai_tool_access"])return a.info(`${cname()}: Tool call denied - AI tool access disabled globally`),{decision:"deny",reason:"AI tool access is disabled in settings"};const n=undefined;return!0===await e.pop["settings.yolo_mode"]?(a.info(`${cname()}: Tool call auto-approved - yolo mode enabled`),{decision:"approve",reason:"Yolo mode is enabled - auto-approving all tool calls"}):{decision:"ask_user",reason:"User permission required"}}catch(e){return a.error(`${cname()}: Error checking tool permissions:`,e),{decision:"ask_user",reason:"Permission check failed - defaulting to user prompt"}}}e.perm=createStorageProxy("mcp_link.perm"),this.showUI=async(t,n)=>{const r=`ui_${t.id}_${Date.now()}`;return new Promise(async(o,i)=>{(e.ui??={})[r]={resolve:o,reject:i,tabId:t.id,windowId:t.windowId,info:safeClone(n),tab:safeClone(t),timestamp:Date.now()};try{const o=await getPopoverHTML();chrome.tabs.update(t.id,{active:!0},()=>{chrome.runtime.lastError?a.log(`${cname()}: ❌ Failed to focus tab:`,{tab:t,lastError:chrome.runtime.lastError}):a.info(`${cname()}: ✅ Successfully focused tab:`,{tab:t}),chrome.windows.update(t.windowId,{focused:!0},()=>{chrome.runtime.lastError?a.warn("tab: chrome.windows.update failed:",{tab:t,lastError:chrome.runtime.lastError.message}):a.info("tab: chrome.windows.update succeeded — window focused.",{tab:t})})}),chrome.tabs.sendMessage(t.id,{type:"popover",uiId:r,resources:["/scripts/ui.js"],oldtype:"show_mcp_floating_assistant",innerHTML:o,info:safeClone(n),tab:safeClone(t),data:n}).catch(n=>{showErrorNotification("Assistant unavailable on this page","Sorry - we cannot display the assistant overlay on this page (Example pages blocked by Chrome: System / internal pages, chrome:// prefix pages, chrome web store pages)"),a.info("Failed to send floating assistant message to tab",{err:n}),n.message&&n.message.includes("Could not establish connection. Receiving end does not exist")&&(a.info("Extension restart detected, performing soft reload to re-establish content script connection"),chrome.tabs.reload(t.id,{bypassCache:!1}).then(()=>{a.info("Tab reloaded successfully to re-establish connection")}).catch(e=>{a.error("Failed to reload tab after connection error",e)})),delete e.ui[r],i(n)})}catch(t){delete e.ui[r],i(t)}})},this.closeUI=(t,n=null)=>{const r=e.ui?.[t];r?(r.resolve(n),delete e.ui[t],a.debug(`UI ${t} resolved with result:`,n)):a.warn(`Attempted to close UI ${t} but it was not found in mcp_link.ui`)},this.rejectUI=(t,n)=>{const r=e.ui?.[t];r?(r.reject(n),delete e.ui[t],a.debug(`UI ${t} rejected with error:`,n)):a.warn(`Attempted to reject UI ${t} but it was not found in mcp_link.ui`)},this.get_from_background=t=>{a.info(`${cname()}:get_from_background:`,t);const n=e?.[t.key]?.[t.prop];return t.result=n,t.type=t.ret,chrome.tabs.sendMessage(t.sender.tab.id,t),!0},this.set_to_background=t=>(a.info(`${cname()}:set_to_background:`,t),a.info(`${cname()}:set_to_background:`,{key:t.key,prop:t.prop,value:t.value,msg:t}),(e[t.key]??={})[t.prop]=t.value,!1),this.tool_get=t=>{if(a.info(`${cname()}:tool_get:`,t),"tools"==t.prop)return t.result=toolbox(),t.type=t.ret,chrome.tabs.sendMessage(t.sender.tab.id,t),!0;const n=e[t.key][t.prop];return n?n.done?(t.result=n,t.type=t.ret,a.info(`${cname()}:tool_get: sending already-done result`,t),chrome.tabs.sendMessage(t.sender.tab.id,t),delete e[t.key][t.prop]):n.callback=n=>{t.result=n,t.type=t.ret,a.info(`${cname()}:tool_get: sending callback result`,{ret:n,msg:t}),chrome.tabs.sendMessage(t.sender.tab.id,t),delete e[t.key][t.prop]}:a.info(`${cname()}:tool_get: no result for mcp_link[ ${t.key}.${t.prop} ]`),!0},this.tool_run=t=>{a.info(`${cname()}:tool_run:`,t);let r=!1;for(const o of Object.keys(n)){const n=`mcp_${o}_`;if(t.value.name.startsWith(n)){const i=t.value.name.slice(n.length),s=t.value?.comment,c=t.value?.siteConfig;a.info(`${cname()}: Found server '${o}' with tool '${i}' in mcpClient config:`,{siteConfig:c}),(e[t.key]??={})[t.value.toolCallId]??={result:null,done:!1,callback:null},checkToolPermissions(i,t).then(n=>{a.info(`${cname()}: Permission check result:`,n),"deny"===n.decision?(a.info(`${cname()}: Tool call auto-denied: ${n.reason}`),e.tools[t.value.toolCallId]={done:!0,result:null,error:`Tool call denied: ${n.reason} for \`${t.value.name}\``}):"approve"===n.decision?(a.info(`${cname()}: Tool call auto-approved: ${n.reason}`),executeToolCall(c?.friendlyName,o,i,t)):(a.info(`${cname()}: Requesting user permission: ${n.reason}`),this.showUI(t.sender.tab,{popTab:"ok",caller_name:c?.friendlyName,server_name:o,tool_name:i,comment:s,selectionText:"foo"}).then(n=>{a.info(`${cname()}: UI closed with result:`,{result:n}),"ok"===n?executeToolCall(c?.friendlyName,o,i,t):(a.info(`${cname()}: Tool call denied by user: ${n} for ${c?.friendlyName}  AI on server '${o}' with tool '${i}' for ${t.value.name}`),e.tools[t.value.toolCallId]={done:!0,result:null,error:`Tool call denied by user for \`${t.value.name}\``})}).catch(n=>{a.info(`${cname()}: UI closed with error:`,n),e.tools[t.value.toolCallId]={done:!0,result:null,error:`Permission dialog error: ${n} for \`${t.value.name}\``}}))}).catch(n=>{a.error(`${cname()}: Error in permission check:`,n),e.tools[t.value.toolCallId]={done:!0,result:null,error:`Permission check failed: ${n.message} for \`${t.value.name}\``}}),r=!0;break}}return r||(a.info(`${cname()}: No tool found for ${t.value.name}`),e.tools[t.value.toolCallId]={done:!0,result:null,error:`No tool \`${t.value.name}\` found. mcp-link tools are named using \`mcp_{servername}_{toolname}\` format`}),!1},this.pop_get=t=>{if(a.info(`${cname()}:pop_get:`,t),"getPopoverHTML"===t.prop)return new Promise(e=>{getPopoverHTML({promreturn:!0}).then(n=>{t.result=n,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&(t.mtype=t?.type,t.type=t.broadcast,chrome.runtime.sendMessage(t)),e("local_response"!==t.ret||n)})});if(t.prop.startsWith("settings.")){const n=t.prop.substring(9);return new Promise(r=>{e.perm.configs.then(e=>{if(!(e&&e.settings&&e.settings.value&&Array.isArray(e.settings.value)))return a.log(`${cname()}:pop_get:error: Invalid settings structure in storage`),t.result=void 0,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&(t.mtype=t?.type,t.type=t.broadcast,chrome.runtime.sendMessage(t)),void r("local_response"!==t.ret||void 0);if(!e.settings.value[0]||"object"!=typeof e.settings.value[0])return a.error(`${cname()}:pop_get:error: Settings values object not found at index 0`),t.result=void 0,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&(t.mtype=t?.type,t.type=t.broadcast,chrome.runtime.sendMessage(t)),void r("local_response"!==t.ret||void 0);const o=e.settings.value[0][n];t.result=o,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&(t.mtype=t?.type,t.type=t.broadcast,chrome.runtime.sendMessage(t)),r("local_response"!==t.ret||o)}).catch(e=>{a.error(`${cname()}:pop_get:error: Failed to load settings:`,e),t.result=void 0,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&(t.mtype=t?.type,t.type=t.broadcast,chrome.runtime.sendMessage(t)),r("local_response"!==t.ret||void 0)})})}a.info(`${cname()}:pop_get: Unhandled property: ${t.prop}`)},this.pop_set=e=>(a.info(`${cname()}:pop_set:`,e),"ui_close"===e.prop?this.closeUI(e.value.uiId,e.value.result):"ui_error"===e.prop?this.rejectUI(e.value.uiId,e.value.error):"reset_settings"===e.prop?reset_settings():"view_legal_docs"===e.prop?handleEulaAcceptanceRequired({reason:"user_requested",previousVersion:null}):"settings"===e.prop&&this.updateSetting(e.value),Promise.resolve(!1)),this.updateSetting=t=>{a.info(`${cname()}:updateSetting:`,t),t&&"object"==typeof t?t.id&&"string"==typeof t.id?void 0!==t.value?e.perm.configs.then(r=>{if(!(r&&r.settings&&r.settings.value&&Array.isArray(r.settings.value)))return void a.log(`${cname()}:updateSetting:error: Invalid settings structure in storage`);if(!r.settings.value[0]||"object"!=typeof r.settings.value[0])return void a.error(`${cname()}:updateSetting:error: Settings values object not found at index 0`);const o=r.settings.value[0][t.id];void 0===o&&a.log(`${cname()}:updateSetting: Creating new setting '${t.id}'`),r.settings.value[0][t.id]=t.value,e.perm.configs=r,a.info(`${cname()}:updateSetting:success:`,{id:t.id,oldValue:o,newValue:t.value}),"mcpServers"===t.id?(a.info("mcpServers setting changed, reloading all MCP connections"),disconnectAllMcpServers(),setTimeout(()=>{initMcpConnection()},250)):"enable_browser_tool"===t.id&&(a.info("enable_browser_tool setting changed, restarting all MCP connections"),Object.keys(n).forEach(async e=>{if(n[e]&&"function"==typeof n[e].restart)try{a.info(`${cname()}: Restarting MCP client for server: ${e}`),await n[e].restart(4e3),a.info(`${cname()}: Successfully restarted MCP client for server: ${e}`)}catch(t){a.error(`${cname()}: Failed to restart MCP client for server ${e}:`,t)}else a.warn(`${cname()}: Cannot restart MCP client for server ${e} - client not available or missing restart method`)}))}).catch(e=>{a.error(`${cname()}:updateSetting:error:`,e)}):a.error(`${cname()}:updateSetting:error: Invalid setting update: value is required`):a.error(`${cname()}:updateSetting:error: Invalid setting update: id must be a non-empty string`):a.error(`${cname()}:updateSetting:error: Invalid setting update: must be an object`)},e.pop=new Proxy({},{get(e,t){const n={prop:t,ret:"local_response"},r=undefined;return globalThis.pop_get(n)},set(e,t,n){const r={prop:t,value:n,sender:{tab:{id:null}},broadcast:null},o=globalThis.pop_set(r);return!0}}),this.perm_get=t=>(a.info(`${cname()}:perm_get:`,t),new Promise(n=>{e.perm[t.prop].then(e=>{t.result=e,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&chrome.runtime.sendMessage(t),n(!0)})})),this.perm_set=t=>(a.info(`${cname()}:perm_set:`,t),e.perm[t.prop]=t.value,Promise.resolve(!1)),this.perm_deleteProperty=t=>(a.info(`${cname()}:perm_deleteProperty:`,t),delete e.perm[t.prop],Promise.resolve(!1)),this.perm_ownKeys=t=>(a.info(`${cname()}:perm_ownKeys:`,t),new Promise(n=>{Object.keys(e.perm).then(e=>{t.result=e,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&chrome.runtime.sendMessage(t),n(!0)})})),this.perm_has=t=>(a.info(`${cname()}:perm_has:`,t),new Promise(n=>{(t.prop in e.perm).then(e=>{t.result=e,t.type=t.ret,t.sender?.tab?.id&&chrome.tabs.sendMessage(t.sender.tab.id,t),t?.broadcast&&chrome.runtime.sendMessage(t),n(!0)})})),chrome.runtime.onMessage.addListener((e,t,n)=>(a.log("✅got message from content script:",e,"sender:",t,"sendResponse:",n),e.sender=t,e.sendResponse=n,"test_from_js"===e.type?(a.info(`${cname()}:⚡⚡⚡Message from offscreen js.js:`,e),!1):this[e.type](e)));const d=["browser"],u=["scripts/security.js","scripts/json_loader.js","scripts/browser.js","scripts/mcp_sse_client.js","scripts/icons.js","scripts/notify.js","scripts/bstorage.js"];importScripts(...u),a.info(`MCP Link Extension ${MODULE_VERSION} logger initialized with scripts: ${u.join(", ")}`);const p={file:"settings.json",namespace:"settings"},f={settings:{file:"settings.json",namespace:"settings"},servers:{file:"mcp_servers.json",namespace:"servers"}};async function registerUserScript(e,t=["*://*/*"]){try{return chrome.userScripts?(await chrome.userScripts.register([{id:`user-script-${Date.now()}`,js:[{code:e}],matches:t,world:"MAIN",runAt:"document_start"}]),a.info("UserScript registered successfully"),!0):(a.info("userScripts API not available"),!1)}catch(e){return a.info(`${cname()}:❌Failed to register userScript:`,e),!1}}async function loadAllConfigs(){a.debug("Starting configuration loading");const e={};for(const[t,n]of Object.entries(f))if(a.debug(`Loading ${t} from ${n.file||n.files}`),n.files){let r=null;for(const e of n.files){const t=undefined;if(await bstorage.loadConfig(e,n.namespace)){const e=await bstorage.get(n.namespace);r=await n.merger(r,e)}}r?(await bstorage.set(n.namespace,"sites",r.value.sites),e[t]=!0):e[t]=!1}else e[t]=await bstorage.loadConfig(n.file,n.namespace);const t=Object.entries(e).filter(([,e])=>e).map(([e])=>e),n=Object.entries(e).filter(([,e])=>!e).map(([e])=>e);return 0===n.length?a.info(`Successfully loaded all configs: ${t.join(", ")}`):(a.error(`Failed to load configs: ${n.join(", ")}`),a.info(`Successfully loaded: ${t.join(", ")}`)),e}function toolbox(){const t={tools:[]},n=(e.tools??={}).tools??=[];a.info("🔄 MCP Link: existing tools:",n);for(const[e,r]of Object.entries(n))r.tools&&Array.isArray(r.tools)&&r.tools.forEach(n=>{const r={...n,name:`mcp_${e}_${n.name}`};t.tools.push(r)});return a.info("✅ MCP Link: updated tools:",t),t}async function initMcpConnection(){a.info("Initializing MCP connections");try{const t=await e.pop["settings.mcpServers"];if(!t)throw new Error("No MCP server configurations found");for(const[r,o]of Object.entries(t)){const t=o.url.match(/^(https?:\/\/[^\/]+)/)?.[1];t?(a.info(`Initializing MCP client for ${r}: ${t} (SSE endpoint: ${o.url})`),n[r]=new McpSseClient(t,{sseUrl:o.url,headers:o.headers||{},onConnected:()=>{a.info(`Connected to MCP server ${r}: ${o.url}`)},onEndpoint:(e,t)=>{a.info(`Got MCP session for ${r}: ${t}`),n[r].listTools()},onMessage:async t=>{if(a.info("mcp sse Received",{serverId:r,data:t,mcp_link_tools:e.tools}),t&&t.result&&t.result.tools)a.info(`Received ${t.result.tools.length} tools from ${r}`),((e.tools??={}).tools??={})[r]={tools:t.result.tools,last_update:Date.now(),serverId:r},d.forEach(t=>{self[t]&&self[t]({type:"mcp_tools_update",tools:e.tools,serverId:r,mcpClient:n[r]})});else if(t&&t.reverse)self[t.reverse.tool]?(t.mcpClient=n[r],self[t.reverse.tool](t)):a.error(`No tool found for ${t.reverse.tool}`);else if(t?.result?.content&&Array.isArray(t.result.content)&&1==t.result.content.length&&t.result.content[0].text?.startsWith("Successfully registered tool:"))if(a.info(`${cname()}: got tool registration message - freshing tools list`,t),n[r]&&"function"==typeof n[r].listTools)try{n[r].listTools(),a.debug(`Requested updated tools list from ${r}`)}catch(e){a.warn(`Failed to request tools list from ${r}:`,e)}else a.warn(`Cannot refresh tools list - mcpClient[${r}] not available or missing listTools method`);else{const n=e.tools[t.id]||{};n.result=t?.error?t.error:t?.result,n.done=!0,n.callback?(a.info(`${cname()}: calling callback for ${t.id}`,{data:t,result:n}),n.callback(n.result)):a.info(`${cname()}: no callback for ${t.id} - just set result and done=true`,{data:t,result:n})}},logFunction:(...e)=>a.debug(`[${r}]`,...e)}),n[r].connect()):a.error(`Invalid URL format for server ${r}: ${o.url}`)}a.info("All MCP connections initialized")}catch(e){a.error("Failed to initialize MCP connections:",e)}}const m=Date.now(),g={isActive:!1,lastActivity:Date.now(),reconnectAttempts:0,maxReconnectAttempts:10,reconnectDelay:1e3,keepaliveInterval:null,healthCheckInterval:null};function setupKeepalive(){a.info("Setting up keepalive system"),chrome.alarms.create("keepalive",{delayInMinutes:1,periodInMinutes:1}),g.healthCheckInterval=setInterval(()=>{checkConnectionHealth()},3e4),g.isActive=!0,updateLastActivity()}function updateLastActivity(){g.lastActivity=Date.now()}function updateIconState(e){}function checkConnectionHealth(){const e=undefined,t=undefined;Date.now()-g.lastActivity>12e4&&(a.warn("No activity detected for 2 minutes, checking MCP connections"),reconnectAllMcpServers());for(const[e,t]of Object.entries(n))t&&"function"==typeof t.isConnected&&!t.isConnected()&&(a.warn(`MCP server ${e} disconnected, attempting reconnection`),reconnectMcpServer(e))}function reconnectMcpServer(e){if(g.reconnectAttempts>=g.maxReconnectAttempts)return void a.error(`Max reconnection attempts reached for ${e}`);g.reconnectAttempts++,a.info(`Reconnecting to MCP server ${e} (attempt ${g.reconnectAttempts})`);const t=g.reconnectDelay*Math.pow(2,g.reconnectAttempts-1);setTimeout(async()=>{try{n[e]?await n[e].connect():await initMcpConnection(),g.reconnectAttempts=0,g.reconnectDelay=1e3,updateLastActivity(),a.info(`Successfully reconnected to MCP server ${e}`)}catch(t){a.error(`Failed to reconnect to MCP server ${e}:`,t)}},t)}function reconnectAllMcpServers(){a.info("Reconnecting all MCP servers");for(const e of Object.keys(n))reconnectMcpServer(e)}function disconnectAllMcpServers(){a.info("Disconnecting all MCP servers");for(const[e,t]of Object.entries(n))if(t&&"function"==typeof t.disconnect)try{a.debug(`Disconnecting MCP server: ${e}`),t.disconnect()}catch(t){a.warn(`Error disconnecting from ${e}:`,t)}Object.keys(n).forEach(e=>delete n[e]),e.tools&&e.tools.tools&&Object.keys(e.tools.tools).forEach(t=>{delete e.tools.tools[t]}),a.info("All MCP servers disconnected and cleaned up")}function reset_settings(){a.info("Resetting configs settings"),getConfigs(!0).then(e=>{a.info("configs reset to",{configs:e})})}function CDPsend(e,t,n={}){return new Promise((r,o)=>{chrome.debugger.sendCommand({tabId:e},t,n,e=>{const t=chrome.runtime.lastError;t?o(t):r(e)})})}function cleanAXTree(e){if(!e||!Array.isArray(e))return[];const t=new Set(["staticText","text","paragraph","heading","label","button","link","menuitem","tab","option","textbox","searchbox","combobox","listbox","checkbox","radio","slider","spinbutton","switch","progressbar","main","navigation","banner","contentinfo","complementary","region","article","section","list","listitem","table","row","columnheader","rowheader","cell","gridcell","img","figure","dialog","alertdialog","alert","rootWebArea","document"]),n=new Set(["busy","disabled","editable","focusable","focused","hidden","invalid","required","checked","expanded","pressed","selected","level","multiselectable","readonly","valuemin","valuemax","activedescendant","controls","describedby","labelledby","owns","url"]);function extractValue(e){return e?"string"==typeof e.value&&e.value.trim()?e.value.trim():e.value:null}function isNodeImportant(e){if(!e.ignored&&e.role){const n=extractValue(e.role);if(t.has(n))return!0}const r=extractValue(e.name),o=extractValue(e.description),i=extractValue(e.value);if(r||o||i)return!0;if(e.properties&&Array.isArray(e.properties))for(const t of e.properties)if(n.has(t.name))return!0;return!1}function cleanNode(e){const t={nodeId:e.nodeId,role:extractValue(e.role),name:extractValue(e.name),description:extractValue(e.description),value:extractValue(e.value),parentId:e.parentId,childIds:e.childIds||[],backendDOMNodeId:e.backendDOMNodeId};if(e.properties&&Array.isArray(e.properties)){const r={};for(const t of e.properties)n.has(t.name)&&(r[t.name]=extractValue(t.value));Object.keys(r).length>0&&(t.properties=r)}e.bounds&&(t.bounds=e.bounds);const r={};let o=Symbol("unique");return Object.keys(t).forEach(e=>{const n=t[e];null==n||""===n||Array.isArray(n)&&0===n.length||n!==o&&(r[e]=n,o=n)}),r}const r=e.filter(isNodeImportant).map(cleanNode),o=new Map;return r.forEach(e=>{o.set(e.nodeId,e)}),r.forEach(e=>{e.childIds&&(e.childIds=e.childIds.filter(e=>o.has(e)))}),r.sort((e,t)=>e.nodeId.localeCompare(t.nodeId))}function axtree_to_tsv(e,t,n){if(!(e&&Array.isArray(e)&&n&&Array.isArray(n)))return{matrix:[]};const r=[];if(t){const e=[["nodeId"],...n.slice(1)];r.push(e)}for(let t=0;t<e.length;t++){const o=e[t];let i=parseInt(o.nodeId);const s=parseInt(o.parentId);if(i<0&&(i=s),i<0)continue;const a=[o];let c=t+1;for(;c<e.length;){const t=e[c],n=i;let r=parseInt(t.nodeId);if(r<0&&(r=parseInt(t.parentId)),r<0)c++;else{if(r!==n+a.length||t.role!==o.role)break;a.push(t),c++}}const l=[];for(let e=0;e<n.length;e++){const t=n[e];let r="";if(0!==e){if("role"===t){let e=extractValueFromNode(o,t);if(null==e)r="";else if("object"==typeof e)r=JSON.stringify(e).slice(1,-1);else{let t=String(e);t=t.replace(/^data:([^,]+),.*$/,"(data:$1)"),r=JSON.stringify(t).slice(1,-1)}}else{const e=[];for(const n of a){let r=extractValueFromNode(n,t);if(null!=r){if("object"==typeof r)r=JSON.stringify(r).slice(1,-1);else{let e=String(r).trim();e=e.replace(/^data:([^,]+),.*$/,"(data:$1)"),r=JSON.stringify(e).slice(1,-1)}if(""!==r){e.push(r);let t=parseInt(n.nodeId);t<0&&(t=parseInt(n.parentId)),null===t||l[0].includes(t)||l[0].push(t)}}}r=e.join(" ")}l.push(r)}else l.push([i]),null!=s&&l[0].push(s)}const d=l[l.length-1];null!=d&&""!==d?(r.push(l),t+=a.length-1):t+=a.length-1}return{matrix:r}}function extractValueFromNode(e,t){function extractValue(e,t){if(!e||!t)return null;const n=t.split(".");let r=e;for(const e of n){if(null==r)return null;r=r[e]}return r}if(!e||!t)return null;if(t.includes("/")){const n=t.split("/"),r=n[0],o=n[1];let i=extractValue(e,r);return null!=i&&""!==i||(i=extractValue(e,o)),i}return extractValue(e,t)}async function addBoundingBoxesToNodes(e,t){if(!t||!Array.isArray(t))return t;a.info(`Adding bounding boxes to ${t.length} nodes...`);let n=0,r=0;const o=t.map(async t=>{if(!t.backendDOMNodeId)return t;try{const r=await CDPsend(e,"DOM.getBoxModel",{backendNodeId:t.backendDOMNodeId});if(r&&r.model&&r.model.border){const e=r.model.border,o=[e[0],e[2],e[4],e[6]],i=[e[1],e[3],e[5],e[7]],s=Math.min(...o),a=Math.min(...i),c=Math.max(...o),l=Math.max(...i);t.bounds=[[Math.round(s),Math.round(a)],[Math.round(c),Math.round(l)]],n++}}catch(e){r++}return t}),i=await Promise.all(o);return a.info(`Bounding box processing complete: ${n} successful, ${r} skipped`),i}function escapeCDATA(e){return e.replace(/\]\]>/g,"]]]]><![CDATA[>")}function miniMinify(e){if("string"!=typeof e||!e)return e;const t=[],n=e.length;let r=0;const isIdentStart=e=>/[A-Za-z_$]/.test(e),isIdentPart=e=>/[A-Za-z0-9_$]/.test(e),isDigit=e=>/[0-9]/.test(e);function readWhile(t){let o="";for(;r<n&&t(e[r]);)o+=e[r++];return o}function readString(t){let o=t;for(r++;r<n;){const i=e[r++];if(o+=i,"\\"===i&&r<n)o+=e[r++];else if(i===t)break}return{type:"string",value:o}}function readTemplate(){let t="`";for(r++;r<n;){const o=e[r++];if(t+=o,"\\"===o&&r<n)t+=e[r++];else{if("`"===o)break;"$"===o&&"{"===e[r]&&(t+="{",r++,t+=readTemplateExpr())}}return{type:"template",value:t}}function readTemplateExpr(){let o=1,i="";for(;r<n&&o>0;){const s=e[r];"'"!==s&&'"'!==s?"`"!==s?"/"!==s||"/"!==e[r+1]&&"*"!==e[r+1]?"/"===s&&maybeRegex()?i+=t.pop().value:"{"!==s?"}"!==s?"\\"!==s?(i+=s,r++):(i+=s,r++,r<n&&(i+=e[r++])):(o--,i+=s,r++):(o++,i+=s,r++):skipComment():i+=readTemplate().value:i+=readString(s).value}return i}function skipComment(){if("/"!==e[r+1]){if("*"===e[r+1]){for(r+=2;r<n&&("*"!==e[r]||"/"!==e[r+1]);)r++;r<n&&(r+=2)}}else for(r+=2;r<n&&"\n"!==e[r]&&"\r"!==e[r];)r++}function readNumber(){let t=readWhile(isDigit);return"."===e[r]&&isDigit(e[r+1])&&(t+=e[r++],t+=readWhile(isDigit)),{type:"number",value:t}}function readIdentifier(){let t=e[r++];return t+=readWhile(isIdentPart),{type:"identifier",value:t}}function maybeRegex(){const o=lastSignificant(t);if("/"!==e[r])return!1;if("/"===e[r+1]||"*"===e[r+1])return!1;const i=undefined;if(!(!o||"punct"===o.type&&/[({\[;,?:!~+\-*\/%&|^=<>]/.test(o.value)||"keyword"===o.type&&/^(return|typeof|delete|void|in|instanceof|new|throw|case)$/.test(o.value)))return!1;let s=r+1,a=!1,c=!1;for(;s<n;){const t=e[s];if(c)c=!1;else{if("\\"===t){c=!0,s++;continue}if("["===t)a=!0;else if("]"===t&&a)a=!1;else if("/"===t&&!a)break}s++}if(s>=n)return!1;let l=s+1;for(;l<n&&/[a-z]/i.test(e[l]);)l++;const d=e.slice(r,l);return t.push({type:"regex",value:d}),r=l,!0}function lastSignificant(e){for(let t=e.length-1;t>=0;t--){const n=e[t];if("space"!==n.type&&"newline"!==n.type)return n}return null}for(;r<n;){const n=e[r];if(" "===n||"\t"===n){readWhile(e=>" "===e||"\t"===e),t.push({type:"space",value:" "});continue}if("\n"===n||"\r"===n){r++,t.push({type:"newline",value:"\n"});continue}if("/"===n&&("/"===e[r+1]||"*"===e[r+1])){skipComment();continue}if("'"===n||'"'===n){t.push(readString(n));continue}if("`"===n){t.push(readTemplate());continue}if("/"===n&&maybeRegex())continue;if(isDigit(n)){t.push(readNumber());continue}if(isIdentStart(n)){const e=readIdentifier();/^(return|break|continue|throw|yield|typeof|delete|void|in|instanceof|new)$/.test(e.value)&&(e.type=/^(return|break|continue|throw|yield)$/.test(e.value)?"asiKeyword":"keyword"),t.push(e);continue}const o=["===","!==",">>>",">>=","<<=","**=","&&=","||=","??=","=>","++","--","<=",">=","==","!=","&&","||","??","**",">>","<<","+=","-=","*=","/=","%=","&=","|=","^="];let i=null;for(const t of o)if(e.startsWith(t,r)){i=t;break}i?(t.push({type:"punct",value:i}),r+=i.length):(t.push({type:"punct",value:n}),r++)}let o="";function needsSpace(e,t){if(!e)return!1;if("space"===e.type||"newline"===e.type)return!1;if("space"===t.type||"newline"===t.type)return!1;const n="identifier"===e.type||"number"===e.type||"asiKeyword"===e.type||"keyword"===e.type,r="identifier"===t.type||"number"===t.type||"asiKeyword"===t.type||"keyword"===t.type;return!(!n||!r)||!("++"!==e.value&&"--"!==e.value||!r)}for(let e=0;e<t.length;e++){const n=t[e];if("space"===n.type)continue;if("newline"===n.type){const n=lastSignificant(t.slice(0,e)),r=function(){for(let n=e+1;n<t.length;n++)if("space"!==t[n].type&&"newline"!==t[n].type)return t[n];return null}();let i=!1;n&&"asiKeyword"===n.type?i=!0:(!r||("punct"!==r.type||"("!==r.value&&"["!==r.value)&&"template"!==r.type)&&(!n||!r||"identifier"!==n.type&&"number"!==n.type&&"regex"!==n.type&&")"!==n.value&&"]"!==n.value&&"}"!==n.value||"identifier"!==r.type&&"number"!==r.type&&"template"!==r.type&&"("!==r.value&&"["!==r.value)||(i=!0),i&&(o+=";");continue}const r=undefined;needsSpace(function(){let n=e-1;for(;n>=0;){if("space"!==t[n].type&&"newline"!==t[n].type)return t[n];n--}return null}(),n)&&(o+=" "),o+=n.value}return o}const h=miniMinify("(function() {\nfunction detectFrameworks() {\nconst detected = [];\nconst failures = [];\n\nfunction safeDetect(name, fn) {\n  try {\n    const result = fn();\n    if (result) detected.push(`${name}: ${result}`);\n  } catch (e) {\n    failures.push(`${name}: ${e.message}`);\n  }\n}\n\n// Core JavaScript Frameworks\nsafeDetect('React', () => {\n  const indicators = [];\n  if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__) indicators.push('DevTools');\n  if (window.React) indicators.push('Global');\n  \n  // Check for React-specific window keys\n  Object.keys(window).forEach(k => {\n    if (/^__react/i.test(k)) indicators.push(`window.${k}`);\n  });\n  \n  // Check for React DOM properties\n  const els = document.querySelectorAll('*');\n  for (let el of els) {\n    for (let prop in el) {\n      if (prop.startsWith('__react')) {\n        indicators.push('DOM Props');\n        break;\n      }\n    }\n    if (indicators.includes('DOM Props')) break;\n  }\n  \n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Vue.js', () => {\n  const indicators = [];\n  \n  // Vue 3 detection (most reliable for modern Vue apps)\n  if (window.__VUE__) {\n    indicators.push('v3 App');\n  }\n  \n  // Vue 2/3 DevTools hook\n  if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n    indicators.push('DevTools');\n  }\n  \n  // Global Vue (less common in modern apps)\n  if (window.Vue) {\n    indicators.push(`Global v${window.Vue.version || 'unknown'}`);\n  }\n  \n  // Vue scoped CSS (very reliable indicator)\n  const scopedElements = document.querySelectorAll('[data-v-]');\n  if (scopedElements.length > 0) {\n    indicators.push(`${scopedElements.length} Scoped CSS`);\n  }\n  \n  // Vue directives (reliable but less common)\n  const directiveElements = document.querySelectorAll('[v-show], [v-if], [v-for], [v-model], [v-on], [v-bind], [v-html], [v-text], [v-cloak], [v-once], [v-pre]');\n  if (directiveElements.length > 0) {\n    indicators.push(`${directiveElements.length} Directives`);\n  }\n  \n  // Vue SSR marker\n  if (document.querySelector('[data-server-rendered]')) {\n    indicators.push('SSR');\n  }\n  \n  // Vue 3 SSR setters (GitLab pattern)\n  if (window.__VUE_SSR_SETTERS__ || window.__VUE_INSTANCE_SETTERS__) {\n    indicators.push('SSR Setters');\n  }\n  \n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Angular', () => {\n  const indicators = [];\n  if (window.ng) indicators.push('Global');\n  if (document.querySelector('[ng-version]')) indicators.push(`v${document.querySelector('[ng-version]').getAttribute('ng-version')}`);\n  if (document.querySelector('[_ngcontent-]')) indicators.push('Component Encapsulation');\n  if (document.querySelector('app-root')) indicators.push('App Root');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('jQuery', () => {\n  const indicators = [];\n  if (window.jQuery) indicators.push(`v${window.jQuery.fn.jquery}`);\n  if (window.$) indicators.push('$ Global');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Next.js', () => {\n  const indicators = [];\n  if (window.__NEXT_DATA__) indicators.push('Data');\n  const nextScripts = document.querySelectorAll('script[src*=\"_next\"]').length;\n  if (nextScripts > 0) indicators.push(`${nextScripts} Scripts`);\n  const nextClasses = document.querySelectorAll('[class*=\"_next\"]').length;\n  if (nextClasses > 0) indicators.push(`${nextClasses} Classes`);\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Svelte', () => {\n  const indicators = [];\n  if (document.querySelector('[data-svelte-h]')) indicators.push('Hydration');\n  if (document.querySelector('[data-svelte-kit]')) indicators.push('SvelteKit');\n  const svelteAttrs = document.querySelectorAll('[class*=\"svelte-\"]').length;\n  if (svelteAttrs > 0) indicators.push(`${svelteAttrs} Classes`);\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Alpine.js', () => {\n  const indicators = [];\n  if (window.Alpine) indicators.push('Global');\n  const xData = document.querySelectorAll('[x-data]').length;\n  if (xData > 0) indicators.push(`${xData} x-data`);\n  const alpineDirectives = document.querySelectorAll('[x-show], [x-if], [x-for], [x-on], [x-model], [x-text], [x-html]').length;\n  if (alpineDirectives > 0) indicators.push(`${alpineDirectives} Directives`);\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Ember.js', () => {\n  const indicators = [];\n  if (window.Ember) indicators.push('Global');\n  if (window.__ember_application__) indicators.push('Application');\n  const emberEls = document.querySelectorAll('[id^=\"ember\"]').length;\n  if (emberEls > 0) indicators.push(`${emberEls} Elements`);\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('DraftJS', () => {\n  const indicators = [];\n  \n  // Global DraftJS object\n  if (window.Draft) indicators.push('Global Draft');\n  \n  // DraftJS-specific CSS classes (most reliable indicator)\n  const draftClasses = [\n    '.public-DraftEditor-content',\n    '.DraftEditor-root', \n    '.DraftEditor-editorContainer',\n    '.public-DraftEditorPlaceholder-root',\n    '.notranslate.public-DraftEditor-content'\n  ];\n  \n  let foundClasses = 0;\n  draftClasses.forEach(className => {\n    const elements = document.querySelectorAll(className);\n    if (elements.length > 0) {\n      foundClasses++;\n      indicators.push(`${className.replace('.', '')}: ${elements.length}`);\n    }\n  });\n  \n  // DraftJS data attributes\n  const draftDataAttrs = document.querySelectorAll('[data-contents], [data-block], [data-offset-key]').length;\n  if (draftDataAttrs > 0) indicators.push(`${draftDataAttrs} Data Attrs`);\n  \n  // DraftJS contenteditable with specific structure\n  const draftEditables = [...document.querySelectorAll('[contenteditable=\"true\"]')].filter(el => {\n    const parent = el.parentElement;\n    return parent && (parent.className.includes('DraftEditor') || \n                      parent.className.includes('public-DraftEditor') ||\n                      el.className.includes('notranslate'));\n  });\n  if (draftEditables.length > 0) indicators.push(`${draftEditables.length} Editors`);\n  \n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Web Components', () => {\n  const indicators = [];\n  const customEls = document.querySelectorAll(':defined').length;\n  if (customEls > 0) indicators.push(`${customEls} Custom Elements`);\n  const shadowRoots = [...document.querySelectorAll('*')].filter(el => el.shadowRoot).length;\n  if (shadowRoots > 0) indicators.push(`${shadowRoots} Shadow DOM`);\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\n// Additional DOM/Tech Detection for AI Context\nsafeDetect('CSS Framework', () => {\n  const indicators = [];\n  if (document.querySelector('[class*=\"bootstrap\"]') || document.querySelector('link[href*=\"bootstrap\"]')) indicators.push('Bootstrap');\n  if (document.querySelector('[class*=\"tailwind\"]') || document.querySelector('script[src*=\"tailwind\"]')) indicators.push('Tailwind');\n  if (document.querySelector('[class*=\"material\"]') || document.querySelector('link[href*=\"material\"]')) indicators.push('Material');\n  if (document.querySelector('[class*=\"bulma\"]') || document.querySelector('link[href*=\"bulma\"]')) indicators.push('Bulma');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('UI Libraries', () => {\n  const indicators = [];\n  if (window.AntDesign || document.querySelector('[class*=\"ant-\"]')) indicators.push('Ant Design');\n  if (window.MaterialUI || document.querySelector('[class*=\"MuiBox\"], [class*=\"MuiButton\"]')) indicators.push('Material-UI');\n  if (document.querySelector('[class*=\"chakra-\"]')) indicators.push('Chakra UI');\n  if (document.querySelector('[data-reach-]')) indicators.push('Reach UI');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('State Management', () => {\n  const indicators = [];\n  if (window.__REDUX_DEVTOOLS_EXTENSION__) indicators.push('Redux');\n  if (window.MobX) indicators.push('MobX');\n  if (window.Vuex) indicators.push('Vuex');\n  if (window.Pinia) indicators.push('Pinia');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Build Tools', () => {\n  const indicators = [];\n  if (document.querySelector('script[src*=\"webpack\"]')) indicators.push('Webpack');\n  if (document.querySelector('script[src*=\"vite\"]')) indicators.push('Vite');\n  if (document.querySelector('script[src*=\"parcel\"]')) indicators.push('Parcel');\n  if (window.__webpack_require__) indicators.push('Webpack Runtime');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Analytics & Tracking', () => {\n  const indicators = [];\n  if (window.gtag || window.ga) indicators.push('Google Analytics');\n  if (window.fbq) indicators.push('Facebook Pixel');\n  if (window.mixpanel) indicators.push('Mixpanel');\n  if (window.amplitude) indicators.push('Amplitude');\n  if (document.querySelector('script[src*=\"hotjar\"]')) indicators.push('Hotjar');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Content Management', () => {\n  const indicators = [];\n  if (document.querySelector('meta[name=\"generator\"][content*=\"WordPress\"]')) indicators.push('WordPress');\n  if (document.querySelector('meta[name=\"generator\"][content*=\"Drupal\"]')) indicators.push('Drupal');\n  if (document.querySelector('script[src*=\"contentful\"]')) indicators.push('Contentful');\n  if (window.Shopify) indicators.push('Shopify');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\nsafeDetect('Page Architecture', () => {\n  const indicators = [];\n  if (window.history && window.history.pushState) indicators.push('SPA Routing');\n  const iframes = document.querySelectorAll('iframe').length;\n  if (iframes > 0) indicators.push(`${iframes} iFrames`);\n  const canvas = document.querySelectorAll('canvas').length;\n  if (canvas > 0) indicators.push(`${canvas} Canvas`);\n  const svg = document.querySelectorAll('svg').length;\n  if (svg > 0) indicators.push(`${svg} SVG`);\n  const testIds = document.querySelectorAll('[data-testid]').length;\n  if (testIds > 0) indicators.push('Test IDs Present');\n  return indicators.length > 0 ? indicators.join(', ') : null;\n});\n\n// Generate simple text output\nconst lines = [];\nlines.push('\\nWeb tech stack:-');\n\nif (detected.length > 0) {\n  detected.forEach(item => lines.push(`${item}`));\n} else {\n  lines.push('No major frameworks detected');\n}\n\nif (failures.length > 0) {\n  lines.push('');\n  lines.push('Detection failures:');\n  failures.forEach(failure => lines.push(`⚠ ${failure}`));\n}\n\nlines.push('');\n\nreturn lines.join('\\n');\n}\n\nreturn detectFrameworks();\n})();\n");async function getPageText(e,t){try{return await new Promise((t,n)=>{chrome.debugger.attach({tabId:e.id},s,async()=>{if(chrome.runtime.lastError)a.info(`${cname()}:❌attach failed`,chrome.runtime.lastError.message),t({success:!1,error:`Attach failed: ${chrome.runtime.lastError.message}`,data:null});else try{await CDPsend(e.id,"Accessibility.enable"),await CDPsend(e.id,"DOM.enable"),await CDPsend(e.id,"Runtime.enable");let n="";try{a.info("🔍 Starting framework detection...");const t=await CDPsend(e.id,"Runtime.evaluate",{expression:h,returnByValue:!0,silent:!0});a.info("🔍 Framework detection raw result:",t),t&&t.result?(a.info("🔍 Framework result object:",t.result),t.result.value?(a.info("🔍 Framework result value:",t.result.value),n=t.result.value+"\n\n"):a.info("🔍 Framework result has no value property")):a.info("🔍 Framework result is missing or has no result property")}catch(e){a.info("🔍 Framework detection failed with error:",e),n="=== WEBSITE TECHNOLOGY STACK ===\n• Framework detection failed\n=====================================\n\n"}a.info("techStackInfo,FRAMEWORK_DETECTION_CODE →",{techStackInfo:n,FRAMEWORK_DETECTION_CODE:h});const{nodes:r}=await CDPsend(e.id,"Accessibility.getFullAXTree");await addBoundingBoxesToNodes(e.id,r);const o=cleanAXTree(r);a.info("All nodes →",r),a.info("Filtered nodes →",o);const{matrix:i}=axtree_to_tsv(o,!0,["nodeId","role","properties.url","name/value"]);a.info("Matrix →",{matrix:i}),a.info(`Processing ${i.length} data rows for tagging...`);for(let t=1;t<i.length;t++){const n=undefined,o=i[t][0];for(;o.length>0;){const t=o[0],n=r.find(e=>e.nodeId===String(t)),i=n?n.backendDOMNodeId:null;if(i)try{a.info("Resolving nodeId",t,"backendDOMNodeId",i);const n=await CDPsend(e.id,"DOM.resolveNode",{backendNodeId:i});if(n&&n.object){const r=await CDPsend(e.id,"Runtime.callFunctionOn",{objectId:n.object.objectId,functionDeclaration:`function() { \n                        try {\n                          this.setAttribute('data-mcp-node-id', '${t}'); \n                          //logger.info('✅ Tagged nodeId ${t} successfully');\n                          return 'SUCCESS_${t}';\n                        } catch(e) {\n                          //logger.info('❌ Failed to tag nodeId ${t}:', e.message);\n                          return 'FAILED_${t}_' + e.message;\n                        }\n                      }`,silent:!0,returnByValue:!0}),i=r?.result?.value;if(i&&i.startsWith("SUCCESS_"))break;o.shift()}else o.shift()}catch(e){o.shift()}else a.info(`Skipping accessibility node ${t}: no DOM mapping`),o.shift()}o.length}a.info("Node tagging completed");const s=[];for(let e=0;e<i.length;e++){const t=i[e],n=[];for(let e=0;e<t.length;e++)if(0===e){const r=t[e];n.push(r.length>0?String(r[0]):"null")}else n.push(String(t[e]));s.push(n.join("\t"))}const c=s.join("\n");await CDPsend(e.id,"Runtime.disable"),await CDPsend(e.id,"DOM.disable"),await CDPsend(e.id,"Accessibility.disable"),t({success:!0,error:null,data:`<![CDATA[${n}${c}]]>`})}catch(e){t({success:!1,error:e.message||e.toString(),data:null})}finally{chrome.debugger.detach({tabId:e.id})}})})}catch(e){return{success:!1,error:e.message||e.toString(),data:null}}}async function getConfigs(t=!1){try{const n=t?null:await e.perm.configs;if(n&&"object"==typeof n&&Object.keys(n).length>0)return a.info("Loaded configs from permanent storage"),n;a.info(t?"Configuration reset requested - discarding permanent storage, re-loading from JSON files":"No configs in permanent storage, loading from JSON files");const r=await loadAllConfigs();r.serverConfigs=await bstorage.get("servers","mcpServers"),r.settings=await bstorage.get("settings","settings"),e.perm.configs=r;const o=await e.perm.configs;return a.info("Loaded configs from JSON files and saved to permanent storage",{reloaded:o}),r}catch(t){a.error("Failed to load configs from storage, falling back to JSON files:",t);const n=await loadAllConfigs();n.serverConfigs=await bstorage.get("servers","mcpServers"),n.settings=await bstorage.get("settings","settings");try{e.perm.configs=n;const t=await e.perm.configs;a.info("configs saved to permanent storage",{reloaded:t})}catch(e){a.warn("Failed to save configs to permanent storage:",e)}return n}}function performExtensionStartup(n={reason:"manual",previousVersion:null}){a.info(`Extension startup initiated. Reason: ${n.reason}, Previous Version: ${n.previousVersion}`),e.perm.EULA.then(e=>{t=e,e?(a.info("EULA already accepted, proceeding with startup"),performAllowedExtensionStartup(n)):(a.info("EULA not accepted, showing acceptance UI"),handleEulaAcceptanceRequired(n))}).catch(e=>{a.error("Error checking EULA acceptance:",e),handleEulaAcceptanceRequired(n)})}function handleEulaAcceptanceRequired(e){const t=["chrome-extension://mcplinkmjpbkjpdahapgegagfpimlopm/pages/terms.html#EULA.md","chrome-extension://mcplinkmjpbkjpdahapgegagfpimlopm/pages/terms.html"];chrome.tabs.query({},n=>{let r=null;for(const e of n)if(t.some(t=>e.url===t)){r=e;break}r?(a.info(`Found existing EULA tab (${r.id}), focusing it`),chrome.tabs.update(r.id,{active:!0}),chrome.windows.update(r.windowId,{focused:!0}),startEulaAcceptanceMonitoring(e)):(a.info("No existing EULA tab found, creating new one"),chrome.tabs.create({url:"chrome-extension://mcplinkmjpbkjpdahapgegagfpimlopm/pages/terms.html#EULA.md",active:!0},t=>{a.info(`Created new EULA tab (${t.id})`),startEulaAcceptanceMonitoring(e)}))})}function startEulaAcceptanceMonitoring(n){a.info("Starting EULA acceptance monitoring (checking every 60 seconds)");const r=setInterval(()=>{e.perm.EULA.then(e=>{t=e,e?(a.info("EULA acceptance detected, proceeding with startup"),clearInterval(r),performAllowedExtensionStartup(n)):a.info("EULA still not accepted, continuing to monitor...")}).catch(e=>{a.error("Error checking EULA acceptance during monitoring:",e)})},6e4);e.perm.EULA.then(e=>{t=e,e&&(a.info("EULA acceptance detected on immediate check, proceeding with startup"),clearInterval(r),performAllowedExtensionStartup(n))}).catch(e=>{a.error("Error on immediate EULA check:",e)})}function performAllowedExtensionStartup(e={reason:"manual",previousVersion:null}){a.info(`Allowed Extension startup initiated. Reason: ${e.reason}, Previous Version: ${e.previousVersion}`),setupKeepalive(),getConfigs().then(t=>{switch(t.servers&&(a.info("Initializing MCP connection with loaded server config"),initMcpConnection()),t.servers&&mcpIcons.initialize().then(()=>{a.debug("Icons initialized successfully")}).catch(e=>{a.error("Failed to initialize icons:",e)}),setupMcpFloatingAssistant(),e.reason){case"install":a.info("Extension installed for the first time");break;case"update":a.info(`Extension updated from version ${e.previousVersion}`);break;case"chrome_update":a.info("Chrome browser updated - verifying extension state");break;case"manual":a.info("Manual startup requested")}a.info(`Extension startup completed in ${Date.now()-m}ms`)}).catch(e=>{a.error("Extension startup failed:",e)})}async function getOuterHTMLFromNodeId(e,t,n=null){try{return a.info("running getOuterHTMLFromNodeId →",{tab:e,nodeId:t}),await new Promise((r,o)=>{chrome.debugger.attach({tabId:e.id},s,async()=>{if(a.info("debugger attached"),chrome.runtime.lastError)return a.info(`${cname()}:❌attach failed`,chrome.runtime.lastError.message),void r({success:!1,error:`Attach failed: ${chrome.runtime.lastError.message}`,data:null});try{a.info("enabling DOM and Runtime domains"),await CDPsend(e.id,"DOM.enable"),await CDPsend(e.id,"Runtime.enable");let o=c.get(e.id)||"WARNING: No access_token found for this tab "+e.id;const i=n??`(() => { \n            const element = document.querySelector('[data-mcp-node-id="${t}"]');\n            if (!element) {\n              return Promise.resolve('Error: Element with data-mcp-node-id="${t}" not found');\n            }\n            return Promise.resolve(element.outerHTML);\n          })()`,s=n?miniMinify("(async () => {\n            // Custom serializer for edge cases that CDP can't handle\n            function serializeValue(value) {\n              if (typeof value === 'number') {\n                if (isNaN(value)) return 'NaN';\n                if (value === Infinity) return 'Infinity';\n                if (value === -Infinity) return '-Infinity';\n                return value;\n              }\n              if (value === undefined) return 'undefined';\n              if (typeof value === 'bigint') return value.toString() + 'n';\n              if (typeof value === 'symbol') return value.toString();\n              if (typeof value === 'function') return value.toString();\n              return value;\n            }\n            \n            // Enhanced error serializer with maximum detail\n            function serializeError(error, context, originalCode) {\n              const errorInfo = {\n                isError: true,\n                context: context,\n                name: error.name || 'Unknown Error',\n                message: error.message || 'No error message',\n                stack: error.stack || 'No stack trace available',\n                toString: error.toString(),\n                originalCode: originalCode,\n                codeLength: originalCode ? originalCode.length : 0,\n                errorType: Object.prototype.toString.call(error)\n              };\n              \n              // Add line/column info if available\n              if (error.lineNumber !== undefined) errorInfo.lineNumber = error.lineNumber;\n              if (error.columnNumber !== undefined) errorInfo.columnNumber = error.columnNumber;\n              if (error.fileName !== undefined) errorInfo.fileName = error.fileName;\n              \n              // Add any custom properties\n              for (const key in error) {\n                if (error.hasOwnProperty(key) && !(key in errorInfo)) {\n                  try {\n                    errorInfo[key] = serializeValue(error[key]);\n                  } catch (e) {\n                    errorInfo[key] = '[Could not serialize: ' + e.message + ']';\n                  }\n                }\n              }\n              \n              return errorInfo;\n            }")+`\nlet originalCode = ${JSON.stringify(n)};\n`+miniMinify(`let originalWindow=window;\n            try { originalWindow = __MCP__LINK__['${o}'].mcp_link.window; } catch (e) { }\n            if (originalCode.trim().startsWith('await ')) originalCode='return '+ originalCode;\n            \n            // Pre-validate: Check if code can be used as expression\n            function canBeExpression(code) {\n              // Quick heuristics to detect statements that can't be expressions\n              const statementKeywords = ['const ', 'let ', 'var ', 'function ', 'class ', 'if ', 'for ', 'while ', 'do ', 'switch ', 'try ', 'throw ', 'return ', 'break ', 'continue '];\n              const trimmed = code.trim();\n              \n              // Check for statement keywords at start of code\n              for (const keyword of statementKeywords) {\n                if (trimmed.startsWith(keyword)) {\n                  return false;\n                }\n              }\n              \n              // Check for multiple statements (semicolon not at end)\n              const semicolonIndex = code.indexOf(';');\n              if (semicolonIndex !== -1 && semicolonIndex < code.length - 1) {\n                return false;\n              }\n              \n              return true;\n            }\n            \n            let expressionError = null;\n            \n            // Strategy 1: Try as expression (only if it looks like one)\n            if (canBeExpression(originalCode)) {\n              try {\n                return serializeValue(eval(originalCode));\n              } catch (error) {\n                expressionError = error;\n                // Expression attempt failed, continue to statements\n              }\n            }\n            \n            // Strategy 2: Try as statements with implicit return of last expression\n            try {\n              const result = eval(originalCode);\n              return serializeValue(result);\n            } catch (statementError) {\n              \n              // Strategy 3: Try wrapping in function to capture explicit returns\n              try {\n                const funcCode = 'function() { ' + originalCode + ' }';\n                const func = eval('(' + funcCode + ')');\n                const result = func();\n                return serializeValue(result);\n              } catch (functionError) {\n                \n                // Strategy 4: Try as async function (handles await, etc.)\n                try {\n                  const asyncFuncCode = 'async function() { ' + originalCode + ' }';\n                  const asyncFunc = eval('(' + asyncFuncCode + ')');\n                  const result = asyncFunc();\n                  return serializeValue(result);\n                } catch (asyncError) {\n                  \n                  // Strategy 5: Try executing as module-like code (handles import/export syntax)\n                  try {\n                    // Wrap in try-catch to handle module syntax\n                    const moduleResult = eval('(() => { ' + originalCode + ' })()');\n                    return serializeValue(moduleResult);\n                  } catch (moduleError) {\n                    \n                    // All strategies failed - return comprehensive error information\n                    return {\n                      allStrategiesFailed: true,\n                      originalCode: originalCode,\n                      codePreview: originalCode.length > 200 ? \n                        originalCode.substring(0, 200) + '...' : originalCode,\n                      errors: {\n                        strategy1_expression: canBeExpression(originalCode) ? \n                          serializeError(expressionError, 'Tried as expression: eval(code)', originalCode) :\n                          { skipped: true, reason: 'Code detected as statements, not expression' },\n                        strategy2_statements: serializeError(statementError, 'Tried as statements: eval(code)', originalCode),\n                        strategy3_function: serializeError(functionError, 'Tried wrapped in function', originalCode),\n                        strategy4_async: serializeError(asyncError, 'Tried as async function', originalCode),\n                        strategy5_module: serializeError(moduleError, 'Tried as module-like code', originalCode)\n                      },\n                      suggestions: [\n                        'Check for syntax errors in your JavaScript code',\n                        'Ensure all variables are properly declared',\n                        'Verify that all brackets, parentheses, and braces are balanced',\n                        'Check for missing semicolons or commas',\n                        'Ensure async/await usage is correct if using asynchronous code',\n                        'Verify that all referenced variables and functions are available in the page context',\n                        'For long-running operations, ensure they complete within 4.5 minutes'\n                      ],\n                      debugInfo: {\n                        timestamp: new Date().toISOString(),\n                        userAgent: navigator.userAgent,\n                        url: window.location.href,\n                        title: document.title,\n                        maxTimeout: '4.5 minutes (270 seconds)'\n                      }\n                    };\n                  }\n                }\n              }\n            }\n          })()`):i;a.info("🔧 v42 About to execute:",n?"WRAPPED custom JS":"DEFAULT expression"),a.info("📝 Expression:",{wrappedExpression:s});const{result:l}=await CDPsend(e.id,"Runtime.evaluate",{expression:s,returnByValue:!0,includeCommandLineAPI:!0,generatePreview:!0,awaitPromise:!0});a.info("Runtime.evaluate result →",l),await CDPsend(e.id,"DOM.disable"),await CDPsend(e.id,"Runtime.disable");const d=l?.value;function safeSerializeValue(e){if("number"==typeof e)return isNaN(e)?"NaN":e===1/0?"Infinity":e===-1/0?"-Infinity":String(e);if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return String(e);if("bigint"==typeof e)return e.toString()+"n";if("symbol"==typeof e)return e.toString();if("function"==typeof e)return e.toString();if("object"==typeof e)try{return JSON.stringify(e)}catch(t){return String(e)}return String(e)}const u=void 0!==d?safeSerializeValue(d):"(no result)";r({success:!0,error:null,data:u})}catch(p){a.info(`${cname()}:❌Error in getOuterHTMLFromNodeId inner:`,p),r({success:!1,error:p.message||p.toString(),data:null})}finally{try{chrome.debugger.detach({tabId:e.id})}catch(f){a.info(`${cname()}:❌Error detaching debugger:`,f)}}})})}catch(e){return a.info(`${cname()}:❌Error in getOuterHTMLFromNodeId outer:`,e),{success:!1,error:e.message||e.toString(),data:null}}}function safeClone(e){const t=new WeakSet,clone=e=>void 0===e?null:"function"==typeof e||"symbol"==typeof e?e.toString():null===e||"object"!=typeof e?e:t.has(e)?null:(t.add(e),Array.isArray(e)?e.map(clone):Object.fromEntries(Object.entries(e).map(([e,t])=>{try{return[e,clone(t)]}catch{return[e,null]}})));return clone(e)}async function getPopoverHTML(e){try{a.info("💡💡getting popover HTML");const t=await fetch(chrome.runtime.getURL("pages/popover.html"));return e?.promreturn?t.text():await t.text()}catch(e){return a.info(`${cname()}:❌Failed to load popover HTML:`,e),`<div style="padding: 20px; text-align: center;">Failed to load popover content: ${e}</div>`}}function setupMcpFloatingAssistant(){a.info("Setting up MCP Floating Assistant context menu and handlers"),chrome.contextMenus.removeAll(()=>{chrome.contextMenus.create({id:"mcp-floating-assistant",title:"Ask AI (Open MCP-Link Assistant)",contexts:["all"]}),a.info("MCP Floating Assistant context menu created")}),chrome.contextMenus.onClicked.addListener(async(e,t)=>{"mcp-floating-assistant"===e.menuItemId&&((e=e||{}).popTab||(e.popTab="chat"),a.info("MCP Assistant context menu clicked",{tabId:t.id,info:e,tab:t}),globalThis.showUI(t,e).then(e=>{a.info(`${cname()}: Context menu UI closed with result:`,e)}).catch(e=>{a.info(`${cname()}: Context menu UI closed with error:`,e)}))});const e=chrome.runtime.onMessage.hasListener?chrome.runtime.onMessage.listeners?.[0]:null;chrome.runtime.onMessage.addListener((e,t,n)=>"inject_floating_assistant"===e.type?(chrome.scripting.executeScript({target:{tabId:t.tab.id},func:injectFloatingAssistantCode,args:[e.data]}).catch(e=>{a.error("Failed to inject floating assistant code",e)}),!1):"floating_assistant_ready"===e.type&&(a.info("Floating assistant ready in tab",t.tab.id),!1))}function injectFloatingAssistantCode(e={}){a.info("injectFloatingAssistantCode",e),window.mcpFloatingAssistant?window.mcpFloatingAssistant.show(e):(window.mcpFloatingAssistant={isVisible:!1,isPointerMode:!1,currentPopover:null,show(e={}){this.isVisible||(this.createPopover(e),this.isVisible=!0)},hide(){this.currentPopover&&(this.currentPopover.remove(),this.currentPopover=null),this.exitPointerMode(),this.isVisible=!1},createPopover(e){const t=document.createElement("div");t.id="mcp-floating-assistant";const n=e.clickX||Math.min(window.innerWidth-380,100),r=e.clickY||Math.min(window.innerHeight-300,100);t.style.cssText=`\n        position: fixed;\n        left: ${n}px;\n        top: ${r}px;\n        width: 360px;\n        min-height: 200px;\n        background: #ffffff;\n        border: 1px solid #e1e5e9;\n        border-radius: 12px;\n        box-shadow: 0 8px 32px rgba(0,0,0,0.15), 0 2px 8px rgba(0,0,0,0.1);\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        font-size: 14px;\n        z-index: 2147483647;\n        resize: both;\n        overflow: hidden;\n        backdrop-filter: blur(10px);\n        transition: all 0.2s ease;\n      `,t.innerHTML=this.getPopoverHTML(e),document.body.appendChild(t),this.currentPopover=t,this.setupEventHandlers(t,e);const o=t.querySelector("#mcp-input");o&&o.focus()},getPopoverHTML(e){const t=undefined,n=undefined;return`\n        <div id="mcp-header" style="\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 12px 16px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border-radius: 12px 12px 0 0;\n          cursor: move;\n          user-select: none;\n        ">\n          <div style="display: flex; align-items: center; gap: 8px;">\n            <span style="font-size: 16px;">🧠</span>\n            <span style="font-weight: 600;">MCP Assistant</span>\n          </div>\n          <div style="display: flex; align-items: center; gap: 8px;">\n            <button id="mcp-pointer-btn" style="\n              background: rgba(255,255,255,0.2);\n              border: 1px solid rgba(255,255,255,0.3);\n              color: white;\n              border-radius: 6px;\n              padding: 4px 8px;\n              cursor: pointer;\n              font-size: 12px;\n              transition: all 0.2s ease;\n            " title="Toggle pointer mode">\n              <svg width="14" height="14" viewBox="0 0 24 24" fill="currentColor">\n                <path d="M12 2L13.09 8.26L22 9L13.09 9.74L12 16L10.91 9.74L2 9L10.91 8.26L12 2Z"/>\n              </svg>\n            </button>\n            <button id="mcp-close-btn" style="\n              background: rgba(255,255,255,0.2);\n              border: 1px solid rgba(255,255,255,0.3);\n              color: white;\n              border-radius: 6px;\n              padding: 4px 8px;\n              cursor: pointer;\n              font-size: 12px;\n              transition: all 0.2s ease;\n            ">✕</button>\n          </div>\n        </div>\n        \n        <div style="padding: 16px;">\n          <div style="position: relative; margin-bottom: 12px;">\n            <textarea id="mcp-input" placeholder="${e.selectionText&&e.selectionText.trim()?"Ask about the selected text...":"What would you like to know about this page?"}" style="\n              width: 100%;\n              min-height: 80px;\n              padding: 12px;\n              border: 2px solid #e1e5e9;\n              border-radius: 8px;\n              font-family: inherit;\n              font-size: 14px;\n              resize: vertical;\n              outline: none;\n              transition: border-color 0.2s ease;\n              box-sizing: border-box;\n            ">${e.selectionText||""}</textarea>\n          </div>\n          \n          <div style="display: flex; gap: 8px; flex-wrap: wrap;">\n            <button id="mcp-ask-btn" style="\n              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n              color: white;\n              border: none;\n              border-radius: 6px;\n              padding: 8px 16px;\n              cursor: pointer;\n              font-weight: 500;\n              transition: all 0.2s ease;\n            ">Ask</button>\n            \n            <button id="mcp-explain-btn" style="\n              background: #f8f9fa;\n              color: #495057;\n              border: 1px solid #dee2e6;\n              border-radius: 6px;\n              padding: 8px 16px;\n              cursor: pointer;\n              transition: all 0.2s ease;\n            ">Explain</button>\n            \n            <button id="mcp-summarize-btn" style="\n              background: #f8f9fa;\n              color: #495057;\n              border: 1px solid #dee2e6;\n              border-radius: 6px;\n              padding: 8px 16px;\n              cursor: pointer;\n              transition: all 0.2s ease;\n            ">Summarize</button>\n          </div>\n          \n          <div id="mcp-response" style="\n            margin-top: 12px;\n            padding: 12px;\n            background: #f8f9fa;\n            border-radius: 8px;\n            display: none;\n            max-height: 200px;\n            overflow-y: auto;\n          "></div>\n          \n          <div id="mcp-pointer-hint" style="\n            margin-top: 12px;\n            padding: 8px 12px;\n            background: #e3f2fd;\n            border: 1px solid #bbdefb;\n            border-radius: 6px;\n            color: #1565c0;\n            font-size: 12px;\n            display: none;\n          ">\n            🎯 Pointer mode active - click on any element to ask about it, or click here to exit\n          </div>\n        </div>\n      `},setupEventHandlers(e,t){const n=e.querySelector("#mcp-header");let r=!1,o={x:0,y:0};n.addEventListener("mousedown",t=>{r=!0;const n=e.getBoundingClientRect();o.x=t.clientX-n.left,o.y=t.clientY-n.top,document.body.style.userSelect="none"}),document.addEventListener("mousemove",t=>{if(!r)return;const n=Math.max(0,Math.min(window.innerWidth-e.offsetWidth,t.clientX-o.x)),i=Math.max(0,Math.min(window.innerHeight-e.offsetHeight,t.clientY-o.y));e.style.left=n+"px",e.style.top=i+"px"}),document.addEventListener("mouseup",()=>{r=!1,document.body.style.userSelect=""}),e.querySelector("#mcp-close-btn").addEventListener("click",()=>{this.hide()}),e.querySelector("#mcp-pointer-btn").addEventListener("click",()=>{this.togglePointerMode()}),e.querySelector("#mcp-ask-btn").addEventListener("click",()=>{this.handleAction("ask")}),e.querySelector("#mcp-explain-btn").addEventListener("click",()=>{this.handleAction("explain")}),e.querySelector("#mcp-summarize-btn").addEventListener("click",()=>{this.handleAction("summarize")});const i=e.querySelector("#mcp-input");i.addEventListener("keydown",e=>{"Enter"===e.key&&(e.ctrlKey||e.metaKey)&&this.handleAction("ask")}),i.addEventListener("focus",()=>{i.style.borderColor="#667eea"}),i.addEventListener("blur",()=>{i.style.borderColor="#e1e5e9"});const s=undefined;e.querySelector("#mcp-pointer-hint").addEventListener("click",()=>{this.exitPointerMode()})},togglePointerMode(){this.isPointerMode?this.exitPointerMode():this.enterPointerMode()},enterPointerMode(){this.isPointerMode=!0,document.body.style.cursor="crosshair";const e=this.currentPopover.querySelector("#mcp-pointer-hint"),t=this.currentPopover.querySelector("#mcp-pointer-btn");e.style.display="block",t.style.background="rgba(255,255,255,0.4)",document.addEventListener("click",this.handleElementClick,!0),document.addEventListener("mouseover",this.handleElementHover,!0),document.addEventListener("mouseout",this.handleElementUnhover,!0)},exitPointerMode(){if(this.isPointerMode=!1,document.body.style.cursor="",this.currentPopover){const e=this.currentPopover.querySelector("#mcp-pointer-hint"),t=this.currentPopover.querySelector("#mcp-pointer-btn");e.style.display="none",t.style.background="rgba(255,255,255,0.2)"}document.removeEventListener("click",this.handleElementClick,!0),document.removeEventListener("mouseover",this.handleElementHover,!0),document.removeEventListener("mouseout",this.handleElementUnhover,!0),document.querySelectorAll(".mcp-hover-highlight").forEach(e=>{e.classList.remove("mcp-hover-highlight")})},handleElementClick:function(e){if(!window.mcpFloatingAssistant.isPointerMode)return;if(e.target.closest("#mcp-floating-assistant"))return;e.preventDefault(),e.stopPropagation();const t=e.target,n=window.mcpFloatingAssistant.extractElementContext(t),r=window.mcpFloatingAssistant.currentPopover.querySelector("#mcp-input"),o=r.value.trim(),i=o?`${o}\n\nAlso, about this element: ${n}`:`Tell me about this: ${n}`;r.value=i,r.focus(),window.mcpFloatingAssistant.exitPointerMode()},handleElementHover:function(e){if(window.mcpFloatingAssistant.isPointerMode&&!e.target.closest("#mcp-floating-assistant")&&(e.target.classList.add("mcp-hover-highlight"),!document.querySelector("#mcp-hover-styles"))){const e=document.createElement("style");e.id="mcp-hover-styles",e.textContent="\n          .mcp-hover-highlight {\n            outline: 2px solid #667eea !important;\n            outline-offset: 2px !important;\n            background: rgba(102, 126, 234, 0.1) !important;\n          }\n        ",document.head.appendChild(e)}},handleElementUnhover:function(e){window.mcpFloatingAssistant.isPointerMode&&e.target.classList.remove("mcp-hover-highlight")},extractElementContext(e){const t=e.tagName.toLowerCase(),n=e.textContent?.trim().substring(0,100)||"",r=undefined,o=undefined;let i=`${t}${e.id?`#${e.id}`:""}${e.className?`.${e.className.split(" ").join(".")}`:""}`;return n&&(i+=`: "${n}"`),"img"===t&&e.src&&(i+=` (src: ${e.src})`),"a"===t&&e.href&&(i+=` (href: ${e.href})`),e.title&&(i+=` (title: ${e.title})`),i},handleAction(e){const t=this.currentPopover.querySelector("#mcp-input"),n=this.currentPopover.querySelector("#mcp-response"),r=t.value.trim();r?(n.style.display="block",n.innerHTML=`\n        <div style="display: flex; align-items: center; gap: 8px; color: #666;">\n          <div style="\n            width: 16px;\n            height: 16px;\n            border: 2px solid #e1e5e9;\n            border-top: 2px solid #667eea;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n          "></div>\n          Processing your ${e} request...\n        </div>\n        <style>\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        </style>\n      `,setTimeout(()=>{n.innerHTML=`\n          <div style="color: #495057;">\n            <strong>${e.charAt(0).toUpperCase()+e.slice(1)} response:</strong><br>\n            This is where the MCP response would appear. Your request: "${r}"\n            <br><br>\n            <em>Integration with your existing MCP system would go here.</em>\n          </div>\n        `},1500)):t.focus()}},e&&Object.keys(e).length>0&&window.mcpFloatingAssistant.show(e),chrome.runtime.sendMessage({type:"floating_assistant_ready"}).catch(()=>{}))}async function loadAndRunPage(e){a.info(`${cname()}:✅Loading page:`,e);try{let t=!1;if("getContexts"in chrome.runtime){const e=await chrome.runtime.getContexts({contextTypes:["OFFSCREEN_DOCUMENT"]});t=e.length>0,a.info(`${cname()}:Existing offscreen contexts found:`,e.length)}if(t)a.info(`${cname()}:Offscreen document already exists, reusing it`);else try{await chrome.offscreen.createDocument({url:e,reasons:["WORKERS"],justification:"Run QuickJS WebAssembly engine and other heavy processing tasks"}),a.info(`${cname()}:✅Successfully created offscreen document:`,e)}catch(e){if(!e.message.includes("Only a single offscreen document may be created"))throw a.info(`${cname()}:❌Failed to create offscreen document:`,e),e;a.info(`${cname()}:Offscreen document already exists (caught exception)`),t=!0}try{const t=await chrome.runtime.sendMessage({type:"test_offscreen_ping",timestamp:Date.now(),from:"background"});return a.info(`${cname()}:⚡⚡⚡✅Offscreen document response:`,t),{success:!0,scriptPath:e,response:t}}catch(t){return a.info(`${cname()}:⚡⚡⚡No response from offscreen document (this is normal if it doesn't have message handlers yet):`,t.message),{success:!0,scriptPath:e,note:"Offscreen created but no message handler"}}}catch(t){return a.info(`${cname()}:❌Exception in loadAndRunPage:`,t),{success:!1,scriptPath:e,error:t.message}}}chrome.runtime.onInstalled.addListener(async e=>{a.info("⚡ onInstalled event")}),chrome.tabs.onRemoved.addListener((e,t)=>{a.debug(`Tab ${e} closed, isWindowClosing: ${t.isWindowClosing}`),c.has(e)&&(c.delete(e),a.debug(`Removed access token for closed tab ${e}`))}),chrome.runtime.onSuspend.addListener(()=>{a.info("Extension is being suspended - preserving state"),g.healthCheckInterval&&clearInterval(g.healthCheckInterval),chrome.storage.local.set({mcp_connection_state:{lastActivity:g.lastActivity,wasActive:g.isActive,timestamp:Date.now()}});for(const[e,t]of Object.entries(n))if(t&&"function"==typeof t.disconnect)try{t.disconnect(),a.debug(`Gracefully disconnected from ${e}`)}catch(t){a.warn(`Error disconnecting from ${e}:`,t)}}),chrome.runtime.onSuspendCanceled.addListener(()=>{a.info("Extension suspension cancelled - resuming operations"),setupKeepalive(),reconnectAllMcpServers()}),chrome.alarms.onAlarm.addListener(e=>{"keepalive"===e.name&&(updateLastActivity(),chrome.storage.local.get(["mcp_connection_state"],e=>{chrome.runtime.lastError&&a.debug("Storage access during keepalive")}))}),chrome.tabs.onActivated.addListener(e=>{a.debug("Tab activated, updating activity"),t?(updateLastActivity(),checkConnectionHealth()):chrome.tabs.get(e.tabId,e=>{e.url.startsWith("chrome")||setTimeout(()=>performExtensionStartup(),333)})}),chrome.windows.onFocusChanged.addListener(e=>{e!==chrome.windows.WINDOW_ID_NONE&&(a.debug("Window focused, updating activity"),updateLastActivity(),checkConnectionHealth())}),chrome.webNavigation?.onCompleted?.addListener&&chrome.webNavigation.onCompleted.addListener(e=>{0===e.frameId&&(a.debug("Navigation completed, updating activity"),updateLastActivity())}),chrome.runtime.onStartup.addListener(async e=>{a.info("⚡Extension starting up"),chrome.storage.local.get(["mcp_connection_state"],e=>{if(e.mcp_connection_state){const t=e.mcp_connection_state,n=Date.now()-t.timestamp;a.info(`Restored from suspension after ${n}ms`),t.wasActive&&(g.lastActivity=t.lastActivity)}}),performExtensionStartup(e)}),chrome.action.onClicked.addListener(e=>{a.info("🖱️ Extension icon clicked; 📍 Active tab:",e.url),chrome.action.setBadgeText({text:""})}),chrome.runtime.onConnect.addListener(e=>{a.info("🔗 Connection established:",e.name),e.onMessage.addListener(e=>{a.info("📨 Port message:",e)})}),self.addEventListener("activate",e=>{a.info("⚡ Service worker activated"),performExtensionStartup(e)});class ConfigLoader{static loadConfig(e){let t;if("string"==typeof e)try{t=JSON.parse(e)}catch(e){throw new Error(`Invalid JSON: ${e.message}`)}else t=e;const n=JSON.parse(JSON.stringify(t));return this.processObject(n)}static processObject(e){if(null===e||"object"!=typeof e)return e;if(Array.isArray(e))return e.map(e=>this.processObject(e));if("RegExp"===e.__type)return this.reconstructRegExp(e);const t={};for(const[n,r]of Object.entries(e))t[n]=this.processObject(r);return t}static reconstructRegExp(e){try{return new RegExp(e.source,e.flags||"")}catch(e){return a.warn(`Failed to reconstruct RegExp: ${e.message}`),/(?!)/}}static async loadFromFile(e){try{const t=await import("fs"),n=await t.promises.readFile(e,"utf8");return this.loadConfig(n)}catch(t){throw new Error(`Failed to load config from ${e}: ${t.message}`)}}static async loadFromURL(e){try{const t=await fetch(e);if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const n=await t.json();return this.loadConfig(n)}catch(t){throw new Error(`Failed to load config from ${e}: ${t.message}`)}}static validateConfig(e){const t=e["claude.ai"];if(!t)return a.warn("Missing claude.ai configuration"),!1;const n=["friendlyName","pattern","detectChatInput"];for(const e of n)if(!t[e])return a.warn(`Missing required property: ${e}`),!1;return t.pattern instanceof RegExp||(a.warn("Pattern was not reconstructed as RegExp"),!1)}}function useIdleAPI(){chrome.idle.queryState(60,()=>{})}function useDownloadsShelfAPI(){chrome.downloads.setShelfEnabled(!0)}function useSidePanelAPI(){chrome.sidePanel.setOptions({path:"pages/toolbar400x300.html",enabled:!0})}e.globals={useIdleAPI,loadAndRunPage,useDownloadsShelfAPI,useSidePanelAPI};